-- MySQL dump 10.19  Distrib 10.3.29-MariaDB, for debian-linux-gnu (x86_64)
--
-- Host: 127.0.0.1    Database: leajs
-- ------------------------------------------------------
-- Server version	8.0.24

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `links`
--

DROP TABLE IF EXISTS `links`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `links` (
  `id` int NOT NULL AUTO_INCREMENT,
  `a` int DEFAULT NULL,
  `r` int DEFAULT NULL,
  `b` int DEFAULT NULL,
  `data` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  KEY `idx_nodes_a` (`a`),
  KEY `idx_nodes_b` (`b`),
  KEY `idx_nodes_r` (`r`)
) ENGINE=InnoDB AUTO_INCREMENT=583 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `links`
--

LOCK TABLES `links` WRITE;
/*!40000 ALTER TABLE `links` DISABLE KEYS */;
INSERT INTO `links` VALUES (1,1,2,3,'2020-10-08 18:14:44'),(2,4,5,6,'2020-10-08 18:15:10'),(3,4,7,8,'2020-10-08 18:15:25'),(4,4,9,10,'2020-10-08 18:15:33'),(5,11,2,12,'2020-10-08 18:15:42'),(37,11,2,22,'2020-10-21 12:00:14'),(42,11,17,21,'2020-10-21 14:30:26'),(46,4,33,32,'2020-10-21 17:30:57'),(77,11,17,21,'2020-10-21 21:35:50'),(78,11,17,21,'2020-10-21 21:37:08'),(83,133,132,134,'2020-10-23 15:10:34'),(84,133,132,135,'2020-10-23 21:26:20'),(85,133,132,136,'2020-10-23 21:26:42'),(86,133,132,137,'2020-10-24 02:24:35'),(87,133,132,138,'2020-10-24 02:25:04'),(88,133,5,139,'2020-10-24 02:42:01'),(89,133,5,140,'2020-10-24 02:43:20'),(90,133,141,142,'2020-10-24 02:56:40'),(91,133,141,143,'2020-10-24 02:57:19'),(92,133,141,144,'2020-10-24 02:58:01'),(93,133,5,145,'2020-10-24 03:01:51'),(94,133,141,146,'2020-10-24 03:05:41'),(95,133,5,145,'2020-10-24 03:05:59'),(96,133,5,147,'2020-10-24 03:06:20'),(97,133,148,149,'2020-10-26 20:10:21'),(98,133,150,151,'2020-10-26 20:16:02'),(99,133,150,152,'2020-10-26 20:16:18'),(100,133,150,153,'2020-10-26 20:17:58'),(101,133,150,154,'2020-10-26 20:35:49'),(102,133,150,155,'2020-10-26 20:45:13'),(103,133,150,156,'2020-10-26 23:46:09'),(104,133,141,157,'2020-10-27 00:37:50'),(105,133,141,158,'2020-10-27 00:38:51'),(106,133,141,158,'2020-10-27 00:40:54'),(107,133,150,159,'2020-10-27 00:47:36'),(108,133,150,160,'2020-10-27 00:48:07'),(109,133,150,161,'2020-10-27 12:43:27'),(110,133,150,162,'2020-10-27 12:45:17'),(111,133,150,163,'2020-10-27 12:45:45'),(112,133,150,164,'2020-10-27 12:47:20'),(113,133,150,165,'2020-10-27 12:50:28'),(114,133,150,165,'2020-10-27 12:50:59'),(115,133,150,166,'2020-10-27 12:53:39'),(116,133,150,167,'2020-10-27 12:53:39'),(117,133,150,168,'2020-10-27 12:53:39'),(118,133,150,169,'2020-10-27 17:48:58'),(119,133,150,170,'2020-10-27 17:49:28'),(120,133,150,171,'2020-10-27 19:16:16'),(121,133,150,172,'2020-10-27 19:16:42'),(122,133,141,173,'2020-10-27 19:27:32'),(123,133,150,174,'2020-10-27 19:27:53'),(124,133,7,175,'2020-10-27 19:30:53'),(125,133,7,176,'2020-10-27 19:31:56'),(126,133,7,177,'2020-10-27 19:35:02'),(127,133,7,178,'2020-10-27 19:36:59'),(128,133,141,179,'2020-10-27 19:38:35'),(129,133,141,180,'2020-10-27 19:40:34'),(130,133,141,181,'2020-10-27 19:54:55'),(131,133,141,182,'2020-10-27 19:54:55'),(132,133,141,183,'2020-10-27 21:51:14'),(133,133,150,184,'2020-10-27 22:16:34'),(134,133,141,185,'2020-10-27 22:16:39'),(135,133,141,186,'2020-10-27 22:17:25'),(136,133,141,187,'2020-10-27 22:20:27'),(137,133,150,188,'2020-10-27 22:34:51'),(138,133,189,190,'2020-10-27 22:44:51'),(139,133,189,191,'2020-10-27 22:45:01'),(140,133,189,192,'2020-10-27 22:45:56'),(141,133,150,188,'2020-10-27 22:46:30'),(142,133,189,193,'2020-10-27 22:47:38'),(143,133,141,194,'2020-10-27 22:51:50'),(144,133,189,193,'2020-10-27 22:52:20'),(145,133,189,195,'2020-10-27 22:56:33'),(146,133,189,196,'2020-10-27 22:56:55'),(147,133,189,197,'2020-10-27 22:57:52'),(148,133,189,198,'2020-10-27 22:58:25'),(149,133,189,199,'2020-10-27 23:00:13'),(150,133,189,200,'2020-10-27 23:01:51'),(151,133,189,201,'2020-10-27 23:07:28'),(152,133,202,203,'2020-10-27 23:26:58'),(153,133,202,204,'2020-10-27 23:27:10'),(154,133,7,205,'2020-10-27 23:29:01'),(155,133,202,206,'2020-10-27 23:36:34'),(156,133,189,207,'2020-10-27 23:39:14'),(157,133,5,208,'2020-10-27 23:39:45'),(158,133,132,209,'2020-10-27 23:47:44'),(159,133,132,210,'2020-10-27 23:48:46'),(160,133,148,211,'2020-10-27 23:56:20'),(161,133,132,212,'2020-10-28 17:04:24'),(162,133,132,213,'2020-10-28 17:07:10'),(163,133,132,214,'2020-10-28 17:27:59'),(164,11,14,215,'2020-10-28 23:49:46'),(165,11,14,216,'2020-10-28 23:50:41'),(166,11,14,217,'2020-10-28 23:51:57'),(167,11,14,218,'2020-10-28 23:52:22'),(168,11,14,219,'2020-10-28 23:54:29'),(169,11,14,220,'2020-10-28 23:55:19'),(170,11,14,221,'2020-10-28 23:57:41'),(171,11,14,222,'2020-10-28 23:57:50'),(172,11,14,223,'2020-10-28 23:58:45'),(173,11,224,225,'2020-10-29 00:02:07'),(174,1,226,227,'2020-10-29 00:03:40'),(175,1,226,228,'2020-10-29 00:05:10'),(176,1,226,229,'2020-10-29 00:11:04'),(177,1,230,229,'2020-10-29 00:11:22'),(178,1,231,229,'2020-10-29 00:11:33'),(179,1,232,229,'2020-10-29 00:11:47'),(180,11,233,234,'2020-10-29 00:34:10'),(181,11,233,235,'2020-10-29 00:34:23'),(182,11,132,236,'2020-10-29 00:38:05'),(183,11,224,237,'2020-10-29 00:50:36'),(184,11,224,238,'2020-10-29 00:56:09'),(185,11,14,239,'2020-10-29 00:57:34'),(186,11,14,240,'2020-10-29 01:06:10'),(187,11,14,241,'2020-10-29 01:07:16'),(188,133,132,213,'2020-10-29 02:05:56'),(191,11,224,243,'2020-10-29 02:22:05'),(192,11,233,244,'2020-10-29 02:23:42'),(193,133,132,245,'2020-10-29 21:56:49'),(194,11,224,246,'2020-10-29 22:35:07'),(195,11,224,247,'2020-10-30 18:50:23'),(196,11,224,246,'2020-11-01 01:51:38'),(197,11,233,248,'2020-11-12 22:45:08'),(198,11,233,249,'2020-11-12 22:47:32'),(199,11,233,250,'2020-11-12 22:52:14'),(200,251,224,252,'2020-11-15 23:09:20'),(201,251,224,246,'2020-11-15 23:11:23'),(202,251,224,253,'2020-11-15 23:41:37'),(203,251,224,254,'2020-11-16 00:46:43'),(204,133,132,255,'2020-11-16 00:57:49'),(205,133,132,256,'2020-11-16 00:58:47'),(207,1,132,258,'2020-11-16 01:19:15'),(208,133,132,259,'2020-11-16 01:20:25'),(209,260,224,261,'2020-11-16 12:55:19'),(210,260,224,262,'2020-11-16 12:59:34'),(211,260,224,263,'2020-11-16 14:16:16'),(212,260,224,264,'2020-11-16 14:18:17'),(213,260,224,265,'2020-11-16 14:18:38'),(214,260,224,266,'2020-11-16 14:18:42'),(215,260,224,267,'2020-11-16 14:25:25'),(216,260,224,268,'2020-11-16 14:27:36'),(217,11,224,269,'2020-11-18 02:19:06'),(219,1,2,270,'2020-11-18 02:26:40'),(224,273,132,276,'2020-11-18 02:44:54'),(227,1,277,279,'2020-11-18 02:51:22'),(229,271,132,280,'2020-11-18 02:53:59'),(231,273,132,281,'2020-11-18 02:55:13'),(233,271,283,284,'2020-11-18 03:03:56'),(236,271,285,287,'2020-11-18 03:07:24'),(238,271,289,288,'2020-11-18 03:09:27'),(240,271,290,291,'2020-11-18 03:12:04'),(242,271,292,293,'2020-11-18 03:15:03'),(244,271,294,295,'2020-11-18 03:17:39'),(246,271,296,297,'2020-11-18 03:20:32'),(248,271,299,300,'2020-11-18 03:21:31'),(250,271,299,301,'2020-11-18 03:22:47'),(251,133,132,302,'2020-11-18 13:49:38'),(252,133,132,303,'2020-11-18 13:52:48'),(254,271,304,305,'2020-11-18 13:56:30'),(255,11,224,306,'2020-11-18 14:28:56'),(258,271,307,309,'2020-11-18 14:38:24'),(262,310,132,313,'2020-11-18 18:39:51'),(263,11,224,314,'2020-11-18 18:43:36'),(265,310,315,316,'2020-11-18 19:00:27'),(268,310,294,318,'2020-11-18 19:03:01'),(270,310,299,319,'2020-11-18 19:22:57'),(272,310,132,320,'2020-11-18 19:27:25'),(274,310,132,321,'2020-11-18 19:28:46'),(276,310,323,322,'2020-11-18 19:34:52'),(279,310,132,325,'2020-11-18 19:42:48'),(281,310,315,326,'2020-11-18 19:46:47'),(283,271,285,327,'2020-11-18 19:50:36'),(285,271,328,329,'2020-11-18 19:54:56'),(287,310,330,331,'2020-11-18 20:02:04'),(289,310,315,332,'2020-11-18 20:05:22'),(291,310,132,333,'2020-11-18 20:19:31'),(293,310,132,334,'2020-11-18 20:21:46'),(295,310,315,335,'2020-11-18 22:35:17'),(297,310,315,336,'2020-11-18 22:35:59'),(299,310,132,337,'2020-11-18 22:38:30'),(300,11,224,338,'2020-11-18 22:43:01'),(301,11,224,339,'2020-11-19 02:28:30'),(302,11,224,340,'2020-11-19 18:19:22'),(304,341,132,342,'2020-11-19 18:23:10'),(306,310,330,343,'2020-11-19 18:44:08'),(308,341,294,344,'2020-11-19 18:46:03'),(310,341,132,345,'2020-11-19 18:50:59'),(311,271,283,346,'2020-11-19 19:56:54'),(312,271,347,348,'2020-11-19 19:57:01'),(313,11,224,349,'2020-11-19 20:05:43'),(314,271,283,350,'2020-11-19 20:56:55'),(315,271,347,351,'2020-11-19 21:03:47'),(316,341,352,353,'2020-11-19 21:26:16'),(317,341,352,354,'2020-11-19 21:28:02'),(318,341,352,355,'2020-11-19 21:29:02'),(319,341,352,356,'2020-11-19 21:29:45'),(320,341,357,358,'2020-11-19 21:43:26'),(322,341,294,359,'2020-11-19 21:44:04'),(323,341,352,360,'2020-11-19 21:47:26'),(324,341,361,362,'2020-11-19 21:53:52'),(325,271,363,364,'2020-11-19 21:55:39'),(326,310,315,365,'2020-11-19 22:01:59'),(327,341,352,366,'2020-11-19 22:11:13'),(328,341,352,356,'2020-11-19 22:15:42'),(329,271,283,367,'2020-11-19 22:17:21'),(330,271,368,369,'2020-11-19 22:30:52'),(331,271,347,370,'2020-11-19 22:31:17'),(332,271,368,371,'2020-11-19 22:32:03'),(333,341,368,372,'2020-11-19 22:48:41'),(334,310,315,373,'2020-11-19 23:43:49'),(335,11,224,374,'2020-11-20 13:37:27'),(336,341,315,375,'2020-11-20 22:07:43'),(338,341,132,377,'2020-11-20 22:20:55'),(340,310,378,379,'2020-11-20 22:23:22'),(341,251,224,380,'2020-11-20 22:38:46'),(342,310,378,381,'2020-11-20 22:41:45'),(344,310,383,384,'2020-11-20 22:49:08'),(346,260,224,386,'2020-11-21 03:11:06'),(347,387,132,388,'2020-11-23 02:01:05'),(348,387,389,390,'2020-11-23 02:07:38'),(349,387,389,391,'2020-11-23 02:10:17'),(350,310,392,393,'2020-11-23 02:13:16'),(351,387,389,394,'2020-11-23 02:15:21'),(352,387,389,395,'2020-11-23 02:16:25'),(353,396,397,398,'2020-12-01 23:12:47'),(354,341,292,399,'2020-12-17 23:16:24'),(355,400,294,401,'2020-12-17 23:17:36'),(356,400,294,402,'2020-12-17 23:20:33'),(357,11,403,404,'2020-12-28 17:57:07'),(358,310,406,405,'2020-12-29 18:19:28'),(359,310,407,408,'2020-12-29 18:25:26'),(360,11,224,409,'2021-01-04 20:51:55'),(363,310,132,412,'2021-01-04 20:53:20'),(365,11,224,413,'2021-01-19 21:18:02'),(366,387,132,388,'2021-01-19 21:22:01'),(367,387,132,415,'2021-01-19 21:55:56'),(368,387,417,416,'2021-01-19 21:55:56'),(369,11,224,418,'2021-01-19 23:13:40'),(370,387,389,419,'2021-01-19 23:20:26'),(371,387,420,421,'2021-01-19 23:39:35'),(372,387,420,422,'2021-01-19 23:45:13'),(373,387,417,423,'2021-01-19 23:51:29'),(374,387,389,424,'2021-01-19 23:55:59'),(376,427,420,428,'2021-01-20 01:20:20'),(381,427,389,424,'2021-01-20 01:41:24'),(383,427,417,423,'2021-01-20 01:43:04'),(384,11,224,434,'2021-01-20 01:45:32'),(385,11,224,435,'2021-01-20 01:46:45'),(388,11,224,436,'2021-01-20 01:52:56'),(389,310,315,437,'2021-01-20 01:57:28'),(390,11,224,438,'2021-01-20 12:49:48'),(393,11,224,439,'2021-01-20 12:57:46'),(394,341,294,440,'2021-01-20 13:02:40'),(395,341,292,441,'2021-01-20 13:03:32'),(396,273,294,442,'2021-01-20 13:08:38'),(397,11,224,443,'2021-01-20 13:17:14'),(399,310,406,444,'2021-01-20 13:25:26'),(400,11,224,445,'2021-01-20 14:05:24'),(401,446,294,447,'2021-01-20 14:10:29'),(402,446,323,448,'2021-01-20 14:22:30'),(403,446,323,449,'2021-01-20 14:22:53'),(404,446,323,450,'2021-01-20 14:27:13'),(405,446,323,451,'2021-01-20 14:27:35'),(406,446,452,453,'2021-01-20 14:30:44'),(407,446,452,454,'2021-01-20 14:33:57'),(408,133,189,455,'2021-01-20 14:37:32'),(409,133,189,456,'2021-01-20 14:38:06'),(410,133,189,455,'2021-01-20 14:40:06'),(411,446,452,457,'2021-01-20 14:41:42'),(412,446,323,458,'2021-01-20 14:42:31'),(413,446,452,454,'2021-01-20 14:42:49'),(414,446,459,460,'2021-01-20 14:44:24'),(415,446,452,461,'2021-01-20 14:46:36'),(416,446,292,462,'2021-01-20 14:54:17'),(417,11,14,463,'2021-01-20 18:02:26'),(418,464,294,465,'2021-01-20 19:51:33'),(419,464,299,466,'2021-01-20 19:56:52'),(420,464,299,467,'2021-01-20 19:57:45'),(421,464,299,468,'2021-01-20 20:00:06'),(422,464,299,469,'2021-01-20 20:01:57'),(423,470,132,471,'2021-01-20 21:04:46'),(424,470,294,472,'2021-01-20 21:20:31'),(425,470,470,473,'2021-01-20 22:24:37'),(426,474,475,476,'2021-01-20 22:26:06'),(427,470,470,477,'2021-01-20 22:38:39'),(428,478,479,480,'2021-01-20 23:41:25'),(429,470,481,482,'2021-01-20 23:42:40'),(430,478,233,483,'2021-01-20 23:43:39'),(431,484,475,485,'2021-01-20 23:47:48'),(432,478,486,487,'2021-01-20 23:49:20'),(433,488,475,489,'2021-01-20 23:50:19'),(434,478,486,490,'2021-01-21 00:11:40'),(435,478,486,491,'2021-01-21 00:13:33'),(436,478,492,493,'2021-01-21 00:18:21'),(437,478,492,494,'2021-01-21 00:22:17'),(438,478,492,495,'2021-01-21 00:23:39'),(439,464,292,496,'2021-01-21 00:29:55'),(440,478,486,497,'2021-01-21 00:45:35'),(441,11,498,499,'2021-01-21 00:48:07'),(442,11,498,500,'2021-01-21 00:51:06'),(443,478,501,502,'2021-01-21 00:51:29'),(444,504,475,503,'2021-01-21 00:52:17'),(445,464,294,505,'2021-01-21 00:59:53'),(446,478,486,506,'2021-01-21 01:00:48'),(447,478,501,507,'2021-01-21 01:00:51'),(448,478,501,508,'2021-01-21 01:01:35'),(449,478,479,509,'2021-01-21 01:02:33'),(450,271,510,511,'2021-01-21 01:04:12'),(451,512,475,513,'2021-01-21 01:07:27'),(452,478,514,515,'2021-01-21 01:09:51'),(453,464,294,516,'2021-01-21 01:12:37'),(454,478,517,518,'2021-01-21 01:13:15'),(455,519,475,520,'2021-01-21 01:14:02'),(456,519,475,521,'2021-01-21 01:14:09'),(457,464,294,522,'2021-01-21 03:21:32'),(458,464,292,523,'2021-01-21 19:57:49'),(459,478,517,524,'2021-01-21 21:55:38'),(460,478,517,525,'2021-01-21 21:56:09'),(461,478,517,526,'2021-01-21 21:57:12'),(462,464,294,527,'2021-01-21 22:49:31'),(463,528,294,529,'2021-01-26 15:57:33'),(464,528,530,531,'2021-01-26 16:08:14'),(465,11,233,532,'2021-01-26 21:29:28'),(466,533,534,535,'2021-01-26 21:39:15'),(467,536,534,537,'2021-01-26 21:40:21'),(468,536,534,538,'2021-01-26 21:43:04'),(469,536,534,539,'2021-01-26 21:43:04'),(470,536,534,540,'2021-01-26 21:57:10'),(471,536,534,541,'2021-01-26 21:57:48'),(472,536,534,542,'2021-01-26 21:58:39'),(473,533,534,543,'2021-01-26 22:02:20'),(474,536,534,544,'2021-01-26 22:02:32'),(475,533,534,545,'2021-01-26 22:03:30'),(476,533,534,546,'2021-01-26 22:06:24'),(477,427,420,547,'2021-01-26 23:00:55'),(478,427,548,549,'2021-01-26 23:05:31'),(479,310,330,550,'2021-01-26 23:10:43'),(480,310,315,551,'2021-01-26 23:13:04'),(481,310,315,552,'2021-01-26 23:22:49'),(482,310,330,553,'2021-01-26 23:25:19'),(483,310,315,554,'2021-01-26 23:30:06'),(484,341,368,555,'2021-01-28 15:55:47'),(485,271,347,556,'2021-01-28 16:11:52'),(486,310,315,557,'2021-01-28 18:50:40'),(487,271,363,558,'2021-01-28 18:57:12'),(488,310,315,559,'2021-01-28 18:57:45'),(489,560,294,561,'2021-01-28 18:59:56'),(490,560,132,562,'2021-01-28 19:06:19'),(491,560,132,563,'2021-01-28 19:17:25'),(492,560,564,565,'2021-01-28 20:33:11'),(493,560,564,566,'2021-01-28 20:33:45'),(494,560,567,568,'2021-01-28 20:37:07'),(495,560,569,570,'2021-01-29 11:58:28'),(496,341,368,571,'2021-01-29 13:33:26'),(497,560,368,572,'2021-01-29 13:37:32'),(498,560,132,573,'2021-01-29 13:40:38'),(499,560,132,574,'2021-01-29 13:43:06'),(500,575,368,576,'2021-01-29 13:49:00'),(501,575,368,577,'2021-01-29 13:51:00'),(502,575,352,578,'2021-01-29 13:59:45'),(503,575,352,579,'2021-01-29 14:01:22'),(504,11,224,580,'2021-07-02 21:09:52'),(505,11,224,581,'2021-07-02 21:10:21'),(506,11,224,582,'2021-07-02 21:34:10'),(507,11,224,583,'2021-07-02 21:44:32'),(508,273,294,584,'2021-07-02 22:34:05'),(510,251,224,585,'2021-07-02 23:00:49'),(511,251,224,586,'2021-07-02 23:02:01'),(512,251,224,587,'2021-07-02 23:09:19'),(513,588,589,590,'2021-07-02 23:09:50'),(514,588,591,592,'2021-07-02 23:10:21'),(515,588,591,593,'2021-07-02 23:11:10'),(516,251,224,594,'2021-07-02 23:18:54'),(517,251,224,595,'2021-07-02 23:21:29'),(518,251,224,596,'2021-07-02 23:22:23'),(519,251,14,597,'2021-07-02 23:49:33'),(520,251,224,598,'2021-07-02 23:49:35'),(521,251,599,600,'2021-07-02 23:49:37'),(523,251,599,603,'2021-07-02 23:52:42'),(524,251,599,604,'2021-07-02 23:57:56'),(525,251,599,605,'2021-07-03 00:05:57'),(527,251,601,607,'2021-07-03 03:41:15'),(529,251,601,608,'2021-07-03 03:52:07'),(530,1,609,610,'2021-07-03 15:04:13'),(531,1,609,611,'2021-07-04 03:49:33'),(532,4,5,612,'2021-07-08 18:03:15'),(533,4,7,613,'2021-07-08 18:11:40'),(534,133,150,614,'2021-07-08 18:15:17'),(535,133,5,615,'2021-07-08 18:16:18'),(536,4,9,616,'2021-07-08 18:18:04'),(537,4,33,617,'2021-07-08 18:18:35'),(538,133,7,618,'2021-07-08 18:23:27'),(539,11,224,619,'2021-07-08 18:24:20'),(540,11,233,620,'2021-07-08 18:26:22'),(541,621,622,623,'2021-07-08 18:41:28'),(542,1,132,624,'2021-07-08 18:45:22'),(543,11,132,625,'2021-07-08 18:45:43'),(544,133,132,626,'2021-07-08 18:46:03'),(545,11,233,627,'2021-07-08 18:51:22'),(546,446,628,629,'2021-07-08 18:53:25'),(547,446,630,631,'2021-07-08 18:53:49'),(548,133,148,632,'2021-07-08 22:09:08'),(549,133,148,633,'2021-07-08 22:10:49'),(550,1,132,634,'2021-07-08 22:22:31'),(551,635,636,637,'2021-07-08 22:29:24'),(552,635,636,638,'2021-07-08 22:30:35'),(553,635,636,639,'2021-07-08 22:32:49'),(554,635,636,640,'2021-07-08 22:32:58'),(555,635,636,641,'2021-07-08 22:34:54'),(556,635,636,641,'2021-07-08 22:36:26'),(557,635,636,642,'2021-07-08 22:39:06'),(558,635,636,643,'2021-07-08 22:42:38'),(559,635,636,644,'2021-07-08 22:44:40'),(560,635,636,645,'2021-07-08 22:45:19'),(561,635,646,647,'2021-07-08 22:47:43'),(562,11,233,648,'2021-07-09 01:37:51'),(563,11,132,649,'2021-07-09 01:38:11'),(564,11,650,651,'2021-07-09 02:28:58'),(565,652,14,653,'2021-07-09 02:47:12'),(566,652,654,655,'2021-07-09 02:47:22'),(567,652,656,657,'2021-07-09 02:47:25'),(568,635,636,658,'2021-07-09 21:20:36'),(569,659,660,661,'2021-07-10 04:15:58'),(570,659,660,662,'2021-07-10 04:30:39'),(571,11,2,663,'2021-07-13 14:08:22'),(572,251,664,665,'2021-07-13 14:20:53'),(573,251,599,666,'2021-07-13 14:22:29'),(574,659,667,668,'2021-07-15 23:06:22'),(575,659,669,670,'2021-07-15 23:07:12'),(576,659,660,671,'2021-07-16 00:14:52'),(577,659,667,672,'2021-07-16 00:25:39'),(578,251,673,674,'2021-07-16 00:26:33'),(579,251,673,674,'2021-07-16 00:28:07'),(580,251,224,675,'2021-07-16 00:36:25'),(581,11,676,677,'2021-07-16 00:39:45'),(582,251,676,678,'2021-07-16 00:45:41');
/*!40000 ALTER TABLE `links` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `symbols`
--

DROP TABLE IF EXISTS `symbols`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `symbols` (
  `id` int NOT NULL AUTO_INCREMENT,
  `type` varchar(255) CHARACTER SET utf8 COLLATE utf8_unicode_ci DEFAULT NULL,
  `info` mediumtext CHARACTER SET utf8 COLLATE utf8_unicode_ci,
  `data` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=679 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `symbols`
--

LOCK TABLES `symbols` WRITE;
/*!40000 ALTER TABLE `symbols` DISABLE KEYS */;
INSERT INTO `symbols` VALUES (1,'string','Naive','2020-10-08 18:14:44'),(2,'string','EmptyAction','2020-10-08 18:14:44'),(3,'js','new (function EmptyAction() {\n	this.act = function (args, callback, reject) {\n		// your code here\n		callback(true); // return statement\n	};\n})();','2020-10-08 18:14:44'),(4,'string','Brain','2020-10-08 18:15:10'),(5,'string','reason','2020-10-08 18:15:10'),(6,'js','new (function reason() {\n	this.act = function (args, callback, reject) {\n		let agent = this.agent;\n		agent.see(\'getLibraries\', null, (brains) => {\n		    let brain = brains[0];\n		    brain.reason(args, callback);\n		});\n	};\n})();','2020-10-08 18:15:10'),(7,'string','tie','2020-10-08 18:15:25'),(8,'js','new (function tie() {\n	this.act = function (args, callback, reject) {\n		let agent = this.agent;\n		agent.see(\'getLibraries\', null, (brains) => {\n		    let brain = brains[0];\n		    brain.tie(args, callback);\n		});\n	};\n})();','2020-10-08 18:15:25'),(9,'string','brainGet','2020-10-08 18:15:33'),(10,'js','new (function get() {\n	this.act = function (args, callback, reject) {\n		let agent = this.agent;\n		agent.see(\'getLibraries\', null, (brains) => {\n		    let brain = brains[0];\n		    brain.get(args, callback);\n		});\n	};\n})();','2020-10-08 18:15:33'),(11,'string','Controller','2020-10-08 18:15:42'),(12,'js','new (function EmptyAction() {\n	this.act = function (args, callback, reject) {\n		let req = args[0];\n		let res = args[1];\n		// your code here\n		callback(true); // return statement\n	};\n})();','2020-10-08 18:15:42'),(14,'string','index','2020-10-08 21:55:28'),(16,'js','new (function EmptyAction() {\n	this.act = function (args, resolve, reject) {\n		// your code here\n	\resolve(true);\n	};\n})();','2020-10-20 17:09:18'),(17,'string','preDispatch','2020-10-20 17:11:28'),(18,'js','new (function PreDispatch() {\n	this.act = function (args, resolve, reject) {\n		let req = args[0];\n		let res = args[1];\n		// your code here\n	\resolve(true);\n	};\n})();','2020-10-20 17:11:28'),(19,'js','new (function EmptyAction() {\n	this.act = function (args, resolve, reject) {\n		let req = args[0];\n		let res = args[1];\n		// your code here\n		resolve(true);\n	};\n})();','2020-10-20 17:48:24'),(20,'js','new (function EmptyAction() {\r 	this.act = function (args, resolve, reject) {\r 		// your code here\r 		console.log(\'MIND LIVE\', this.agent.toString()); resolve();\r 	};\r })();','2020-10-21 11:43:57'),(21,'js','new (function PreDispatch() {\n	this.act = function (args, resolve, reject) {\n		let req = args[0];\n		let res = args[1];\n		// your code here\n		resolve(true);\n	};\n})();','2020-10-21 11:46:26'),(22,'js','new (function EmptyAction() {\n	this.act = function (args, resolve, reject) {\n		let req = args[0];\n		let res = args[1];\n		// your code here\n		resolve();\n	};\n})();','2020-10-21 12:00:14'),(32,'js','new (function brainSet() {\n	this.act = function (args, resolve, reject) {\n		let agent = this.agent;\n		agent.see(\'getLibraries\', null, (brains) => {\n		    let brain = brains[0];\n		    brain.set(args, resolve, reject);\n		});\n	};\n})();','2020-10-21 17:30:57'),(33,'string','brainSet','2020-10-21 17:30:57'),(37,'oi','mundo','2020-10-21 17:31:31'),(47,'oi','mundo','2020-10-21 18:47:14'),(48,'oi','mundo','2020-10-21 18:47:14'),(58,'oi','mundo','2020-10-21 18:50:20'),(59,'oi','mundo','2020-10-21 18:50:20'),(63,'oi','mundo','2020-10-21 20:52:37'),(64,'oi','mundo','2020-10-21 20:52:37'),(68,'oi','mundo','2020-10-21 20:53:39'),(69,'oi','mundo','2020-10-21 20:53:39'),(73,'oi','mundo','2020-10-21 20:53:56'),(107,'oi','mundo','2020-10-21 20:55:03'),(108,'oi','mundo','2020-10-21 20:55:03'),(118,'oi','mundo','2020-10-21 20:55:23'),(119,'oi','mundo','2020-10-21 20:55:23'),(129,'oi','mundo','2020-10-21 23:16:18'),(130,'oi','mundo','2020-10-21 23:16:18'),(131,'string','_jsController','2020-10-23 03:48:03'),(132,'string','live','2020-10-23 03:48:03'),(133,'string','BrainController','2020-10-23 15:10:34'),(134,'js','new (function live() {\n	this.act = function (args, callback, reject) {\n	    let options = Object.assign({\n			database: \'lea\'\n		}, args);\n		this.agent.see(\'setLibrary\', new MySQLBrain(options));\n		callback(true); // return statement\n	};\n})();','2020-10-23 15:10:34'),(135,'js','new (function live() {\n	this.act = function (args, callback, reject) {\n	    let MySQLBrain = (await import(\'./mysql_brain.js\')).MySQLBrain;\n	    let options = Object.assign({\n			database: \'lea\'\n		}, args);\n		this.agent.see(\'setLibrary\', new MySQLBrain(options));\n		callback(true); // return statement\n	};\n})();','2020-10-23 21:26:20'),(136,'js','new (function live() {\n	this.act = async function (args, callback, reject) {\n	    let MySQLBrain = (await import(\'./mysql_brain.js\')).MySQLBrain;\n	    let options = Object.assign({\n			database: \'lea\'\n		}, args);\n		this.agent.see(\'setLibrary\', new MySQLBrain(options));\n		callback(true); // return statement\n	};\n})();','2020-10-23 21:26:42'),(137,'js','new (function live() {\n	this.act = async function (args, callback, reject) {\n	    let MySQLBrain = (await import(\'./mysql_brain.js\')).MySQLBrain;\n	    let options = Object.assign({\n			database: \'lea\'\n		}, args);\n		this.agent.library = new MySQLBrain(options));\n		callback(true); // return statement\n	};\n})();','2020-10-24 02:24:35'),(138,'js','new (function live() {\n	this.act = async function (args, callback, reject) {\n	    let MySQLBrain = (await import(\'./mysql_brain.js\')).MySQLBrain;\n	    let options = Object.assign({\n			database: \'lea\'\n		}, args);\n		this.agent.library = new MySQLBrain(options);\n		callback(true); // return statement\n	};\n})();','2020-10-24 02:25:04'),(139,'js','new (function reason() {\n	this.act = function (args, resolve, reject) {\n		let req = args[0];\n		let res = args[1];\n		let agent = this.agent;\n		agent.see(\'getLinkFromRequest\', args).then(link => {\n	    	agent.library.reason(link, resolve, reject);\n	    });\n	};\n})();','2020-10-24 02:42:01'),(140,'js','new (function reason() {\n	this.act = function (args, resolve, reject) {\n		let req = args[0];\n		let res = args[1];\n		let agent = this.agent;\n		agent.see(\'getLinkFromRequest\', args).then(link => {\n	    	agent.library.reason(link, links => {\n	    	    res.send(links);\n	    	});\n	    });\n	};\n})();','2020-10-24 02:43:19'),(141,'string','getLinkFromRequest','2020-10-24 02:56:40'),(142,'js','new (function getLinkFromRequest() {\n	this.act = function (args, resolve, reject) {\n		let req = args[0];\n		let res = args[1];\n		\n		let query = url.parse(req.url,true).query;\n		resolve(query);\n	};\n})();','2020-10-24 02:56:40'),(143,'js','new (function getLinkFromRequest() {\n	this.act = async function (args, resolve, reject) {\n		let req = args[0];\n		let res = args[1];\n		let url = await import(\'url\');\n		let query = url.parse(req.url,true).query;\n		resolve(query);\n	};\n})();','2020-10-24 02:57:19'),(144,'js','new (function getLinkFromRequest() {\n	this.act = async function (args, resolve, reject) {\n		let req = args[0];\n		let res = args[1];\n		let url = await import(\'url\');\n		let query = url.parse(req.url,true).query;\n		\n		console.log(\'GETLINK\', query);\n		resolve(query);\n	};\n})();','2020-10-24 02:58:01'),(145,'js','new (function reason() {\n	this.act = function (args, resolve, reject) {\n		let req = args[0];\n		let res = args[1];\n		let agent = this.agent;\n		agent.see(\'getLinkFromRequest\', args).then(link => {\n	    	agent.library.reason(link, links => {\n	    	    res.json(links);\n	    	});\n	    });\n	};\n})();','2020-10-24 03:01:50'),(146,'js','new (function getLinkFromRequest() {\n	this.act = async function (args, resolve, reject) {\n		let req = args[0];\n		let res = args[1];\n		\n		let brain = await import(\'./brain.js\');\n		let Symbol = brain.Symbol;\n		let Link = brain.Link;\n		\n		let url = await import(\'url\');\n		let query = url.parse(req.url,true).query;\n		let a = null;\n		let r = null;\n		let b = null;\n		if (query[\'a[id]\']) {\n		    a = new Symbol(query[\'a[id]\']);\n		}\n		let link = new Link(a, r, b);\n		console.log(\'GETLINK\', query);\n		resolve(link);\n	};\n})();','2020-10-24 03:05:41'),(147,'js','new (function reason() {\n	this.act = function (args, resolve, reject) {\n		let req = args[0];\n		let res = args[1];\n		let agent = this.agent;\n		agent.see(\'getLinkFromRequest\', args).then(link => {\n		    console.log(\'REASON\', link);\n	    	agent.library.reason(link, links => {\n	    	    res.json(links);\n	    	});\n	    });\n	};\n})();','2020-10-24 03:06:20'),(148,'string','gets','2020-10-26 20:10:20'),(149,'js','new (function gets() {\n	this.act = function (args, resolve, reject) {\n		let req = args[0];\n		let res = args[1];\n		let agent = this.agent;\n		agent.see(\'getSymbolFromRequest\', args).then(symbol => {\n		    console.log(\'GETS\', symbol);\n	    	agent.library.get(symbol, symbols => {\n	    	    res.json(symbols);\n	    	});\n	    });\n	};\n})();','2020-10-26 20:10:20'),(150,'string','getSymbolFromRequest','2020-10-26 20:16:02'),(151,'js','new (function getSymbolFromRequest() {\n	this.act = function (args, resolve, reject) {\n		let req = args[0];\n		let res = args[1];\n		\n		let brain = await import(\'./brain.js\');\n		let Symbol = brain.Symbol;\n		\n		let url = await import(\'url\');\n		let query = url.parse(req.url,true).query;\n		let s = new Symbol(query.id, query.type, query.info);\n		resolve(s);\n	};\n})();','2020-10-26 20:16:02'),(152,'js','new (function getSymbolFromRequest() {\n	this.act = async function (args, resolve, reject) {\n		let req = args[0];\n		let res = args[1];\n		\n		let brain = await import(\'./brain.js\');\n		let Symbol = brain.Symbol;\n		\n		let url = await import(\'url\');\n		let query = url.parse(req.url,true).query;\n		let s = new Symbol(query.id, query.type, query.info);\n		resolve(s);\n	};\n})();','2020-10-26 20:16:18'),(153,'js','new (function getSymbolFromRequest() {\n	this.act = async function (args, resolve, reject) {\n		let req = args[0];\n		let res = args[1];\n		\n		let brain = await import(\'./brain.js\');\n		let Symbol = brain.Symbol;\n		\n		let url = await import(\'url\');\n		let query = url.parse(req.url,true).query;\n		console.log(\'QUERY\', query);\n		let s = new Symbol(query.id, query.type, query.info);\n		resolve(s);\n	};\n})();','2020-10-26 20:17:58'),(154,'js','new (function getSymbolFromRequest() {\n	this.act = async function (args, resolve, reject) {\n		let req = args[0];\n		let res = args[1];\n		\n		let brain = await import(\'./brain.js\');\n		let Symbol = brain.Symbol;\n		\n		let url = await import(\'url\');\n		let query = url.parse(req.url,true).query;\n		let s = Object.assign({\n		    id: 0,\n		    type: null,\n		    info: null\n		}, query);\n		console.log(\'QUERY\', s);\n		let symbol = new Symbol(s.id, s.type, s.info);\n		resolve(symbol);\n	};\n})();','2020-10-26 20:35:49'),(155,'js','new (function getSymbolFromRequest() {\n	this.act = async function (args, resolve, reject) {\n		let req = args[0];\n		let res = args[1];\n		\n		let brain = await import(\'./brain.js\');\n		let Symbol = brain.Symbol;\n		\n		let url = await import(\'url\');\n		let query = url.parse(req.url,true).query;\n		let s = Object.assign({\n		    id: 0,\n		    type: null,\n		    info: null\n		}, query);\n		console.log(\'REQ1\', req.param)\n		console.log(\'REQ2\', req.params)\n		console.log(\'REQ3\', req.body)\n		let symbol = new Symbol(s.id, s.type, s.info);\n		resolve(symbol);\n	};\n})();','2020-10-26 20:45:13'),(156,'js','new (function getSymbolFromRequest() {\n	this.act = async function (args, resolve, reject) {\n		let req = args[0];\n		let res = args[1];\n		\n		let brain = await import(\'./brain.js\');\n		let Symbol = brain.Symbol;\n		\n		let url = await import(\'url\');\n		let query = url.parse(req.url,true).query;\n		let s = Object.assign({\n		    id: 0,\n		    type: null,\n		    info: null\n		}, query);\n		console.log(\'REQ1\', req.param(\'id\'));\n		console.log(\'REQ2\', req.param(\'type\'))\n		console.log(\'REQ3\', req.param(\'info\'))\n		let symbol = new Symbol(s.id, s.type, s.info);\n		resolve(symbol);\n	};\n})();','2020-10-26 23:46:09'),(157,'js','new (function getLinkFromRequest() {\n	this.act = async function (args, resolve, reject) {\n		let req = args[0];\n		let res = args[1];\n		\n		let brain = await import(\'./brain.js\');\n		let Symbol = brain.Symbol;\n		let Link = brain.Link;\n		\n		let url = await import(\'url\');\n		let query = url.parse(req.url,true).query;\n		let l = {\n		    a: new Symbol(),\n		    r: new Symbol(),\n		    b: new Symbol()\n		};\n		for (let p in l) {\n    		if (query[p + \'[id]\']) {\n    		    l[p].id = query[p + \'[id]\'];\n    		}\n    		if (query[p + \'[type]\']) {\n    		    l[p].id = query[p + \'[type]\'];\n    		}\n    		if (query[p + \'[info]\']) {\n    		    l[p].id = query[p + \'[info]\'];\n    		}\n		}\n		let link = new Link(l.a, l.r, l.b);\n		console.log(\'GETLINK\', query);\n		resolve(link);\n	};\n})();','2020-10-27 00:37:50'),(158,'js','new (function getLinkFromRequest() {\n	this.act = async function (args, resolve, reject) {\n		let req = args[0];\n		let res = args[1];\n		\n		let brain = await import(\'./brain.js\');\n		let Symbol = brain.Symbol;\n		let Link = brain.Link;\n		\n		let url = await import(\'url\');\n		let query = url.parse(req.url,true).query;\n		let l = {\n		    a: new Symbol(),\n		    r: new Symbol(),\n		    b: new Symbol()\n		};\n		for (let p in l) {\n    		if (query[p + \'[id]\']) {\n    		    l[p].id = query[p + \'[id]\'];\n    		}\n    		if (query[p + \'[type]\']) {\n    		    l[p].type = query[p + \'[type]\'];\n    		}\n    		if (query[p + \'[info]\']) {\n    		    l[p].info = query[p + \'[info]\'];\n    		}\n		}\n		let link = new Link(l.a, l.r, l.b);\n		console.log(\'GETLINK\', query);\n		resolve(link);\n	};\n})();','2020-10-27 00:38:51'),(159,'js','new (function getSymbolFromRequest() {\n	this.act = async function (args, resolve, reject) {\n		let req = args[0];\n		let res = args[1];\n		\n		let brain = await import(\'./brain.js\');\n		let Symbol = brain.Symbol;\n		\n		let url = await import(\'url\');\n		let query = url.parse(req.url,true).query;\n		let s = Object.assign({\n		    id: req.params.id || req.body.id,\n		    type: req.params.type || req.body.type,\n		    info: req.params.info || req.body.info\n		}, query);\n		let symbol = new Symbol(s.id, s.type, s.info);\n		resolve(symbol);\n	};\n})();','2020-10-27 00:47:36'),(160,'js','new (function getSymbolFromRequest() {\n	this.act = async function (args, resolve, reject) {\n		let req = args[0];\n		let res = args[1];\n		\n		let brain = await import(\'./brain.js\');\n		let Symbol = brain.Symbol;\n		\n		let url = await import(\'url\');\n		let query = url.parse(req.url,true).query;\n		let s = Object.assign({\n		    id: req.params.id || req.body.id || 0,\n		    type: req.params.type || req.body.type || \'\',\n		    info: req.params.info || req.body.info || null\n		}, query);\n		let symbol = new Symbol(s.id, s.type, s.info);\n		resolve(symbol);\n	};\n})();','2020-10-27 00:48:07'),(161,'js','new (function getSymbolFromRequest() {\n	this.act = async function (args, resolve, reject) {\n		let req = args[0];\n		let res = args[1];\n		\n		let brain = await import(\'./brain.js\');\n		let Symbol = brain.Symbol;\n		\n		let url = await import(\'url\');\n		let query = url.parse(req.url,true).query;\n		let params = {\n		    \'GET\': req.params,\n		    \'POST\': req.body,\n		};\n		let s = Object.assign({\n		    id: params[req.method].id || 0,\n		    type: params[req.method].type || \'\',\n		    info: params[req.method].info || null\n		}, query);\n		let symbol = new Symbol(s.id, s.type, s.info);\n		resolve(symbol);\n	};\n})();','2020-10-27 12:43:27'),(162,'js','new (function getSymbolFromRequest() {\n	this.act = async function (args, resolve, reject) {\n		let req = args[0];\n		let res = args[1];\n		\n		let brain = await import(\'./brain.js\');\n		let Symbol = brain.Symbol;\n		\n		let url = await import(\'url\');\n		let query = url.parse(req.url,true).query;\n		let params = {\n		    \'GET\': req.params,\n		    \'POST\': req.body,\n		};\n		let s = {\n		    id: params[req.method].id || 0,\n		    type: params[req.method].type || \'\',\n		    info: params[req.method].info || null\n		};\n		let symbol = new Symbol(s.id, s.type, s.info);\n		resolve(symbol);\n	};\n})();','2020-10-27 12:45:17'),(163,'js','new (function getSymbolFromRequest() {\n	this.act = async function (args, resolve, reject) {\n		let req = args[0];\n		let res = args[1];\n		\n		let brain = await import(\'./brain.js\');\n		let Symbol = brain.Symbol;\n		\n		let url = await import(\'url\');\n		let query = url.parse(req.url,true).query;\n		let params = {\n		    \'GET\': req.params,\n		    \'POST\': req.body,\n		};\n		console.log(\'METHOD\', req.method);\n		let s = {\n		    id: params[req.method].id || 0,\n		    type: params[req.method].type || \'\',\n		    info: params[req.method].info || null\n		};\n		let symbol = new Symbol(s.id, s.type, s.info);\n		resolve(symbol);\n	};\n})();','2020-10-27 12:45:45'),(164,'js','new (function getSymbolFromRequest() {\n	this.act = async function (args, resolve, reject) {\n		let req = args[0];\n		let res = args[1];\n		\n		let brain = await import(\'./brain.js\');\n		let Symbol = brain.Symbol;\n		\n		let url = await import(\'url\');\n		let query = url.parse(req.url,true).query;\n		let params = {\n		    \'GET\': req.params,\n		    \'POST\': req.body,\n		};\n		let symbol = new Symbol();\n		if (params[req.method].id != 0) {\n		    symbol.id = params[req.method].id;\n		}\n		if (params[req.method].type != 0) {\n		    symbol.type = params[req.method].type;\n		}\n		if (params[req.method].info != 0) {\n		    symbol.info = params[req.method].info;\n		}\n		resolve(symbol);\n	};\n})();','2020-10-27 12:47:20'),(165,'js','new (function getSymbolFromRequest() {\n	this.act = async function (args, resolve, reject) {\n		let req = args[0];\n		let res = args[1];\n		\n		let brain = await import(\'./brain.js\');\n		let Symbol = brain.Symbol;\n		\n		let url = await import(\'url\');\n		let query = url.parse(req.url,true).query;\n		let methods = {\n		    \'GET\': req.params,\n		    \'POST\': req.body,\n		};\n		let params = methods[req.method];\n		let symbol = new Symbol();\n		if (params.id !== undefined) {\n		    symbol.id = params.id;\n		}\n		if (params.type !== undefined) {\n		    symbol.type = params.type;\n		}\n		if (params.info !== undefined) {\n		    symbol.info = params.info;\n		}\n		resolve(symbol);\n	};\n})();','2020-10-27 12:50:28'),(166,'js','new (function getSymbolFromRequest() {\n	this.act = async function (args, resolve, reject) {\n		let req = args[0];\n		let res = args[1];\n		\n		let brain = await import(\'./brain.js\');\n		let Symbol = brain.Symbol;\n		\n		let url = await import(\'url\');\n		let query = url.parse(req.url,true).query;\n		let methods = {\n		    \'GET\': req.params,\n		    \'POST\': req.body,\n		};\n		let params = methods[req.method];\n		let symbol = new Symbol();\n		if (undefined !== params.id) {\n		    symbol.id = params.id;\n		}\n		if (undefined !== params.type) {\n		    symbol.type = params.type;\n		}\n		if (undefined !== params.info) {\n		    symbol.info = params.info;\n		}\n		resolve(symbol);\n	};\n})();','2020-10-27 12:53:39'),(167,'js','new (function getSymbolFromRequest() {\n	this.act = async function (args, resolve, reject) {\n		let req = args[0];\n		let res = args[1];\n		\n		let brain = await import(\'./brain.js\');\n		let Symbol = brain.Symbol;\n		\n		let url = await import(\'url\');\n		let query = url.parse(req.url,true).query;\n		let methods = {\n		    \'GET\': req.params,\n		    \'POST\': req.body,\n		};\n		let params = methods[req.method];\n		let symbol = new Symbol();\n		if (undefined !== params.id) {\n		    symbol.id = params.id;\n		}\n		if (undefined !== params.type) {\n		    symbol.type = params.type;\n		}\n		if (undefined !== params.info) {\n		    symbol.info = params.info;\n		}\n		resolve(symbol);\n	};\n})();','2020-10-27 12:53:39'),(168,'js','new (function getSymbolFromRequest() {\n	this.act = async function (args, resolve, reject) {\n		let req = args[0];\n		let res = args[1];\n		\n		let brain = await import(\'./brain.js\');\n		let Symbol = brain.Symbol;\n		\n		let url = await import(\'url\');\n		let query = url.parse(req.url,true).query;\n		let methods = {\n		    \'GET\': req.params,\n		    \'POST\': req.body,\n		};\n		let params = methods[req.method];\n		let symbol = new Symbol();\n		if (undefined !== params.id) {\n		    symbol.id = params.id;\n		}\n		if (undefined !== params.type) {\n		    symbol.type = params.type;\n		}\n		if (undefined !== params.info) {\n		    symbol.info = params.info;\n		}\n		resolve(symbol);\n	};\n})();','2020-10-27 12:53:39'),(169,'js','new (function getSymbolFromRequest() {\n	this.act = async function (args, resolve, reject) {\n		let req = args[0];\n		let res = args[1];\n		\n		let brain = await import(\'./brain.js\');\n		let Symbol = brain.Symbol;\n		\n		let url = await import(\'url\');\n		let query = url.parse(req.url,true).query;\n		let methods = {\n		    \'GET\': req.params,\n		    \'POST\': req.body,\n		};\n		let params = methods[req.method];\n		console.log(\'PARAMS\', req.method, methods);\n		console.log(\'PARAMS\', params);\n		\n		let symbol = new Symbol();\n		if (undefined !== params.id) {\n		    symbol.id = params.id;\n		}\n		if (undefined !== params.type) {\n		    symbol.type = params.type;\n		}\n		if (undefined !== params.info) {\n		    symbol.info = params.info;\n		}\n		resolve(symbol);\n	};\n})();','2020-10-27 17:48:58'),(170,'js','new (function getSymbolFromRequest() {\n	this.act = async function (args, resolve, reject) {\n		let req = args[0];\n		let res = args[1];\n		\n		let brain = await import(\'./brain.js\');\n		let Symbol = brain.Symbol;\n		\n		let url = await import(\'url\');\n		let query = url.parse(req.url,true).query;\n		let methods = {\n		    \'GET\': req.params,\n		    \'POST\': req.body,\n		};\n		let params = methods[req.method];\n		console.log(\'PARAMS\', req.method, methods);\n		console.log(\'PARAMS\', params);\n		let symbol = new Symbol();\n		/*\n		if (undefined !== params.id) {\n		    symbol.id = params.id;\n		}\n		if (undefined !== params.type) {\n		    symbol.type = params.type;\n		}\n		if (undefined !== params.info) {\n		    symbol.info = params.info;\n		}*/\n		resolve(symbol);\n	};\n})();','2020-10-27 17:49:28'),(171,'js','new (function getSymbolFromRequest() {\n	this.act = async function (args, resolve, reject) {\n		let req = args[0];\n		let res = args[1];\n		\n		let brain = await import(\'./brain.js\');\n		let Symbol = brain.Symbol;\n		\n		let url = await import(\'url\');\n		let query = url.parse(req.url,true).query;\n		let methods = {\n		    \'GET\': req.params,\n		    \'POST\': req.body,\n		};\n		let params = methods[req.method];\n		let symbol = new Symbol();\n		if (param != null) {\n    		if (undefined !== params.id) {\n    		    symbol.id = params.id;\n    		}\n    		if (undefined !== params.type) {\n    		    symbol.type = params.type;\n    		}\n    		if (undefined !== params.info) {\n    		    symbol.info = params.info;\n    		}\n    	}\n		resolve(symbol);\n	};\n})();','2020-10-27 19:16:16'),(172,'js','new (function getSymbolFromRequest() {\n	this.act = async function (args, resolve, reject) {\n		let req = args[0];\n		let res = args[1];\n		\n		let brain = await import(\'./brain.js\');\n		let Symbol = brain.Symbol;\n		\n		let url = await import(\'url\');\n		let query = url.parse(req.url,true).query;\n		let methods = {\n		    \'GET\': req.params,\n		    \'POST\': req.body,\n		};\n		let params = methods[req.method];\n		let symbol = new Symbol();\n		if (params != null) {\n    		if (undefined !== params.id) {\n    		    symbol.id = params.id;\n    		}\n    		if (undefined !== params.type) {\n    		    symbol.type = params.type;\n    		}\n    		if (undefined !== params.info) {\n    		    symbol.info = params.info;\n    		}\n    	}\n		resolve(symbol);\n	};\n})();','2020-10-27 19:16:42'),(173,'js','new (function getLinkFromRequest() {\n	this.act = async function (args, resolve, reject) {\n		let req = args[0];\n		let res = args[1];\n		\n		let brain = await import(\'./brain.js\');\n		let Symbol = brain.Symbol;\n		let Link = brain.Link;\n		\n		let methods = {\n		    \'GET\': req.params,\n		    \'POST\': req.body,\n		};\n		let params = methods[req.method];\n		let l = {\n		    a: new Symbol(),\n		    r: new Symbol(),\n		    b: new Symbol()\n		};\n		for (let p in l) {\n    		if (params[p + \'[id]\']) {\n    		    l[p].id = params[p + \'[id]\'];\n    		}\n    		if (params[p + \'[type]\']) {\n    		    l[p].type = params[p + \'[type]\'];\n    		}\n    		if (params[p + \'[info]\']) {\n    		    l[p].info = params[p + \'[info]\'];\n    		}\n		}\n		let link = new Link(l.a, l.r, l.b);\n		resolve(link);\n	};\n})();','2020-10-27 19:27:32'),(174,'js','new (function getSymbolFromRequest() {\n	this.act = async function (args, resolve, reject) {\n		let req = args[0];\n		let res = args[1];\n		\n		let brain = await import(\'./brain.js\');\n		let Symbol = brain.Symbol;\n		\n		let methods = {\n		    \'GET\': req.params,\n		    \'POST\': req.body,\n		};\n		let params = methods[req.method];\n		let symbol = new Symbol();\n		if (params != null) {\n    		if (undefined !== params.id) {\n    		    symbol.id = params.id;\n    		}\n    		if (undefined !== params.type) {\n    		    symbol.type = params.type;\n    		}\n    		if (undefined !== params.info) {\n    		    symbol.info = params.info;\n    		}\n    	}\n		resolve(symbol);\n	};\n})();','2020-10-27 19:27:53'),(175,'js','new (function tie() {\n	this.act = async function (args, resolve, reject) {\n		let req = args[0];\n		let res = args[1];\n		let agent = this.agent;\n		let link = await agent.see(\'getLinkFromRequest\');\n		agent.library.tie(link, resolve);\n	};\n})();','2020-10-27 19:30:53'),(176,'js','new (function tie() {\n	this.act = async function (args, resolve, reject) {\n		let req = args[0];\n		let res = args[1];\n		let agent = this.agent;\n		let link = await agent.see(\'getLinkFromRequest\', args);\n		agent.library.tie(link, resolve);\n	};\n})();','2020-10-27 19:31:56'),(177,'js','new (function tie() {\n	this.act = async function (args, resolve, reject) {\n		let req = args[0];\n		let res = args[1];\n		let agent = this.agent;\n		let link = await agent.see(\'getLinkFromRequest\', args);\n		console.log(\'TIE\', link);\n		agent.library.tie(link, resolve);\n	};\n})();','2020-10-27 19:35:02'),(178,'js','new (function tie() {\n	this.act = async function (args, resolve, reject) {\n		let req = args[0];\n		let res = args[1];\n		let agent = this.agent;\n		agent.see(\'getLinkFromRequest\', args).then(link => {\n    		console.log(\'TIE\', link);\n    		agent.library.tie(link, resolve);\n    	});\n	};\n})();','2020-10-27 19:36:59'),(179,'js','new (function getLinkFromRequest() {\n	this.act = async function (args, resolve, reject) {\n		let req = args[0];\n		let res = args[1];\n		\n		let brain = await import(\'./brain.js\');\n		let Symbol = brain.Symbol;\n		let Link = brain.Link;\n		\n		let methods = {\n		    \'GET\': req.params,\n		    \'POST\': req.body,\n		};\n		let params = methods[req.method];\nconsole.log(\'LINK_FROM_REQUEST\', params);\n		let l = {\n		    a: new Symbol(),\n		    r: new Symbol(),\n		    b: new Symbol()\n		};\n		for (let p in l) {\n    		if (params[p + \'[id]\']) {\n    		    l[p].id = params[p + \'[id]\'];\n    		}\n    		if (params[p + \'[type]\']) {\n    		    l[p].type = params[p + \'[type]\'];\n    		}\n    		if (params[p + \'[info]\']) {\n    		    l[p].info = params[p + \'[info]\'];\n    		}\n		}\n		let link = new Link(l.a, l.r, l.b);\n		resolve(link);\n	};\n})();','2020-10-27 19:38:35'),(180,'js','new (function getLinkFromRequest() {\n	this.act = async function (args, resolve, reject) {\n		let req = args[0];\n		let res = args[1];\n		\n		let brain = await import(\'./brain.js\');\n		let Symbol = brain.Symbol;\n		let Link = brain.Link;\n		\n		let methods = {\n		    \'GET\': req.params,\n		    \'POST\': req.body,\n		};\n		let params = methods[req.method];\nconsole.log(\'LINK_FROM_REQUEST\', methods);\n		let l = {\n		    a: new Symbol(),\n		    r: new Symbol(),\n		    b: new Symbol()\n		};\n		for (let p in l) {\n    		if (params[p + \'[id]\']) {\n    		    l[p].id = params[p + \'[id]\'];\n    		}\n    		if (params[p + \'[type]\']) {\n    		    l[p].type = params[p + \'[type]\'];\n    		}\n    		if (params[p + \'[info]\']) {\n    		    l[p].info = params[p + \'[info]\'];\n    		}\n		}\n		let link = new Link(l.a, l.r, l.b);\n		resolve(link);\n	};\n})();','2020-10-27 19:40:34'),(181,'js','new (function getLinkFromRequest() {\n	this.act = async function (args, resolve, reject) {\n		let req = args[0];\n		let res = args[1];\n		\n		let brain = await import(\'./brain.js\');\n		let Symbol = brain.Symbol;\n		let Link = brain.Link;\n		\n		let url = await import(\'url\');\n		let query = url.parse(req.url,true).query;\n		let methods = {\n		    \'GET\': query,\n		    \'POST\': req.body,\n		};\n		let params = methods[req.method];\n		let l = {\n		    a: new Symbol(),\n		    r: new Symbol(),\n		    b: new Symbol()\n		};\n		for (let p in l) {\n    		if (params[p + \'[id]\']) {\n    		    l[p].id = params[p + \'[id]\'];\n    		}\n    		if (params[p + \'[type]\']) {\n    		    l[p].type = params[p + \'[type]\'];\n    		}\n    		if (params[p + \'[info]\']) {\n    		    l[p].info = params[p + \'[info]\'];\n    		}\n		}\n		let link = new Link(l.a, l.r, l.b);\n		resolve(link);\n	};\n})();','2020-10-27 19:54:55'),(182,'js','new (function getLinkFromRequest() {\n	this.act = async function (args, resolve, reject) {\n		let req = args[0];\n		let res = args[1];\n		\n		let brain = await import(\'./brain.js\');\n		let Symbol = brain.Symbol;\n		let Link = brain.Link;\n		\n		let url = await import(\'url\');\n		let query = url.parse(req.url,true).query;\n		let methods = {\n		    \'GET\': query,\n		    \'POST\': req.body,\n		};\n		let params = methods[req.method];\n		let l = {\n		    a: new Symbol(),\n		    r: new Symbol(),\n		    b: new Symbol()\n		};\n		for (let p in l) {\n    		if (params[p + \'[id]\']) {\n    		    l[p].id = params[p + \'[id]\'];\n    		}\n    		if (params[p + \'[type]\']) {\n    		    l[p].type = params[p + \'[type]\'];\n    		}\n    		if (params[p + \'[info]\']) {\n    		    l[p].info = params[p + \'[info]\'];\n    		}\n		}\n		let link = new Link(l.a, l.r, l.b);\n		resolve(link);\n	};\n})();','2020-10-27 19:54:55'),(183,'js','new (function getLinkFromRequest() {\n	this.act = async function (args, resolve, reject) {\n		let req = args[0];\n		let res = args[1];\n		\n		let brain = await import(\'./brain.js\');\n		let Symbol = brain.Symbol;\n		let Link = brain.Link;\n		\n		let url = await import(\'url\');\n		let query = url.parse(req.url,true).query;\n		let methods = {\n		    \'GET\': query,\n		    \'POST\': req.body,\n		};\n		console.log(\'GETLINK\', methods);\n		let params = methods[req.method];\n		let l = {\n		    a: new Symbol(),\n		    r: new Symbol(),\n		    b: new Symbol()\n		};\n		for (let p in l) {\n    		if (params[p + \'[id]\']) {\n    		    l[p].id = params[p + \'[id]\'];\n    		}\n    		if (params[p + \'[type]\']) {\n    		    l[p].type = params[p + \'[type]\'];\n    		}\n    		if (params[p + \'[info]\']) {\n    		    l[p].info = params[p + \'[info]\'];\n    		}\n		}\n		let link = new Link(l.a, l.r, l.b);\n		resolve(link);\n	};\n})();','2020-10-27 21:51:14'),(184,'js','new (function getSymbolFromRequest() {\n	this.act = async function (args, resolve, reject) {\n		let req = args[0];\n		let res = args[1];\n		\n		this.agent.see(req.method + \'getSymbolFromRequest\', args, resolve, reject);\n	};\n})();','2020-10-27 22:16:33'),(185,'js','new (function getLinkFromRequest() {\n	this.act = async function (args, resolve, reject) {\n		let req = args[0];\n		let res = args[1];\n		\n		let brain = await import(\'./brain.js\');\n		let Link = brain.Link;\n		\n		let symbols = [];\n		for (let role of [\'a\', \'r\', \'b\']) {\n		    symbols.push(agent.see(\'getSymbolFromRequest\', [resolve, reject, role]));\n		}\n		await Promise.all(symbols);\n		let link = new Link(symbols[0], symbols[1], symbols[2]);\n		resolve(link);\n	};\n})();','2020-10-27 22:16:39'),(186,'js','new (function getLinkFromRequest() {\n	this.act = async function (args, resolve, reject) {\n		let req = args[0];\n		let res = args[1];\n		let agent = this.agent;\n		\n		let brain = await import(\'./brain.js\');\n		let Link = brain.Link;\n		\n		let symbols = [];\n		for (let role of [\'a\', \'r\', \'b\']) {\n		    symbols.push(agent.see(\'getSymbolFromRequest\', [resolve, reject, role]));\n		}\n		await Promise.all(symbols);\n		let link = new Link(symbols[0], symbols[1], symbols[2]);\n		resolve(link);\n	};\n})();','2020-10-27 22:17:25'),(187,'js','new (function getLinkFromRequest() {\n	this.act = async function (args, resolve, reject) {\n		let req = args[0];\n		let res = args[1];\n		let agent = this.agent;\n		\n		let brain = await import(\'./brain.js\');\n		let Link = brain.Link;\n		\n		let symbols = [];\n		for (let role of [\'a\', \'r\', \'b\']) {\n		    symbols.push(agent.see(\'getSymbolFromRequest\', [req, res, role]));\n		}\n		await Promise.all(symbols);\n		let link = new Link(symbols[0], symbols[1], symbols[2]);\n		resolve(link);\n	};\n})();','2020-10-27 22:20:27'),(188,'js','new (function getSymbolFromRequest() {\n	this.act = async function (args, resolve, reject) {\n		let req = args[0];\n		let res = args[1];\n		\n		this.agent.see(req.method + \'_getSymbolFromRequest\', args, resolve, reject);\n	};\n})();','2020-10-27 22:34:50'),(189,'string','GET_getSymbolFromRequest','2020-10-27 22:44:51'),(190,'js','new (function GET_getSymbolFromRequest() {\n	this.act = function (args, resolve, reject) {\n		let brain = await import(\'./brain.js\');\n		let Symbol = brain.Symbol;\n		const querystring = await import(\'querystring\');\n		\n		let req = args[0];\n		let res = args[1];\n		\n        let params;\n		let query = querystring.parse(req.url);\n		\n		try {\n		    let role = args[2];\n		    params = query[role];\n		} catch () {\n		    params = query;\n		}\n\n		let symbol = new Symbol();\n		if (params != null) {\n    		if (undefined !== params.id) {\n    		    symbol.id = params.id;\n    		}\n    		if (undefined !== params.type) {\n    		    symbol.type = params.type;\n    		}\n    		if (undefined !== params.info) {\n    		    symbol.info = params.info;\n    		}\n    	}\n		resolve(symbol);\n	};\n})();','2020-10-27 22:44:51'),(191,'js','new (function GET_getSymbolFromRequest() {\n	this.act = async function (args, resolve, reject) {\n		let brain = await import(\'./brain.js\');\n		let Symbol = brain.Symbol;\n		const querystring = await import(\'querystring\');\n		\n		let req = args[0];\n		let res = args[1];\n		\n        let params;\n		let query = querystring.parse(req.url);\n		\n		try {\n		    let role = args[2];\n		    params = query[role];\n		} catch () {\n		    params = query;\n		}\n\n		let symbol = new Symbol();\n		if (params != null) {\n    		if (undefined !== params.id) {\n    		    symbol.id = params.id;\n    		}\n    		if (undefined !== params.type) {\n    		    symbol.type = params.type;\n    		}\n    		if (undefined !== params.info) {\n    		    symbol.info = params.info;\n    		}\n    	}\n		resolve(symbol);\n	};\n})();','2020-10-27 22:45:01'),(192,'js','new (function GET_getSymbolFromRequest() {\n	this.act = async function (args, resolve, reject) {\n		let brain = await import(\'./brain.js\');\n		let Symbol = brain.Symbol;\n		const querystring = await import(\'querystring\');\n		\n		let req = args[0];\n		let res = args[1];\n		\n        let params;\n		let query = querystring.parse(req.url);\n		\n		try {\n		    let role = args[2];\n		    params = query[role];\n		} catch {\n		    params = query;\n		}\n\n		let symbol = new Symbol();\n		if (params != null) {\n    		if (undefined !== params.id) {\n    		    symbol.id = params.id;\n    		}\n    		if (undefined !== params.type) {\n    		    symbol.type = params.type;\n    		}\n    		if (undefined !== params.info) {\n    		    symbol.info = params.info;\n    		}\n    	}\n		resolve(symbol);\n	};\n})();','2020-10-27 22:45:56'),(193,'js','new (function GET_getSymbolFromRequest() {\n	this.act = async function (args, resolve, reject) {\n		let brain = await import(\'./brain.js\');\n		let Symbol = brain.Symbol;\n		const querystring = await import(\'querystring\');\n		\n		let req = args[0];\n		let res = args[1];\n		\n        let params;\n		let query = querystring.parse(req.url);\nconsole.log(\'GET_SYMBOL\', query);\n		try {\n		    let role = args[2];\n		    params = query[role];\n		} catch {\n		    params = query;\n		}\n\n		let symbol = new Symbol();\n		if (params != null) {\n    		if (undefined !== params.id) {\n    		    symbol.id = params.id;\n    		}\n    		if (undefined !== params.type) {\n    		    symbol.type = params.type;\n    		}\n    		if (undefined !== params.info) {\n    		    symbol.info = params.info;\n    		}\n    	}\n		resolve(symbol);\n	};\n})();','2020-10-27 22:47:38'),(194,'js','new (function getLinkFromRequest() {\n	this.act = async function (args, resolve, reject) {\n		let req = args[0];\n		let res = args[1];\n		let agent = this.agent;\n		\n		let brain = await import(\'./brain.js\');\n		let Link = brain.Link;\n		\n		let symbols = [];\n		for (let role of [\'a\', \'r\', \'b\']) {\n		    symbols.push(agent.see(\'getSymbolFromRequest\', [req, res, role]));\n		}\n		await Promise.all(symbols);\n		let link = new Link(await symbols[0], await symbols[1], await symbols[2]);\n		resolve(link);\n	};\n})();','2020-10-27 22:51:50'),(195,'js','new (function GET_getSymbolFromRequest() {\n	this.act = async function (args, resolve, reject) {\n		let brain = await import(\'./brain.js\');\n		let Symbol = brain.Symbol;\n		/*/\n		const querystring = await import(\'querystring\');\n		let query = querystring.parse(req.url);\n		/**/\n		let url = await import(\'url\');\n		let query = url.parse(req.url,true).query;\n		/**/\n		\n		let req = args[0];\n		let res = args[1];\n		\n        let params;\nconsole.log(\'GET_SYMBOL\', query);\n		try {\n		    let role = args[2];\n		    params = query[role];\n		} catch {\n		    params = query;\n		}\n\n		let symbol = new Symbol();\n		if (params != null) {\n    		if (undefined !== params.id) {\n    		    symbol.id = params.id;\n    		}\n    		if (undefined !== params.type) {\n    		    symbol.type = params.type;\n    		}\n    		if (undefined !== params.info) {\n    		    symbol.info = params.info;\n    		}\n    	}\n		resolve(symbol);\n	};\n})();','2020-10-27 22:56:33'),(196,'js','new (function GET_getSymbolFromRequest() {\n	this.act = async function (args, resolve, reject) {\n		let brain = await import(\'./brain.js\');\n		let Symbol = brain.Symbol;\n		\n		let req = args[0];\n		let res = args[1];\n		\n		/*/\n		const querystring = await import(\'querystring\');\n		let query = querystring.parse(req.url);\n		/**/\n		let url = await import(\'url\');\n		let query = url.parse(req.url,true).query;\n		/**/\n		\n        let params;\nconsole.log(\'GET_SYMBOL\', query);\n		try {\n		    let role = args[2];\n		    params = query[role];\n		} catch {\n		    params = query;\n		}\n\n		let symbol = new Symbol();\n		if (params != null) {\n    		if (undefined !== params.id) {\n    		    symbol.id = params.id;\n    		}\n    		if (undefined !== params.type) {\n    		    symbol.type = params.type;\n    		}\n    		if (undefined !== params.info) {\n    		    symbol.info = params.info;\n    		}\n    	}\n		resolve(symbol);\n	};\n})();','2020-10-27 22:56:55'),(197,'js','new (function GET_getSymbolFromRequest() {\n	this.act = async function (args, resolve, reject) {\n		let brain = await import(\'./brain.js\');\n		let Symbol = brain.Symbol;\n		\n		let req = args[0];\n		let res = args[1];\n		\n		/*/\n		const querystring = await import(\'querystring\');\n		let query = querystring.parse(req.url);\n		/**/\n		let url = await import(\'url\');\n		let query = url.parse(req.url,true).query;\n		/**/\n		\n        let params;\nconsole.log(\'GET_SYMBOL\', query);\n		try {\n		    let role = args[2];\n		    params = query[role];\n		} catch {\n		    params = query;\n		}\nconsole.log(\'GET_SYMBOL\', params);\n\n		let symbol = new Symbol();\n		if (params != null) {\n    		if (undefined !== params.id) {\n    		    symbol.id = params.id;\n    		}\n    		if (undefined !== params.type) {\n    		    symbol.type = params.type;\n    		}\n    		if (undefined !== params.info) {\n    		    symbol.info = params.info;\n    		}\n    	}\n		resolve(symbol);\n	};\n})();','2020-10-27 22:57:52'),(198,'js','new (function GET_getSymbolFromRequest() {\n	this.act = async function (args, resolve, reject) {\n		let brain = await import(\'./brain.js\');\n		let Symbol = brain.Symbol;\n		\n		let req = args[0];\n		let res = args[1];\n		\n		/*/\n		const querystring = await import(\'querystring\');\n		let query = querystring.parse(req.url);\n		/**/\n		let url = await import(\'url\');\n		let query = url.parse(req.url,true).query;\n		/**/\n		\n        let params;\nconsole.log(\'GET_SYMBOL\', query, args);\n		try {\n		    let role = args[2];\n		    params = query[role];\n		} catch {\n		    params = query;\n		}\nconsole.log(\'GET_SYMBOL\', params);\n\n		let symbol = new Symbol();\n		if (params != null) {\n    		if (undefined !== params.id) {\n    		    symbol.id = params.id;\n    		}\n    		if (undefined !== params.type) {\n    		    symbol.type = params.type;\n    		}\n    		if (undefined !== params.info) {\n    		    symbol.info = params.info;\n    		}\n    	}\n		resolve(symbol);\n	};\n})();','2020-10-27 22:58:25'),(199,'js','new (function GET_getSymbolFromRequest() {\n	this.act = async function (args, resolve, reject) {\n		let brain = await import(\'./brain.js\');\n		let Symbol = brain.Symbol;\n		\n		let req = args[0];\n		let res = args[1];\n		\n		/*/\n		const querystring = await import(\'querystring\');\n		let query = querystring.parse(req.url);\n		/**/\n		let url = await import(\'url\');\n		let query = url.parse(req.url,true).query;\n		/**/\n		\n        let params;\nconsole.log(\'GET_SYMBOL\', query);\n		try {\n		    let role = args[2];\n		  \nconsole.log(\'GET_SYMBOL\', role);\n		    params = query[role];\n		} catch {\n		    params = query;\n		}\nconsole.log(\'GET_SYMBOL\', params);\n\n		let symbol = new Symbol();\n		if (params != null) {\n    		if (undefined !== params.id) {\n    		    symbol.id = params.id;\n    		}\n    		if (undefined !== params.type) {\n    		    symbol.type = params.type;\n    		}\n    		if (undefined !== params.info) {\n    		    symbol.info = params.info;\n    		}\n    	}\n		resolve(symbol);\n	};\n})();','2020-10-27 23:00:13'),(200,'js','new (function GET_getSymbolFromRequest() {\n	this.act = async function (args, resolve, reject) {\n		let brain = await import(\'./brain.js\');\n		let Symbol = brain.Symbol;\n		\n		let req = args[0];\n		let res = args[1];\n		\n		/*/\n		const querystring = await import(\'querystring\');\n		let query = querystring.parse(req.url);\n		/**/\n		let url = await import(\'url\');\n		let query = url.parse(req.url,true).query;\n		/**/\n		\nconsole.log(\'GET_SYMBOL\', query);\n        let params;\n	    let role = args[2];\n	  \nconsole.log(\'GET_SYMBOL\', role);\n	    params = query[role] || query;\nconsole.log(\'GET_SYMBOL\', params);\n\n		let symbol = new Symbol();\n		if (params != null) {\n    		if (undefined !== params.id) {\n    		    symbol.id = params.id;\n    		}\n    		if (undefined !== params.type) {\n    		    symbol.type = params.type;\n    		}\n    		if (undefined !== params.info) {\n    		    symbol.info = params.info;\n    		}\n    	}\n		resolve(symbol);\n	};\n})();','2020-10-27 23:01:51'),(201,'js','new (function GET_getSymbolFromRequest() {\n	this.act = async function (args, resolve, reject) {\n		let brain = await import(\'./brain.js\');\n		let Symbol = brain.Symbol;\n		\n		let req = args[0];\n		let res = args[1];\n		\n		/*/\n		const querystring = await import(\'querystring\');\n		let query = querystring.parse(req.url);\n		/**/\n		let url = await import(\'url\');\n		let params = url.parse(req.url,true).query;\n		/**/\n		let prefix;\n	    let sufix;\n	    if (!args[2]) {\n	        prefix = \'\';\n	        sufix = \'\';\n	    }\n	    else {\n	        prefix = args[2] + \'[\';\n	        sufix = \']\';\n	    }\nconsole.log(\'GET_SYMBOL\', params);\n\n		let symbol = new Symbol();\n		if (params != null) {\n    		if (undefined !== params[prefix + \'id\' + sufix]) {\n    		    symbol.id = params[prefix + \'id\' + sufix];\n    		}\n    		if (undefined !== params[prefix + \'type\' + sufix]) {\n    		    symbol.type = params[prefix + \'type\' + sufix];\n    		}\n    		if (undefined !== params[prefix + \'info\' + sufix]) {\n    		    symbol.info = params[prefix + \'info\' + sufix];\n    		}\n    	}\n		resolve(symbol);\n	};\n})();','2020-10-27 23:07:28'),(202,'string','POST_getSymbolFromRequest','2020-10-27 23:26:58'),(203,'js','new (function POST_getSymbolFromRequest() {\n	this.act = function (args, resolve, reject) {\n		let brain = await import(\'./brain.js\');\n		let Symbol = brain.Symbol;\n		\n		let req = args[0];\n		let res = args[1];\n		\nconsole.log(\'POST_SYMBOL\', req.body);\n\n		let symbol = new Symbol();\n		let role = args[2];\n		let params = req.body[role] || req.body;\nconsole.log(\'POST_SYMBOL\', params);\n\n		if (params != null) {\n    		if (undefined !== params.id) {\n    		    symbol.id = params.id;\n    		}\n    		if (undefined !== params.type) {\n    		    symbol.type = params.type;\n    		}\n    		if (undefined !== params.info) {\n    		    symbol.info = params.info;\n    		}\n    	}\n		resolve(symbol);\n	};\n})();','2020-10-27 23:26:58'),(204,'js','new (function POST_getSymbolFromRequest() {\n	this.act = async function (args, resolve, reject) {\n		let brain = await import(\'./brain.js\');\n		let Symbol = brain.Symbol;\n		\n		let req = args[0];\n		let res = args[1];\n		\nconsole.log(\'POST_SYMBOL\', req.body);\n\n		let symbol = new Symbol();\n		let role = args[2];\n		let params = req.body[role] || req.body;\nconsole.log(\'POST_SYMBOL\', params);\n\n		if (params != null) {\n    		if (undefined !== params.id) {\n    		    symbol.id = params.id;\n    		}\n    		if (undefined !== params.type) {\n    		    symbol.type = params.type;\n    		}\n    		if (undefined !== params.info) {\n    		    symbol.info = params.info;\n    		}\n    	}\n		resolve(symbol);\n	};\n})();','2020-10-27 23:27:10'),(205,'js','new (function tie() {\n	this.act = async function (args, resolve, reject) {\n		let req = args[0];\n		let res = args[1];\n		let agent = this.agent;\n		agent.see(\'getLinkFromRequest\', args).then(link => {\n    		console.log(\'TIE\', link);\n    		agent.library.tie(link, function (l) {\n    		    res.json(l);\n        		resolve();\n    		});\n    	});\n	};\n})();','2020-10-27 23:29:01'),(206,'js','new (function POST_getSymbolFromRequest() {\n	this.act = async function (args, resolve, reject) {\n		let brain = await import(\'./brain.js\');\n		let Symbol = brain.Symbol;\n		\n		let req = args[0];\n		let res = args[1];\n		\n// console.log(\'POST_SYMBOL\', req.body);\n\n		let symbol = new Symbol();\n		let role = args[2];\n		let params = req.body[role] || req.body;\n// console.log(\'POST_SYMBOL\', params);\n\n		if (params != null) {\n    		if (undefined !== params.id) {\n    		    symbol.id = params.id;\n    		}\n    		if (undefined !== params.type) {\n    		    symbol.type = params.type;\n    		}\n    		if (undefined !== params.info) {\n    		    symbol.info = params.info;\n    		}\n    	}\n		resolve(symbol);\n	};\n})();','2020-10-27 23:36:34'),(207,'js','new (function GET_getSymbolFromRequest() {\n	this.act = async function (args, resolve, reject) {\n		let brain = await import(\'./brain.js\');\n		let Symbol = brain.Symbol;\n		\n		let req = args[0];\n		let res = args[1];\n		\n		\n		let url = await import(\'url\');\n		let params = url.parse(req.url,true).query;\n		\n		let prefix;\n	    let sufix;\n	    if (!args[2]) {\n	        prefix = \'\';\n	        sufix = \'\';\n	    }\n	    else {\n	        prefix = args[2] + \'[\';\n	        sufix = \']\';\n	    }\n\n		let symbol = new Symbol();\n		if (params != null) {\n    		if (undefined !== params[prefix + \'id\' + sufix]) {\n    		    symbol.id = params[prefix + \'id\' + sufix];\n    		}\n    		if (undefined !== params[prefix + \'type\' + sufix]) {\n    		    symbol.type = params[prefix + \'type\' + sufix];\n    		}\n    		if (undefined !== params[prefix + \'info\' + sufix]) {\n    		    symbol.info = params[prefix + \'info\' + sufix];\n    		}\n    	}\n		resolve(symbol);\n	};\n})();','2020-10-27 23:39:14'),(208,'js','new (function reason() {\n	this.act = function (args, resolve, reject) {\n		let req = args[0];\n		let res = args[1];\n		let agent = this.agent;\n		agent.see(\'getLinkFromRequest\', args).then(link => {\n// console.log(\'REASON\', link);\n	    	agent.library.reason(link, links => {\n	    	    res.json(links);\n	    	});\n	    });\n	};\n})();','2020-10-27 23:39:45'),(209,'js','new (function live() {\n	this.act = async function (args, callback, reject) {\n	    let MySQLBrain = (await import(\'./mysql_brain.js\')).MySQLBrain;\n	    let options = Object.assign({\n			database: \'lea\'\n		}, args);\n		let this.agent;\n		agent.library = new MySQLBrain(options);\n		agent.see(\'study\', \'reason\');\n		agent.see(\'study\', \'getSymbolFromRequest\');\n		agent.see(\'study\', \'GET_getSymbolFromRequest\');\n		agent.see(\'study\', \'POST_getSymbolFromRequest\');\n		callback(true); // return statement\n	};\n})();','2020-10-27 23:47:44'),(210,'js','new (function live() {\n	this.act = async function (args, resolve, reject) {\n	    let MySQLBrain = (await import(\'./mysql_brain.js\')).MySQLBrain;\n	    let options = Object.assign({\n			database: \'lea\'\n		}, args);\n		let agent = this.agent;\n		agent.library = new MySQLBrain(options);\n		agent.see(\'study\', \'reason\');\n		agent.see(\'study\', \'getSymbolFromRequest\');\n		agent.see(\'study\', \'GET_getSymbolFromRequest\');\n		agent.see(\'study\', \'POST_getSymbolFromRequest\');\n		resolve(true);\n	};\n})();','2020-10-27 23:48:46'),(211,'js','new (function gets() {\n	this.act = function (args, resolve, reject) {\n		let req = args[0];\n		let res = args[1];\n		let agent = this.agent;\n		agent.see(\'getSymbolFromRequest\', args).then(symbol => {\n// console.log(\'GETS\', symbol);\n	    	agent.library.get(symbol, symbols => {\n	    	    res.json(symbols);\n	    	});\n	    });\n	};\n})();','2020-10-27 23:56:20'),(212,'js','new (function live() {\n	this.act = async function (args, resolve, reject) {\n	    let MySQLBrain = (await import(\'./mysql_brain.js\')).MySQLBrain;\n	    let options = Object.assign({\n			database: \'lea\'\n		}, args);\n		let agent = this.agent;\n		agent.library = new MySQLBrain(options);\n		await Promise.all([\n    		agent.see(\'study\', \'reason\'),\n    		agent.see(\'study\', \'getLinkFromRequest\'),\n    		agent.see(\'study\', \'getSymbolFromRequest\'),\n    		agent.see(\'study\', \'GET_getSymbolFromRequest\'),\n    		agent.see(\'study\', \'POST_getSymbolFromRequest\')\n    	]);\n		resolve(true);\n	};\n})();','2020-10-28 17:04:24'),(213,'js','new (function live() {\n	this.act = async function (args, resolve, reject) {\n	    let MySQLBrain = (await import(\'./mysql_brain.js\')).MySQLBrain;\n	    let options = Object.assign({\n			database: \'lea\'\n		}, args);\n		let agent = this.agent;\n		agent.library = new MySQLBrain(options);\n		await Promise.all([\n    		agent.see(\'study\', \'preDispatch\'),\n    		agent.see(\'study\', \'reason\'),\n    		agent.see(\'study\', \'getLinkFromRequest\'),\n    		agent.see(\'study\', \'getSymbolFromRequest\'),\n    		agent.see(\'study\', \'GET_getSymbolFromRequest\'),\n    		agent.see(\'study\', \'POST_getSymbolFromRequest\')\n    	]);\n		resolve(true);\n	};\n})();','2020-10-28 17:07:10'),(214,'js','new (function live() {\n	this.act = async function (args, resolve, reject) {\n	    let MySQLBrain = (await import(\'./mysql_brain.js\')).MySQLBrain;\n	    let options = Object.assign({\n			database: \'lea\'\n		}, args);\n		let agent = this.agent;\n		agent.library = new MySQLBrain(options);\n		await Promise.all([/*\n    		agent.see(\'study\', \'preDispatch\'),\n    		agent.see(\'study\', \'reason\'),\n    		agent.see(\'study\', \'getLinkFromRequest\'),\n    		agent.see(\'study\', \'getSymbolFromRequest\'),\n    		agent.see(\'study\', \'GET_getSymbolFromRequest\'),\n    		agent.see(\'study\', \'POST_getSymbolFromRequest\')*/\n    	]);\n		resolve(true);\n	};\n})();','2020-10-28 17:27:59'),(215,'js','new (function index() {\n	this.act = async function (args, resolve, reject) {\n		let req = args[0];\n		let res = args[1];\n		\n		let ejs = (await import(\'ejs\'));\n		res.send(ejs.render(\'<%=agent%> - Oi, <%=nome%>!\', {agent: this.agent, nome: \'mundo\'}));\n		resolve();\n	};\n})();','2020-10-28 23:49:46'),(216,'js','new (function index() {\n	this.act = async function (args, resolve, reject) {\n		let req = args[0];\n		let res = args[1];\n		\n		let ejs = (await import(\'ejs\')).default;\n		res.send(ejs.render(\'<%=agent%> - Oi, <%=nome%>!\', {agent: this.agent, nome: \'mundo\'}));\n		resolve();\n	};\n})();','2020-10-28 23:50:41'),(217,'js','new (function index() {\n	this.act = async function (args, resolve, reject) {\n		let req = args[0];\n		let res = args[1];\n		\n		let ejs = (await import(\'ejs\')).default;\n		res.send(ejs.render(\'<%=await agent.see(\'getName\')%> - Oi, <%=nome%>!\', {agent: this.agent, nome: \'mundo\'}));\n		resolve();\n	};\n})();','2020-10-28 23:51:57'),(218,'js','new (function index() {\n	this.act = async function (args, resolve, reject) {\n		let req = args[0];\n		let res = args[1];\n		\n		let ejs = (await import(\'ejs\')).default;\n		res.send(ejs.render(\'<%=await agent.see(\"getName\")%> - Oi, <%=nome%>!\', {agent: this.agent, nome: \'mundo\'}));\n		resolve();\n	};\n})();','2020-10-28 23:52:22'),(219,'js','new (function index() {\n	this.act = async function (args, resolve, reject) {\n		let req = args[0];\n		let res = args[1];\n		\n		let ejs = (await import(\'ejs\')).default;\n		res.send(ejs.render(\'<%=await agent.see(\"getName\")%> - Oi, <%=nome%>!\', {agent: this.agent, nome: \'mundo\'}, {async: true}));\n		resolve();\n	};\n})();','2020-10-28 23:54:29'),(220,'js','new (function index() {\n	this.act = async function (args, resolve, reject) {\n		let req = args[0];\n		let res = args[1];\n		\n		let ejs = (await import(\'ejs\')).default;\n		res.send(ejs.render(\'<%=agent.see(\"getName\")%> - Oi, <%=nome%>!\', {agent: this.agent, nome: \'mundo\'}));\n		resolve();\n	};\n})();','2020-10-28 23:55:19'),(221,'js','new (function index() {\n	this.act = async function (args, resolve, reject) {\n		let req = args[0];\n		let res = args[1];\n		\n		let ejs = (await import(\'ejs\')).default;\n		res.send(ejs.render(await agent.see(\'indexView\'));\n		resolve();\n	};\n})();','2020-10-28 23:57:41'),(222,'js','new (function index() {\n	this.act = async function (args, resolve, reject) {\n		let req = args[0];\n		let res = args[1];\n		\n		let ejs = (await import(\'ejs\')).default;\n		res.send(ejs.render(await agent.see(\'indexView\')));\n		resolve();\n	};\n})();','2020-10-28 23:57:50'),(223,'js','new (function index() {\n	this.act = async function (args, resolve, reject) {\n		let req = args[0];\n		let res = args[1];\n		\n		let agent = this.agent;\n		let ejs = (await import(\'ejs\')).default;\n		res.send(ejs.render(await agent.see(\'indexView\'), {agent: agent}));\n		resolve();\n	};\n})();','2020-10-28 23:58:45'),(224,'string','indexView','2020-10-29 00:02:07'),(225,'html','<!DOCTYPE html>\r\n<html>\r\n<head>\r\n	<title>LEA - Live Environment for Agents</title>\r\n	<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\" />\r\n	<style>\r\n	#auth {\r\n        position: sticky;\r\n        top: 0;\r\n        text-align: right;\r\n    }\r\n    \r\n    #license {\r\n        position: fixed;\r\n        bottom: 8px;\r\n        right: 8px;\r\n        text-align: right;\r\n        width: 420px;\r\n    }\r\n    body {\r\n        padding-bottom: 75px;\r\n    }\r\n	</style>\r\n</head>\r\n<body>\r\n    <%=agent%> - Oi!\r\n    <div id=\"auth\">\r\n    </div>\r\n    <div id=\"license\">\r\n        <b><a target=\"_blank\" href=\"https://tiia.com.br/\">LEA - Live Environment for Agents</a></b> by <a href=\"mailto: macaroots@gmail.com\">Renato Lenz Costalima</a><br />\r\n        This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0. If a copy of the MPL was not distributed with this file, You can obtain one at <a rel=\"license\" href=\"https://mozilla.org/MPL/2.0/\">https://mozilla.org/MPL/2.0/</a>.\r\n    </div>\r\n</body>\r\n</html>','2020-10-29 00:02:07'),(226,'string','html','2020-10-29 00:03:40'),(227,'js','new (function html() {\n	this.act = function (args, resolve, reject) {\n    	var returnFunction = new (function innerObject () {\n        	this.act = function (innerTarget, innerCallback) {\n        		innerCallback(target);\n        	};\n        })();\n        resolve(returnFunction);\n	};\n})();','2020-10-29 00:03:40'),(228,'js','new (function html() {\n	this.act = function (args, resolve, reject) {\n    	var returnFunction = new (function innerObject () {\n        	this.act = function (innerTarget, innerCallback) {\n        		innerCallback(args);\n        	};\n        })();\n        resolve(returnFunction);\n	};\n})();','2020-10-29 00:05:10'),(229,'js','new (function object() {\n	this.act = function (args, resolve, reject) {\n    	var returnFunction = new (function innerObject () {\n        	this.act = function (innerTarget, innerCallback) {\n        		innerCallback(args);\n        	};\n        })();\n        resolve(returnFunction);\n	};\n})();','2020-10-29 00:11:04'),(230,'string','object','2020-10-29 00:11:22'),(231,'string','string','2020-10-29 00:11:33'),(232,'string','css','2020-10-29 00:11:47'),(233,'string','dontKnow','2020-10-29 00:34:10'),(234,'js','new (function dontKnow() {\r\n	this.act = function(perception, resolve, reject) {\r\n		let concept = perception.type;\r\n		let agent = this.agent;\r\n		let mind = this.mind;\r\n		let learned = false;\r\n		let fullname = mind.getFullName();\r\n\r\n			console.log(fullname + \' - Don\\\'t know \"\' + concept + \'\"! Searching\');\r\n			mind.set(\'unkowns\', concept);\r\n\r\n			agent.see(\'study\', concept).then(function (learned) {\r\n				console.log(fullname + \' - Studied \"\' + concept + \'\": \' + learned);\r\n				if (!learned) {\r\n					perception.type = \'index\';\r\n				}\r\n				mind.see(perception, resolve, reject);\r\n			});\r\n		});\r\n	};\r\n})();','2020-10-29 00:34:10'),(235,'js','new (function dontKnow() {\r\n	this.act = function(perception, resolve, reject) {\r\n		let concept = perception.type;\r\n		let agent = this.agent;\r\n		let mind = this.mind;\r\n		let learned = false;\r\n		let fullname = mind.getFullName();\r\n\r\n		console.log(fullname + \' - Don\\\'t know \"\' + concept + \'\"! Searching\');\r\n		mind.set(\'unkowns\', concept);\r\n\r\n		agent.see(\'study\', concept).then(function (learned) {\r\n			console.log(fullname + \' - Studied \"\' + concept + \'\": \' + learned);\r\n			if (!learned) {\r\n				perception.type = \'index\';\r\n			}\r\n			mind.see(perception, resolve, reject);\r\n		});\r\n	};\r\n})();','2020-10-29 00:34:23'),(236,'js','new (function live() {\n	this.act = async function (args, resolve, reject) {\n		let agent = this.agent;\n		await agent.see(\'study\', \'dontKnow\');\n		resolve(true);\n	};\n})();','2020-10-29 00:38:05'),(237,'html','<!DOCTYPE html>\r\n<html>\r\n<head>\r\n	<title>LEA - Live Environment for Agents</title>\r\n	<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\" />\r\n	<script src=\"_js/lib/jquery-1.8.3.min.js\"></script>\r\n    <script src=\"_js/lib/socket.io.js\"></script>\r\n	<script type=\"module\">\r\n	import {Ceed} from  \'./_js/mindjs_v0.5/ceed.js\';\r\n	import {AjaxBrain} from  \'./_js/mindjs_v0.5/ajaxbrain.js\';\r\n	import {AskScript} from  \'./_js/agents/script.js\';\r\n	window.Ceed = Ceed;\r\n	window.AskScript = AskScript;\r\n\r\n	var pathname = window.location.pathname.split(\'/\');\r\n    var agentName = pathname.slice(1).join(\'/\') + \' Page\';\r\n	$(function() {\r\n		Ceed().then(ceed => {\r\n			ceed.skills[\'ask\'] = new AskScript();\r\n			\r\n			Ceed(\'Script\').then(script => {\r\n				window.script = script;\r\n				script.see(\'live\', \'body\');\r\n				\r\n				\r\n				Ceed(agentName).then(agent => {\r\n					window.agent = agent;\r\n					agent.see(\'setLibrary\', new AjaxBrain(\'/brain/\'));\r\n					agent.see(\'hello\', \'world\');\r\n				});\r\n			}); \r\n			\r\n		});\r\n	});\r\n	</script>\r\n	<style>\r\n	#auth {\r\n        position: sticky;\r\n        top: 0;\r\n        text-align: right;\r\n    }\r\n    \r\n    #license {\r\n        position: fixed;\r\n        bottom: 8px;\r\n        right: 8px;\r\n        text-align: right;\r\n        width: 420px;\r\n    }\r\n    body {\r\n        padding-bottom: 75px;\r\n    }\r\n	</style>\r\n</head>\r\n<body>\r\n    <div id=\"auth\">\r\n    </div>\r\n    <div id=\"license\">\r\n        <b><a target=\"_blank\" href=\"https://tiia.com.br/\">LEA - Live Environment for Agents</a></b> by <a href=\"mailto: macaroots@gmail.com\">Renato Lenz Costalima</a><br />\r\n        This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0. If a copy of the MPL was not distributed with this file, You can obtain one at <a rel=\"license\" href=\"https://mozilla.org/MPL/2.0/\">https://mozilla.org/MPL/2.0/</a>.\r\n    </div>\r\n</body>\r\n</html>','2020-10-29 00:50:36'),(238,'html','<!DOCTYPE html>\r\n<html>\r\n<head>\r\n	<title>LEA - Live Environment for Agents</title>\r\n	<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\" />\r\n	<script src=\"<%=baseUrl%>_js/lib/jquery-1.8.3.min.js\"></script>\r\n    <script src=\"<%=baseUrl%>_js/lib/socket.io.js\"></script>\r\n	<script type=\"module\">\r\n	import {Ceed} from  \'<%=baseUrl%>_js/mindjs_v0.5/ceed.js\';\r\n	import {AjaxBrain} from  \'<%=baseUrl%>_js/mindjs_v0.5/ajaxbrain.js\';\r\n	import {AskScript} from  \'<%=baseUrl%>_js/agents/script.js\';\r\n	window.Ceed = Ceed;\r\n	window.AskScript = AskScript;\r\n\r\n	var pathname = window.location.pathname.split(\'/\');\r\n    var agentName = pathname.slice(1).join(\'/\') + \' Page\';\r\n	$(function() {\r\n		Ceed().then(ceed => {\r\n			ceed.skills[\'ask\'] = new AskScript();\r\n			\r\n			Ceed(\'Script\').then(script => {\r\n				window.script = script;\r\n				script.see(\'live\', \'body\');\r\n				\r\n				\r\n				Ceed(agentName).then(agent => {\r\n					window.agent = agent;\r\n					agent.see(\'setLibrary\', new AjaxBrain(\'/brain/\'));\r\n					agent.see(\'hello\', \'world\');\r\n				});\r\n			}); \r\n			\r\n		});\r\n	});\r\n	</script>\r\n	<style>\r\n	#auth {\r\n        position: sticky;\r\n        top: 0;\r\n        text-align: right;\r\n    }\r\n    \r\n    #license {\r\n        position: fixed;\r\n        bottom: 8px;\r\n        right: 8px;\r\n        text-align: right;\r\n        width: 420px;\r\n    }\r\n    body {\r\n        padding-bottom: 75px;\r\n    }\r\n	</style>\r\n</head>\r\n<body>\r\n    <div id=\"auth\">\r\n    </div>\r\n    <div id=\"license\">\r\n        <b><a target=\"_blank\" href=\"https://tiia.com.br/\">LEA - Live Environment for Agents</a></b> by <a href=\"mailto: macaroots@gmail.com\">Renato Lenz Costalima</a><br />\r\n        This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0. If a copy of the MPL was not distributed with this file, You can obtain one at <a rel=\"license\" href=\"https://mozilla.org/MPL/2.0/\">https://mozilla.org/MPL/2.0/</a>.\r\n    </div>\r\n</body>\r\n</html>','2020-10-29 00:56:09'),(239,'js','new (function index() {\n	this.act = async function (args, resolve, reject) {\n		let req = args[0];\n		let res = args[1];\n		\n		let ejs = (await import(\'ejs\')).default;\n		let os = (await import(\'os\')).default;\n		\n		let agent = this.agent;\n		\n		res.send(ejs.render(await agent.see(\'indexView\'), {agent: agent, baseUrl: os.hostname()}));\n		resolve();\n	};\n})();','2020-10-29 00:57:34'),(240,'js','new (function index() {\n	this.act = async function (args, resolve, reject) {\n		let req = args[0];\n		let res = args[1];\n		\n		let ejs = (await import(\'ejs\')).default;\n		\n		let agent = this.agent;\n		\n		res.send(ejs.render(await agent.see(\'indexView\'), {agent: agent, baseUrl: req.headers.host}));\n		resolve();\n	};\n})();','2020-10-29 01:06:10'),(241,'js','new (function index() {\n	this.act = async function (args, resolve, reject) {\n		let req = args[0];\n		let res = args[1];\n		\n		let ejs = (await import(\'ejs\')).default;\n		\n		let agent = this.agent;\n		\n		let url = \'http://\' + req.headers.host + \'/\';\n		\n		res.send(ejs.render(await agent.see(\'indexView\'), {agent: agent, baseUrl: url}));\n		resolve();\n	};\n})();','2020-10-29 01:07:15'),(242,'js','new (function dontKnow() {\r\n	this.act = function(perception, resolve, reject) {\r\n		let concept = perception.type;\r\n		let agent = this.agent;\r\n		let mind = this.mind;\r\n		let learned = false;\r\n		let fullname = mind.getFullName();\r\n\r\n		console.log(fullname + \' - Don\\\'t know \"\' + concept + \'\"! Searching\', perception);\r\n		mind.set(\'unkowns\', concept);\r\n\r\n		agent.see(\'study\', concept).then(function (learned) {\r\n			console.log(fullname + \' - Studied \"\' + concept + \'\": \' + learned);\r\n			if (!learned) {\r\n				perception.type = \'index\';\r\n			}\r\n			mind.see(perception, resolve, reject);\r\n		});\r\n	};\r\n})();','2020-10-29 02:12:31'),(243,'html','<!DOCTYPE html>\r\n<html>\r\n<head>\r\n	<title>LEA - Live Environment for Agents</title>\r\n	<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\" />\r\n	<script src=\"<%=baseUrl%>_js/lib/jquery-1.8.3.min.js\"></script>\r\n    <script src=\"<%=baseUrl%>socket.io/socket.io.js\"></script>\r\n	<script type=\"module\">\r\n	import {Ceed} from  \'<%=baseUrl%>_js/mindjs_v0.5/ceed.js\';\r\n	import {AjaxBrain} from  \'<%=baseUrl%>_js/mindjs_v0.5/ajaxbrain.js\';\r\n	import {AskScript} from  \'<%=baseUrl%>_js/agents/script.js\';\r\n	window.Ceed = Ceed;\r\n	window.AskScript = AskScript;\r\n\r\n	var pathname = window.location.pathname.split(\'/\');\r\n    var agentName = pathname.slice(1).join(\'/\') + \' Page\';\r\n	$(function() {\r\n		Ceed().then(ceed => {\r\n			ceed.skills[\'ask\'] = new AskScript();\r\n			\r\n			Ceed(\'Script\').then(script => {\r\n				window.script = script;\r\n				script.see(\'live\', \'body\');\r\n				\r\n				\r\n				Ceed(agentName).then(agent => {\r\n					window.agent = agent;\r\n					agent.see(\'setLibrary\', new AjaxBrain(\'/brain/\'));\r\n					agent.see(\'hello\', \'world\');\r\n				});\r\n			}); \r\n			\r\n		});\r\n	});\r\n	</script>\r\n	<style>\r\n	#auth {\r\n        position: sticky;\r\n        top: 0;\r\n        text-align: right;\r\n    }\r\n    \r\n    #license {\r\n        position: fixed;\r\n        bottom: 8px;\r\n        right: 8px;\r\n        text-align: right;\r\n        width: 420px;\r\n    }\r\n    body {\r\n        padding-bottom: 75px;\r\n    }\r\n	</style>\r\n</head>\r\n<body>\r\n    <div id=\"auth\">\r\n    </div>\r\n    <div id=\"license\">\r\n        <b><a target=\"_blank\" href=\"https://tiia.com.br/\">LEA - Live Environment for Agents</a></b> by <a href=\"mailto: macaroots@gmail.com\">Renato Lenz Costalima</a><br />\r\n        This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0. If a copy of the MPL was not distributed with this file, You can obtain one at <a rel=\"license\" href=\"https://mozilla.org/MPL/2.0/\">https://mozilla.org/MPL/2.0/</a>.\r\n    </div>\r\n</body>\r\n</html>','2020-10-29 02:20:53'),(244,'js','new (function dontKnow() {\r\n	this.act = function(perception, resolve, reject) {\r\n		let concept = perception.type;\r\n		let agent = this.agent;\r\n		let mind = this.mind;\r\n		let learned = false;\r\n		let fullname = mind.getFullName();\r\n\r\n		console.log(fullname + \' - Don\\\'t know \"\' + concept + \'\"! Searching\');\r\n		mind.set(\'unkowns\', concept);\r\n\r\n		agent.see(\'study\', concept).then(function (learned) {\r\n			console.log(fullname + \' - Studied \"\' + concept + \'\": \' + learned);\r\n			if (!learned) {\r\n				perception.type = \'index\';\r\n			}\r\n			mind.see(perception, resolve, reject);\r\n		});\r\n	};\r\n})();','2020-10-29 02:23:42'),(245,'js','new (function live() {\n	this.act = async function (args, resolve, reject) {\n	    let MySQLBrain = (await import(\'./mysql_brain.js\')).MySQLBrain;\n	    let options = Object.assign({\n			database: \'xanadu\'\n		}, args);\n		let agent = this.agent;\n		agent.library = new MySQLBrain(options);\n		await Promise.all([\n    		agent.see(\'study\', \'preDispatch\'),\n    		agent.see(\'study\', \'reason\'),\n    		agent.see(\'study\', \'getLinkFromRequest\'),\n    		agent.see(\'study\', \'getSymbolFromRequest\'),\n    		agent.see(\'study\', \'GET_getSymbolFromRequest\'),\n    		agent.see(\'study\', \'POST_getSymbolFromRequest\')\n    	]);\n		resolve(true);\n	};\n})();','2020-10-29 21:56:49'),(246,'html','<!DOCTYPE html>\r\n<html>\r\n<head>\r\n	<title>LEA - Live Environment for Agents</title>\r\n	<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\" />\r\n	<script src=\"<%=baseUrl%>_js/lib/jquery-1.8.3.min.js\"></script>\r\n    <script src=\"<%=baseUrl%>socket.io/socket.io.js\"></script>\r\n	<script type=\"module\">\r\n	import {Ceed} from  \'<%=baseUrl%>_js/mindjs_v0.5/ceed.js\';\r\n	import {AjaxBrain} from  \'<%=baseUrl%>_js/mindjs_v0.5/ajaxbrain.js\';\r\n	import {AskScript} from  \'<%=baseUrl%>_js/agents/script.js\';\r\n	window.Ceed = Ceed;\r\n	window.AskScript = AskScript;\r\n\r\n	var pathname = window.location.pathname.split(\'/\');\r\n    var agentName = pathname.slice(1).join(\'/\') + \' Page\';\r\n	$(function() {\r\n		Ceed().then(ceed => {\r\n			//ceed.skills[\'ask\'] = new AskScript();\r\n			ceed.see(\'setLibrary\', new AjaxBrain(\'/brain/\'));\r\n			\r\n			Ceed(agentName).then(agent => {\r\n				window.agent = agent;\r\n				agent.see(\'hello\', \'world\');\r\n			});\r\n			\r\n		});\r\n	});\r\n	</script>\r\n	<style>\r\n	#auth {\r\n        position: sticky;\r\n        top: 0;\r\n        text-align: right;\r\n    }\r\n    \r\n    #license {\r\n        position: fixed;\r\n        bottom: 8px;\r\n        right: 8px;\r\n        text-align: right;\r\n        width: 420px;\r\n    }\r\n    body {\r\n        padding-bottom: 75px;\r\n    }\r\n	</style>\r\n</head>\r\n<body>\r\n    <div id=\"auth\">\r\n    </div>\r\n    <div id=\"license\">\r\n        <b><a target=\"_blank\" href=\"https://tiia.com.br/\">LEA - Live Environment for Agents</a></b> by <a href=\"mailto: macaroots@gmail.com\">Renato Lenz Costalima</a><br />\r\n        This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0. If a copy of the MPL was not distributed with this file, You can obtain one at <a rel=\"license\" href=\"https://mozilla.org/MPL/2.0/\">https://mozilla.org/MPL/2.0/</a>.\r\n    </div>\r\n</body>\r\n</html>','2020-10-29 22:35:07'),(247,'html','<!DOCTYPE html>\r\n<html>\r\n<head>\r\n	<title>LEA - Live Environment for Agents</title>\r\n	<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\" />\r\n	<script src=\"<%=baseUrl%>_js/lib/jquery-1.8.3.min.js\"></script>\r\n    <script src=\"<%=baseUrl%>socket.io/socket.io.js\"></script>\r\n	<script type=\"module\">\r\n	import {Ceed} from  \'<%=baseUrl%>_js/mindjs_v0.5/ceed.js\';\r\n	import {AjaxBrain} from  \'<%=baseUrl%>_js/mindjs_v0.5/ajaxbrain.js\';\r\n	import {AskScript} from  \'<%=baseUrl%>_js/agents/script.js\';\r\n	window.Ceed = Ceed;\r\n	window.AskScript = AskScript;\r\n\r\n	var pathname = window.location.pathname.split(\'/\');\r\n    var agentName = pathname.slice(1).join(\'/\') + \' Page\';\r\n	$(function() {\r\n		Ceed().then(ceed => {\r\n			ceed.skills[\'ask\'] = new AskScript();\r\n			ceed.see(\'setLibrary\', new AjaxBrain(\'/brain/\'));\r\n			\r\n			Ceed(agentName).then(agent => {\r\n				window.agent = agent;\r\n				agent.see(\'hello\', \'world\');\r\n			});\r\n			\r\n		});\r\n	});\r\n	</script>\r\n	<style>\r\n	#auth {\r\n        position: sticky;\r\n        top: 0;\r\n        text-align: right;\r\n    }\r\n    \r\n    #license {\r\n        position: fixed;\r\n        bottom: 8px;\r\n        right: 8px;\r\n        text-align: right;\r\n        width: 420px;\r\n    }\r\n    body {\r\n        padding-bottom: 75px;\r\n    }\r\n	</style>\r\n</head>\r\n<body>\r\n    <div id=\"auth\">\r\n    </div>\r\n    <div id=\"license\">\r\n        <b><a target=\"_blank\" href=\"https://tiia.com.br/\">LEA - Live Environment for Agents</a></b> by <a href=\"mailto: macaroots@gmail.com\">Renato Lenz Costalima</a><br />\r\n        This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0. If a copy of the MPL was not distributed with this file, You can obtain one at <a rel=\"license\" href=\"https://mozilla.org/MPL/2.0/\">https://mozilla.org/MPL/2.0/</a>.\r\n    </div>\r\n</body>\r\n</html>','2020-10-30 18:50:23'),(248,'js','new (function dontKnow() {\r\n	this.act = function(perception, resolve, reject) {\r\n		let concept = perception.type;\r\n		let agent = this.agent;\r\n		let mind = this.mind;\r\n		let learned = false;\r\n		let fullname = mind.getFullName();\r\n\r\n		console.log(fullname + \' - Don\\\'t know \"\' + concept + \'\"! Searching\');\r\n		mind.set(\'unkowns\', concept);\r\n\r\n		agent.see(\'study\', concept).then(async function (learned) {\r\n			console.log(fullname + \' - Studied \"\' + concept + \'\": \' + learned);\r\n			if (!learned) {\r\n			    await mind.see({type: \'set\', info: [perception.type, (function () {\r\n			        this.act = function (args) {\r\n			            this.agent.see(\'index\', args);\r\n			        }\r\n			    })()]});\r\n				//perception.type = \'index\';\r\n			}\r\n			mind.see(perception, resolve, reject);\r\n		});\r\n	};\r\n})();','2020-11-12 22:45:08'),(249,'js','new (function dontKnow() {\r\n	this.act = function(perception, resolve, reject) {\r\n		let concept = perception.type;\r\n		let agent = this.agent;\r\n		let mind = this.mind;\r\n		let learned = false;\r\n		let fullname = mind.getFullName();\r\n\r\n		console.log(fullname + \' - Don\\\'t know \"\' + concept + \'\"! Searching\');\r\n		mind.set(\'unkowns\', concept);\r\n\r\n		agent.see(\'study\', concept).then(async function (learned) {\r\n			console.log(fullname + \' - Studied \"\' + concept + \'\": \' + learned);\r\n			if (!learned) {\r\n			    await mind.see({type: \'set\', info: [perception.type, new (function () {\r\n			        this.act = function (args) {\r\n			            this.agent.see(\'index\', args);\r\n			        }\r\n			    })()]});\r\n				//perception.type = \'index\';\r\n			}\r\n			mind.see(perception, resolve, reject);\r\n		});\r\n	};\r\n})();','2020-11-12 22:47:32'),(250,'js','new (function dontKnow() {\r\n	this.act = function(perception, resolve, reject) {\r\n		let concept = perception.type;\r\n		let agent = this.agent;\r\n		let mind = this.mind;\r\n		let learned = false;\r\n		let fullname = mind.getFullName();\r\n\r\n		console.log(fullname + \' - Don\\\'t know \"\' + concept + \'\"! Searching\');\r\n		mind.set(\'unkowns\', concept);\r\n\r\n		agent.see(\'study\', concept).then(async function (learned) {\r\n			console.log(fullname + \' - Studied \"\' + concept + \'\": \' + learned);\r\n			if (!learned) {\r\n			    await mind.see({type: \'set\', info: [perception.type, new (function () {\r\n			        this.act = function (args, resolve, reject) {\r\n			            this.agent.see(\'index\', args).then(resolve).catch(reject);\r\n			        }\r\n			    })()]});\r\n			}\r\n			mind.see(perception).then(resolve).catch(reject);\r\n		});\r\n	};\r\n})();','2020-11-12 22:52:14'),(251,'string','AuthController','2020-11-15 23:09:20'),(252,'html','<!DOCTYPE html>\r\n<html>\r\n<head>\r\n	<title>LEA - Live Environment for Agents</title>\r\n	<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\" />\r\n	<script src=\"<%=baseUrl%>_js/lib/jquery-1.8.3.min.js\"></script>\r\n    <script src=\"<%=baseUrl%>socket.io/socket.io.js\"></script>\r\n	<script type=\"module\">\r\n	import {Ceed, LEA} from  \'<%=baseUrl%>_js/mindjs_v0.5/ceed.js\';\r\n	import {AjaxBrain} from  \'<%=baseUrl%>_js/mindjs_v0.5/ajaxbrain.js\';\r\n	import {AskScript} from  \'<%=baseUrl%>_js/agents/script.js\';\r\n	window.Ceed = Ceed;\r\n	window.AskScript = AskScript;\r\n\r\n	var pathname = window.location.pathname.split(\'/\');\r\n    var agentName = pathname.slice(1).join(\'/\') + \' Page\';\r\n	$(function() {\r\n		Ceed().then(ceed => {\r\n			//ceed.skills[\'ask\'] = new AskScript();\r\n			ceed.see(\'setLibrary\', new AjaxBrain(\'/brain/\'));\r\n			\r\n			Ceed(agentName).then(agent => {\r\n				window.agent = agent;\r\n				agent.see(\'hello\', \'world\');\r\n			});\r\n			\r\n		});\r\n	});\r\n	</script>\r\n	<style>\r\n	#auth {\r\n        position: sticky;\r\n        top: 0;\r\n        text-align: right;\r\n    }\r\n    \r\n    #license {\r\n        position: fixed;\r\n        bottom: 8px;\r\n        right: 8px;\r\n        text-align: right;\r\n        width: 420px;\r\n    }\r\n    body {\r\n        padding-bottom: 75px;\r\n    }\r\n	</style>\r\n</head>\r\n<body>\r\n    <div id=\"auth\">\r\n    </div>\r\n    <div id=\"license\">\r\n        <b><a target=\"_blank\" href=\"https://tiia.com.br/\">LEA - Live Environment for Agents</a></b> by <a href=\"mailto: macaroots@gmail.com\">Renato Lenz Costalima</a><br />\r\n        This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0. If a copy of the MPL was not distributed with this file, You can obtain one at <a rel=\"license\" href=\"https://mozilla.org/MPL/2.0/\">https://mozilla.org/MPL/2.0/</a>.\r\n    </div>\r\n</body>\r\n</html>','2020-11-15 23:09:20'),(253,'html','<!DOCTYPE html>\r\n<html>\r\n<head>\r\n	<title>LEA - Live Environment for Agents</title>\r\n	<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\" />\r\n	<meta name=\"google-signin-client_id\" content=\"1058560848585-k19ome8pfq3ddmr8mut359257em0vg52.apps.googleusercontent.com\">\r\n	<script src=\"https://apis.google.com/js/platform.js\" async defer></script>\r\n	<script src=\"<%=baseUrl%>_js/lib/jquery-1.8.3.min.js\"></script>\r\n    <script src=\"<%=baseUrl%>socket.io/socket.io.js\"></script>\r\n	<script type=\"module\">\r\n	import {Ceed} from  \'<%=baseUrl%>_js/mindjs_v0.5/ceed.js\';\r\n	import {AjaxBrain} from  \'<%=baseUrl%>_js/mindjs_v0.5/ajaxbrain.js\';\r\n	import {AskScript} from  \'<%=baseUrl%>_js/agents/script.js\';\r\n	window.Ceed = Ceed;\r\n	window.AskScript = AskScript;\r\n\r\n	var pathname = window.location.pathname.split(\'/\');\r\n    var agentName = pathname.slice(1).join(\'/\') + \' Page\';\r\n	$(function() {\r\n		Ceed().then(ceed => {\r\n			//ceed.skills[\'ask\'] = new AskScript();\r\n			ceed.see(\'setLibrary\', new AjaxBrain(\'/brain/\'));\r\n			\r\n			Ceed(agentName).then(agent => {\r\n				window.agent = agent;\r\n				agent.see(\'hello\', \'world\');\r\n			});\r\n			\r\n		});\r\n	});\r\n	</script>\r\n	<style>\r\n	#auth {\r\n        position: sticky;\r\n        top: 0;\r\n        text-align: right;\r\n    }\r\n    \r\n    #license {\r\n        position: fixed;\r\n        bottom: 8px;\r\n        right: 8px;\r\n        text-align: right;\r\n        width: 420px;\r\n    }\r\n    body {\r\n        padding-bottom: 75px;\r\n    }\r\n	</style>\r\n</head>\r\n<body>\r\n    <div id=\"auth\">\r\n    </div>\r\n    <div id=\"license\">\r\n        <b><a target=\"_blank\" href=\"https://tiia.com.br/\">LEA - Live Environment for Agents</a></b> by <a href=\"mailto: macaroots@gmail.com\">Renato Lenz Costalima</a><br />\r\n        This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0. If a copy of the MPL was not distributed with this file, You can obtain one at <a rel=\"license\" href=\"https://mozilla.org/MPL/2.0/\">https://mozilla.org/MPL/2.0/</a>.\r\n    </div>\r\n</body>\r\n</html>','2020-11-15 23:41:37'),(254,'html','<!DOCTYPE html>\r\n<html>\r\n<head>\r\n	<title>LEA - Live Environment for Agents</title>\r\n	<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\" />\r\n	<meta name=\"google-signin-client_id\" content=\"1058560848585-k19ome8pfq3ddmr8mut359257em0vg52.apps.googleusercontent.com\">\r\n	<script src=\"https://apis.google.com/js/platform.js\" async defer></script>\r\n	<script src=\"<%=baseUrl%>_js/lib/jquery-1.8.3.min.js\"></script>\r\n	<script type=\"module\">\r\n	import {Ceed} from  \'<%=baseUrl%>_js/mindjs_v0.5/ceed.js\';\r\n	import {AjaxBrain} from  \'<%=baseUrl%>_js/mindjs_v0.5/ajaxbrain.js\';\r\n	import {AskScript} from  \'<%=baseUrl%>_js/agents/script.js\';\r\n	window.Ceed = Ceed;\r\n	window.AskScript = AskScript;\r\n\r\n	var pathname = window.location.pathname.split(\'/\');\r\n    var agentName = pathname.slice(1).join(\'/\') + \' Page\';\r\n	$(function() {\r\n		Ceed().then(ceed => {\r\n			//ceed.skills[\'ask\'] = new AskScript();\r\n			ceed.see(\'setLibrary\', new AjaxBrain(\'/brain/\'));\r\n			\r\n			Ceed(agentName).then(agent => {\r\n				window.agent = agent;\r\n				agent.see(\'hello\', \'world\');\r\n			});\r\n			\r\n		});\r\n	});\r\n	</script>\r\n	<style>\r\n	#auth {\r\n        position: sticky;\r\n        top: 0;\r\n        text-align: right;\r\n    }\r\n    \r\n    #license {\r\n        position: fixed;\r\n        bottom: 8px;\r\n        right: 8px;\r\n        text-align: right;\r\n        width: 420px;\r\n    }\r\n    body {\r\n        padding-bottom: 75px;\r\n    }\r\n	</style>\r\n</head>\r\n<body>\r\n    <div id=\"auth\">\r\n    </div>\r\n    <div id=\"license\">\r\n        <b><a target=\"_blank\" href=\"https://tiia.com.br/\">LEA - Live Environment for Agents</a></b> by <a href=\"mailto: macaroots@gmail.com\">Renato Lenz Costalima</a><br />\r\n        This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0. If a copy of the MPL was not distributed with this file, You can obtain one at <a rel=\"license\" href=\"https://mozilla.org/MPL/2.0/\">https://mozilla.org/MPL/2.0/</a>.\r\n    </div>\r\n</body>\r\n</html>','2020-11-16 00:46:43'),(255,'js','new (function live() {\n	this.act = async function (args, resolve, reject) {\n	    let MySQLBrain = (await import(\'./mysql_brain.js\')).MySQLBrain;\n	    /*let options = Object.assign({\n			database: \'xanadu\'\n		}, args);\n		let agent = this.agent;\n		agent.library = new MySQLBrain(options);*/\n		agent.library = (await agent.see(\'getLibraries\'))[0];\n		await Promise.all([\n    		agent.see(\'study\', \'preDispatch\'),\n    		agent.see(\'study\', \'reason\'),\n    		agent.see(\'study\', \'getLinkFromRequest\'),\n    		agent.see(\'study\', \'getSymbolFromRequest\'),\n    		agent.see(\'study\', \'GET_getSymbolFromRequest\'),\n    		agent.see(\'study\', \'POST_getSymbolFromRequest\')\n    	]);\n		resolve(true);\n	};\n})();','2020-11-16 00:57:49'),(256,'js','new (function live() {\n	this.act = async function (args, resolve, reject) {\n	    let MySQLBrain = (await import(\'./mysql_brain.js\')).MySQLBrain;\n	    /*let options = Object.assign({\n			database: \'xanadu\'\n		}, args);\n		agent.library = new MySQLBrain(options);*/\n		let agent = this.agent;\n		agent.library = (await agent.see(\'getLibraries\'))[0];\n		await Promise.all([\n    		agent.see(\'study\', \'preDispatch\'),\n    		agent.see(\'study\', \'reason\'),\n    		agent.see(\'study\', \'getLinkFromRequest\'),\n    		agent.see(\'study\', \'getSymbolFromRequest\'),\n    		agent.see(\'study\', \'GET_getSymbolFromRequest\'),\n    		agent.see(\'study\', \'POST_getSymbolFromRequest\')\n    	]);\n		resolve(true);\n	};\n})();','2020-11-16 00:58:47'),(257,'string','Auth','2020-11-16 01:17:55'),(258,'js','new (function live() {\n	this.act = function (args, callback) {\n		console.log(\'NAIVE LIVING\', this.agent.toString());\n		callback(this.agent);\n	}\n})();','2020-11-16 01:17:55'),(259,'js','new (function live() {\n	this.act = async function (args, resolve, reject) {\n	    let MySQLBrain = (await import(\'./mysql_brain.js\')).MySQLBrain;\n	    /*let options = Object.assign({\n			database: \'xanadu\'\n		}, args);\n		agent.library = new MySQLBrain(options);*/\n		let agent = this.agent;\n		agent.library = (await agent.see(\'getLibraries\'))[0];\n		await Promise.all([\n    		agent.see(\'study\', \'preDispatch\'),\n    		agent.see(\'study\', \'reason\'),\n    		agent.see(\'study\', \'tie\'),\n    		agent.see(\'study\', \'getLinkFromRequest\'),\n    		agent.see(\'study\', \'getSymbolFromRequest\'),\n    		agent.see(\'study\', \'GET_getSymbolFromRequest\'),\n    		agent.see(\'study\', \'POST_getSymbolFromRequest\')\n    	]);\n		resolve(true);\n	};\n})();','2020-11-16 01:20:25'),(260,'string','Auth2Controller','2020-11-16 12:55:19'),(261,'html','<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n<html>\r\n<head>\r\n	<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n	<title>LEA Auth - Who is it?</title>\r\n	<meta name=\"google-signin-client_id\" content=\"1058560848585-k19ome8pfq3ddmr8mut359257em0vg52.apps.googleusercontent.com\">\r\n	<script src=\"https://apis.google.com/js/platform.js\" async defer></script>\r\n    <script src=\"<%=baseUrl%>_js/jquery-1.8.3.min.js\"></script>\r\n	<script type=\"module\">\r\n	import {Ceed} from  \'<%=baseUrl%>_js/mindjs_v0.5/ceed.js\';\r\n	import {AjaxBrain} from  \'<%=baseUrl%>_js/mindjs_v0.5/ajaxbrain.js\';\r\n	window.Ceed = Ceed;\r\n\r\n	var pathname = window.location.pathname.split(\'/\');\r\n    var agentName = pathname.slice(3).join(\'/\');\r\n	window.agent = Ceed(agentName);\r\n	window.agent.then(agent => {\r\n		agent.see(\'setLibrary\', new AjaxBrain(\'<%=baseUrl%>ce/brain/\'));\r\n	});\r\n	</script>\r\n    <script>\r\n	window.clicked = false;\r\n	function onSignIn(googleUser) {\r\n        agent.then(a => a.see(\'signIn\', googleUser));\r\n    }\r\n    window.onclick = function () {\r\n        window.clicked = true;\r\n    };\r\n    \r\n    function signOut() {\r\n        agent.then(a => a.see(\'signOut\'));\r\n    }\r\n	</script>\r\n</head>\r\n<body>\r\n<form action=\"<%=address%>login\" method=\"post\">\r\n    Who are you?<br/>\r\n    <input name=\"username\" id=\"a\" />\r\n    <input name=\"password\" id=\"b\" type=\"password\" />\r\n    <p id=\"license\">\r\n        LEA - Live Environment for Agents by <a href=\"mailto: macaroots@gmail.com\">Renato Lenz Costalima</a><br>\r\n        This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0. If a copy of the MPL was not distributed with this file, You can obtain one at <a rel=\"license\" href=\"https://mozilla.org/MPL/2.0/\">https://mozilla.org/MPL/2.0/</a>.\r\n    </p>\r\n    \r\n    <p>\r\n        <label><input type=\"checkbox\" name=\"agree\" value=\"true\" /> I agree with <a href=\"/LEA/ce/termos\" target=\"_blank\">Terms & Conditions</a></label>\r\n    </p>\r\n    <input value=\"Submit\" type=\"submit\" /><br/><br/>or<br/>\r\n    \r\n    <div>\r\n        <div class=\"g-signin2\" data-onsuccess=\"onSignIn\"></div>\r\n        \r\n        <a class=\"g-signout2\" href=\"#\" onclick=\"signOut();\">Sign out</a>\r\n    </div>\r\n</form>\r\n</body>\r\n</html>','2020-11-16 12:55:19'),(262,'html','<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n<html>\r\n<head>\r\n	<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n	<title>LEA Auth - Who is it?</title>\r\n	<meta name=\"google-signin-client_id\" content=\"1058560848585-k19ome8pfq3ddmr8mut359257em0vg52.apps.googleusercontent.com\">\r\n	<script src=\"https://apis.google.com/js/platform.js\" async defer></script>\r\n    <script src=\"<%=baseUrl%>_js/jquery-1.8.3.min.js\"></script>\r\n	<script type=\"module\">\r\n	import {Ceed} from  \'<%=baseUrl%>_js/mindjs_v0.5/ceed.js\';\r\n	import {AjaxBrain} from  \'<%=baseUrl%>_js/mindjs_v0.5/ajaxbrain.js\';\r\n	window.Ceed = Ceed;\r\n\r\n	var pathname = window.location.pathname.split(\'/\');\r\n    var agentName = pathname.slice(3).join(\'/\');\r\n	window.agent = Ceed(agentName);\r\n	window.agent.then(agent => {\r\n		agent.see(\'setLibrary\', new AjaxBrain(\'<%=baseUrl%>ce/brain/\'));\r\n	});\r\n	</script>\r\n    <script>\r\n	window.clicked = false;\r\n	function onSignIn(googleUser) {\r\n        agent.then(a => a.see(\'signIn\', googleUser));\r\n    }\r\n    window.onclick = function () {\r\n        window.clicked = true;\r\n    };\r\n    \r\n    function signOut() {\r\n        agent.then(a => a.see(\'signOut\'));\r\n    }\r\n	</script>\r\n</head>\r\n<body>\r\n<form action=\"<%=baseUrl%>auth/login\" method=\"post\">\r\n    Who are you?<br/>\r\n    <input name=\"username\" id=\"a\" />\r\n    <input name=\"password\" id=\"b\" type=\"password\" />\r\n    <p id=\"license\">\r\n        LEA - Live Environment for Agents by <a href=\"mailto: macaroots@gmail.com\">Renato Lenz Costalima</a><br>\r\n        This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0. If a copy of the MPL was not distributed with this file, You can obtain one at <a rel=\"license\" href=\"https://mozilla.org/MPL/2.0/\">https://mozilla.org/MPL/2.0/</a>.\r\n    </p>\r\n    \r\n    <p>\r\n        <label><input type=\"checkbox\" name=\"agree\" value=\"true\" /> I agree with <a href=\"/LEA/ce/termos\" target=\"_blank\">Terms & Conditions</a></label>\r\n    </p>\r\n    <input value=\"Submit\" type=\"submit\" /><br/><br/>or<br/>\r\n    \r\n    <div>\r\n        <div class=\"g-signin2\" data-onsuccess=\"onSignIn\"></div>\r\n        \r\n        <a class=\"g-signout2\" href=\"#\" onclick=\"signOut();\">Sign out</a>\r\n    </div>\r\n</form>\r\n</body>\r\n</html>','2020-11-16 12:59:34'),(263,'html','<!DOCTYPE html>\r\n<html>\r\n<head>\r\n	<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"/>\r\n	<title>LEA Auth - Who is it?</title>\r\n	<meta name=\"google-signin-client_id\" content=\"1058560848585-k19ome8pfq3ddmr8mut359257em0vg52.apps.googleusercontent.com\"/>\r\n	<script src=\"https://apis.google.com/js/platform.js\" async defer></script>\r\n    <script src=\"<%=baseUrl%>_js/jquery-1.8.3.min.js\"></script>\r\n	<script type=\"module\">\r\n	import {Ceed} from  \'<%=baseUrl%>_js/mindjs_v0.5/ceed.js\';\r\n	import {AjaxBrain} from  \'<%=baseUrl%>_js/mindjs_v0.5/ajaxbrain.js\';\r\n	window.Ceed = Ceed;\r\n\r\n	var pathname = window.location.pathname.split(\'/\');\r\n    var agentName = pathname.slice(3).join(\'/\');\r\n	window.agent = Ceed(agentName);\r\n	window.agent.then(agent => {\r\n		agent.see(\'setLibrary\', new AjaxBrain(\'<%=baseUrl%>ce/brain/\'));\r\n	});\r\n	</script>\r\n    <script>\r\n	window.clicked = false;\r\n	function onSignIn(googleUser) {\r\n        agent.then(a => a.see(\'signIn\', googleUser));\r\n    }\r\n    window.onclick = function () {\r\n        window.clicked = true;\r\n    };\r\n    \r\n    function signOut() {\r\n        agent.then(a => a.see(\'signOut\'));\r\n    }\r\n	</script>\r\n</head>\r\n<body>\r\n<form action=\"<%=baseUrl%>auth/login\" method=\"post\">\r\n    Who are you?<br/>\r\n    <input name=\"username\" id=\"a\" />\r\n    <input name=\"password\" id=\"b\" type=\"password\" />\r\n    <p id=\"license\">\r\n        LEA - Live Environment for Agents by <a href=\"mailto: macaroots@gmail.com\">Renato Lenz Costalima</a><br>\r\n        This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0. If a copy of the MPL was not distributed with this file, You can obtain one at <a rel=\"license\" href=\"https://mozilla.org/MPL/2.0/\">https://mozilla.org/MPL/2.0/</a>.\r\n    </p>\r\n    \r\n    <p>\r\n        <label><input type=\"checkbox\" name=\"agree\" value=\"true\" /> I agree with <a href=\"/LEA/ce/termos\" target=\"_blank\">Terms & Conditions</a></label>\r\n    </p>\r\n    <input value=\"Submit\" type=\"submit\" /><br/><br/>or<br/>\r\n    \r\n    <div>\r\n        <div class=\"g-signin2\" data-onsuccess=\"onSignIn\"></div>\r\n        \r\n        <a class=\"g-signout2\" href=\"#\" onclick=\"signOut();\">Sign out</a>\r\n    </div>\r\n</form>\r\n</body>\r\n</html>','2020-11-16 14:16:16'),(264,'html','<!DOCTYPE html>\r\n<html>\r\n<head>\r\n	<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"/>\r\n	<title>LEA Auth - Who is it?</title>\r\n	<meta name=\"google-signin-client_id\" content=\"1058560848585-k19ome8pfq3ddmr8mut359257em0vg52.apps.googleusercontent.com\"/>\r\n	<script src=\"https://apis.google.com/js/platform.js\" async defer></script>\r\n	<script type=\"module\">\r\n	import {Ceed} from  \'<%=baseUrl%>_js/mindjs_v0.5/ceed.js\';\r\n	import {AjaxBrain} from  \'<%=baseUrl%>_js/mindjs_v0.5/ajaxbrain.js\';\r\n	window.Ceed = Ceed;\r\n\r\n	var pathname = window.location.pathname.split(\'/\');\r\n    var agentName = pathname.slice(3).join(\'/\');\r\n	window.agent = Ceed(agentName);\r\n	window.agent.then(agent => {\r\n		agent.see(\'setLibrary\', new AjaxBrain(\'<%=baseUrl%>ce/brain/\'));\r\n	});\r\n	</script>\r\n    <script>\r\n	window.clicked = false;\r\n	function onSignIn(googleUser) {\r\n        agent.then(a => a.see(\'signIn\', googleUser));\r\n    }\r\n    window.onclick = function () {\r\n        window.clicked = true;\r\n    };\r\n    \r\n    function signOut() {\r\n        agent.then(a => a.see(\'signOut\'));\r\n    }\r\n	</script>\r\n</head>\r\n<body>\r\n<form action=\"<%=baseUrl%>auth/login\" method=\"post\">\r\n    Who are you?<br/>\r\n    <input name=\"username\" id=\"a\" />\r\n    <input name=\"password\" id=\"b\" type=\"password\" />\r\n    <p id=\"license\">\r\n        LEA - Live Environment for Agents by <a href=\"mailto: macaroots@gmail.com\">Renato Lenz Costalima</a><br>\r\n        This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0. If a copy of the MPL was not distributed with this file, You can obtain one at <a rel=\"license\" href=\"https://mozilla.org/MPL/2.0/\">https://mozilla.org/MPL/2.0/</a>.\r\n    </p>\r\n    \r\n    <p>\r\n        <label><input type=\"checkbox\" name=\"agree\" value=\"true\" /> I agree with <a href=\"/LEA/ce/termos\" target=\"_blank\">Terms & Conditions</a></label>\r\n    </p>\r\n    <input value=\"Submit\" type=\"submit\" /><br/><br/>or<br/>\r\n    \r\n    <div>\r\n        <div class=\"g-signin2\" data-onsuccess=\"onSignIn\"></div>\r\n        \r\n        <a class=\"g-signout2\" href=\"#\" onclick=\"signOut();\">Sign out</a>\r\n    </div>\r\n</form>\r\n</body>\r\n</html>','2020-11-16 14:18:17'),(265,'html','<!DOCTYPE html>\r\n<html>\r\n<head>\r\n	<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"/>\r\n	<title>LEA Auth - Who is it?</title>\r\n	<meta name=\"google-signin-client_id\" content=\"1058560848585-k19ome8pfq3ddmr8mut359257em0vg52.apps.googleusercontent.com\">\r\n	<script src=\"https://apis.google.com/js/platform.js\" async defer></script>\r\n	<script type=\"module\">\r\n	import {Ceed} from  \'<%=baseUrl%>_js/mindjs_v0.5/ceed.js\';\r\n	import {AjaxBrain} from  \'<%=baseUrl%>_js/mindjs_v0.5/ajaxbrain.js\';\r\n	window.Ceed = Ceed;\r\n\r\n	var pathname = window.location.pathname.split(\'/\');\r\n    var agentName = pathname.slice(3).join(\'/\');\r\n	window.agent = Ceed(agentName);\r\n	window.agent.then(agent => {\r\n		agent.see(\'setLibrary\', new AjaxBrain(\'<%=baseUrl%>ce/brain/\'));\r\n	});\r\n	</script>\r\n    <script>\r\n	window.clicked = false;\r\n	function onSignIn(googleUser) {\r\n        agent.then(a => a.see(\'signIn\', googleUser));\r\n    }\r\n    window.onclick = function () {\r\n        window.clicked = true;\r\n    };\r\n    \r\n    function signOut() {\r\n        agent.then(a => a.see(\'signOut\'));\r\n    }\r\n	</script>\r\n</head>\r\n<body>\r\n<form action=\"<%=baseUrl%>auth/login\" method=\"post\">\r\n    Who are you?<br/>\r\n    <input name=\"username\" id=\"a\" />\r\n    <input name=\"password\" id=\"b\" type=\"password\" />\r\n    <p id=\"license\">\r\n        LEA - Live Environment for Agents by <a href=\"mailto: macaroots@gmail.com\">Renato Lenz Costalima</a><br>\r\n        This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0. If a copy of the MPL was not distributed with this file, You can obtain one at <a rel=\"license\" href=\"https://mozilla.org/MPL/2.0/\">https://mozilla.org/MPL/2.0/</a>.\r\n    </p>\r\n    \r\n    <p>\r\n        <label><input type=\"checkbox\" name=\"agree\" value=\"true\" /> I agree with <a href=\"/LEA/ce/termos\" target=\"_blank\">Terms & Conditions</a></label>\r\n    </p>\r\n    <input value=\"Submit\" type=\"submit\" /><br/><br/>or<br/>\r\n    \r\n    <div>\r\n        <div class=\"g-signin2\" data-onsuccess=\"onSignIn\"></div>\r\n        \r\n        <a class=\"g-signout2\" href=\"#\" onclick=\"signOut();\">Sign out</a>\r\n    </div>\r\n</form>\r\n</body>\r\n</html>','2020-11-16 14:18:38'),(266,'html','<!DOCTYPE html>\r\n<html>\r\n<head>\r\n	<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n	<title>LEA Auth - Who is it?</title>\r\n	<meta name=\"google-signin-client_id\" content=\"1058560848585-k19ome8pfq3ddmr8mut359257em0vg52.apps.googleusercontent.com\">\r\n	<script src=\"https://apis.google.com/js/platform.js\" async defer></script>\r\n	<script type=\"module\">\r\n	import {Ceed} from  \'<%=baseUrl%>_js/mindjs_v0.5/ceed.js\';\r\n	import {AjaxBrain} from  \'<%=baseUrl%>_js/mindjs_v0.5/ajaxbrain.js\';\r\n	window.Ceed = Ceed;\r\n\r\n	var pathname = window.location.pathname.split(\'/\');\r\n    var agentName = pathname.slice(3).join(\'/\');\r\n	window.agent = Ceed(agentName);\r\n	window.agent.then(agent => {\r\n		agent.see(\'setLibrary\', new AjaxBrain(\'<%=baseUrl%>ce/brain/\'));\r\n	});\r\n	</script>\r\n    <script>\r\n	window.clicked = false;\r\n	function onSignIn(googleUser) {\r\n        agent.then(a => a.see(\'signIn\', googleUser));\r\n    }\r\n    window.onclick = function () {\r\n        window.clicked = true;\r\n    };\r\n    \r\n    function signOut() {\r\n        agent.then(a => a.see(\'signOut\'));\r\n    }\r\n	</script>\r\n</head>\r\n<body>\r\n<form action=\"<%=baseUrl%>auth/login\" method=\"post\">\r\n    Who are you?<br/>\r\n    <input name=\"username\" id=\"a\" />\r\n    <input name=\"password\" id=\"b\" type=\"password\" />\r\n    <p id=\"license\">\r\n        LEA - Live Environment for Agents by <a href=\"mailto: macaroots@gmail.com\">Renato Lenz Costalima</a><br>\r\n        This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0. If a copy of the MPL was not distributed with this file, You can obtain one at <a rel=\"license\" href=\"https://mozilla.org/MPL/2.0/\">https://mozilla.org/MPL/2.0/</a>.\r\n    </p>\r\n    \r\n    <p>\r\n        <label><input type=\"checkbox\" name=\"agree\" value=\"true\" /> I agree with <a href=\"/LEA/ce/termos\" target=\"_blank\">Terms & Conditions</a></label>\r\n    </p>\r\n    <input value=\"Submit\" type=\"submit\" /><br/><br/>or<br/>\r\n    \r\n    <div>\r\n        <div class=\"g-signin2\" data-onsuccess=\"onSignIn\"></div>\r\n        \r\n        <a class=\"g-signout2\" href=\"#\" onclick=\"signOut();\">Sign out</a>\r\n    </div>\r\n</form>\r\n</body>\r\n</html>','2020-11-16 14:18:42'),(267,'html','<!DOCTYPE html>\r\n<html>\r\n<head>\r\n	<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n	<title>LEA Auth - Who is it?</title>\r\n	<meta name=\"google-signin-client_id\" content=\"1058560848585-k19ome8pfq3ddmr8mut359257em0vg52.apps.googleusercontent.com\">\r\n	<script src=\"https://apis.google.com/js/platform.js\" async defer></script>\r\n    <script src=\"<%=baseUrl%>_js/lib/jquery-1.8.3.min.js\"></script>\r\n	<script type=\"module\">\r\n	import {Ceed} from  \'<%=baseUrl%>_js/mindjs_v0.5/ceed.js\';\r\n	import {AjaxBrain} from  \'<%=baseUrl%>_js/mindjs_v0.5/ajaxbrain.js\';\r\n	window.Ceed = Ceed;\r\n\r\n	var pathname = window.location.pathname.split(\'/\');\r\n    var agentName = pathname.slice(3).join(\'/\');\r\n	window.agent = Ceed(agentName);\r\n	window.agent.then(agent => {\r\n		agent.see(\'setLibrary\', new AjaxBrain(\'<%=baseUrl%>ce/brain/\'));\r\n	});\r\n	</script>\r\n    <script>\r\n	window.clicked = false;\r\n	function onSignIn(googleUser) {\r\n        agent.then(a => a.see(\'signIn\', googleUser));\r\n    }\r\n    window.onclick = function () {\r\n        window.clicked = true;\r\n    };\r\n    \r\n    function signOut() {\r\n        agent.then(a => a.see(\'signOut\'));\r\n    }\r\n	</script>\r\n</head>\r\n<body>\r\n<form action=\"<%=baseUrl%>auth/login\" method=\"post\">\r\n    Who are you?<br/>\r\n    <input name=\"username\" id=\"a\" />\r\n    <input name=\"password\" id=\"b\" type=\"password\" />\r\n    <p id=\"license\">\r\n        LEA - Live Environment for Agents by <a href=\"mailto: macaroots@gmail.com\">Renato Lenz Costalima</a><br>\r\n        This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0. If a copy of the MPL was not distributed with this file, You can obtain one at <a rel=\"license\" href=\"https://mozilla.org/MPL/2.0/\">https://mozilla.org/MPL/2.0/</a>.\r\n    </p>\r\n    \r\n    <p>\r\n        <label><input type=\"checkbox\" name=\"agree\" value=\"true\" /> I agree with <a href=\"/LEA/ce/termos\" target=\"_blank\">Terms & Conditions</a></label>\r\n    </p>\r\n    <input value=\"Submit\" type=\"submit\" /><br/><br/>or<br/>\r\n    \r\n    <div>\r\n        <div class=\"g-signin2\" data-onsuccess=\"onSignIn\"></div>\r\n        \r\n        <a class=\"g-signout2\" href=\"#\" onclick=\"signOut();\">Sign out</a>\r\n    </div>\r\n</form>\r\n</body>\r\n</html>','2020-11-16 14:25:25'),(268,'html','<!DOCTYPE html>\r\n<html>\r\n<head>\r\n	<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n	<title>LEA Auth - Who is it?</title>\r\n	<meta name=\"google-signin-client_id\" content=\"1058560848585-k19ome8pfq3ddmr8mut359257em0vg52.apps.googleusercontent.com\">\r\n	<script src=\"https://apis.google.com/js/platform.js\" async defer></script>\r\n    <script src=\"<%=baseUrl%>_js/lib/jquery-1.8.3.min.js\"></script>\r\n	<script type=\"module\">\r\n	import {Ceed} from  \'<%=baseUrl%>_js/mindjs_v0.5/ceed.js\';\r\n	import {AjaxBrain} from  \'<%=baseUrl%>_js/mindjs_v0.5/ajaxbrain.js\';\r\n	window.Ceed = Ceed;\r\n\r\n	var pathname = window.location.pathname.split(\'/\');\r\n    var agentName = pathname.slice(3).join(\'/\');\r\n	window.agent = Ceed(agentName);\r\n	window.agent.then(agent => {\r\n		agent.see(\'setLibrary\', new AjaxBrain(\'<%=baseUrl%>brain/\'));\r\n	});\r\n	</script>\r\n    <script>\r\n	window.clicked = false;\r\n	function onSignIn(googleUser) {\r\n        agent.then(a => a.see(\'signIn\', googleUser));\r\n    }\r\n    window.onclick = function () {\r\n        window.clicked = true;\r\n    };\r\n    \r\n    function signOut() {\r\n        agent.then(a => a.see(\'signOut\'));\r\n    }\r\n	</script>\r\n</head>\r\n<body>\r\n<form action=\"<%=baseUrl%>auth/login\" method=\"post\">\r\n    Who are you?<br/>\r\n    <input name=\"username\" id=\"a\" />\r\n    <input name=\"password\" id=\"b\" type=\"password\" />\r\n    <p id=\"license\">\r\n        LEA - Live Environment for Agents by <a href=\"mailto: macaroots@gmail.com\">Renato Lenz Costalima</a><br>\r\n        This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0. If a copy of the MPL was not distributed with this file, You can obtain one at <a rel=\"license\" href=\"https://mozilla.org/MPL/2.0/\">https://mozilla.org/MPL/2.0/</a>.\r\n    </p>\r\n    \r\n    <p>\r\n        <label><input type=\"checkbox\" name=\"agree\" value=\"true\" /> I agree with <a href=\"/LEA/ce/termos\" target=\"_blank\">Terms & Conditions</a></label>\r\n    </p>\r\n    <input value=\"Submit\" type=\"submit\" /><br/><br/>or<br/>\r\n    \r\n    <div>\r\n        <div class=\"g-signin2\" data-onsuccess=\"onSignIn\"></div>\r\n        \r\n        <a class=\"g-signout2\" href=\"#\" onclick=\"signOut();\">Sign out</a>\r\n    </div>\r\n</form>\r\n</body>\r\n</html>','2020-11-16 14:27:36'),(269,'html','<!DOCTYPE html>\r\n<html>\r\n<head>\r\n	<title>LEA - Live Environment for Agents</title>\r\n	<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\" />\r\n	<script src=\"<%=baseUrl%>_js/lib/jquery-1.8.3.min.js\"></script>\r\n	<script type=\"module\">\r\n	import {Ceed} from  \'<%=baseUrl%>_js/mindjs_v0.5/ceed.js\';\r\n	import {AjaxBrain} from  \'<%=baseUrl%>_js/mindjs_v0.5/ajaxbrain.js\';\r\n	import {AskAgent} from  \'<%=baseUrl%>_js/agents/lea_client.js\';\r\n	window.Ceed = Ceed;\r\n	window.AskAgent = AskAgent;\r\n\r\n	var pathname = window.location.pathname.split(\'/\');\r\n    var agentName = pathname.slice(1).join(\'/\') + \' Page\';\r\n	$(function() {\r\n		Ceed().then(ceed => {\r\n			ceed.skills[\'ask\'] = new AskAgent(\'Script\');\r\n			ceed.see(\'setLibrary\', new AjaxBrain(\'/brain/\'));\r\n			\r\n			Ceed(agentName).then(agent => {\r\n				window.agent = agent;\r\n				agent.see(\'appendTo\', \'body\');\r\n				agent.see(\'edit\');\r\n			});\r\n			\r\n		});\r\n	});\r\n	</script>\r\n	<style>\r\n	#auth {\r\n        position: sticky;\r\n        top: 0;\r\n        text-align: right;\r\n    }\r\n    \r\n    #license {\r\n        position: fixed;\r\n        bottom: 8px;\r\n        right: 8px;\r\n        text-align: right;\r\n        width: 420px;\r\n    }\r\n    body {\r\n        padding-bottom: 75px;\r\n    }\r\n	</style>\r\n</head>\r\n<body>\r\n    <div id=\"auth\">\r\n    </div>\r\n    <div id=\"license\">\r\n        <b><a target=\"_blank\" href=\"https://tiia.com.br/\">LEA - Live Environment for Agents</a></b> by <a href=\"mailto: macaroots@gmail.com\">Renato Lenz Costalima</a><br />\r\n        This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0. If a copy of the MPL was not distributed with this file, You can obtain one at <a rel=\"license\" href=\"https://mozilla.org/MPL/2.0/\">https://mozilla.org/MPL/2.0/</a>.\r\n    </div>\r\n</body>\r\n</html>','2020-11-18 02:19:06'),(270,'js','new (function EmptyAction() {\n	this.act = function (args, resolve, reject) {\n		// your code here\n		resolve();\n	};\n})();','2020-11-18 02:25:23'),(271,'string','Element','2020-11-18 02:31:52'),(272,'js','new (function live() {\n	this.act = function (args, resolve, reject) {\n		var agent = this.agent;\n		agent.see(\'addName\', \'Element\')\n			.then(resolve)\n			.catch(reject);\n	};\n})();','2020-11-18 02:31:52'),(273,'string','Page','2020-11-18 02:34:49'),(274,'js','new (function Page.live() {\n	this.act = function (args, resolve, reject) {\n		var agent = this.agent;\n		agent.see(\'addName\', \'Page\')\n			.then(function () {\n				agent.see(\'Element.live\', args).then(resolve).catch(reject);\n			});\n	};\n})();','2020-11-18 02:34:49'),(275,'js','new (function Page.live() {\n	this.act = function (args, resolve, reject) {\n		var agent = this.agent;\n		agent.see(\'addName\', \'Page\').then(function () {\n			agent.see(\'Element.live\', args).then(resolve).catch(reject);\n		});\n	};\n})();','2020-11-18 02:37:02'),(276,'js','new (function live() {\n	this.act = function (args, resolve, reject) {\n		var agent = this.agent;\n		agent.see(\'addName\', \'Page\').then(function () {\n			agent.see(\'Element.live\', args).then(resolve).catch(reject);\n		});\n	};\n})();','2020-11-18 02:37:31'),(277,'string','addName','2020-11-18 02:48:55'),(278,'js','new (function addName () {\n	this.act = function (args, resolve, reject) {\n	    var agent = this.agent;\n	    var names = agent.mind.names;\n	    var name, relativeName, index;\n	    if (typeof args == \'string\') {\n	        if (args.indexOf(\':\') == -1) {\n    	        name = args;\n    	        relativeName = agent.mind.getName();\n    	        index = 1;\n	        }\n	        else {\n	            args = args.split(\':\');\n    	        name = args[0];\n    	        relativeName = args[1];\n    	        index = parseInt(args[2] || 1);\n	        }\n	    } \n	    else {\n	        name = args[0];\n	        relativeName = args[1];\n	        index = args[2] || 1;\n	    }\n	    \n	    var newNames = name.split(\' \');\n	    indexRelative = names.indexOf(relativeName);\n	    indexFinal = index + indexRelative;\n	    for (var i in newNames) {\n	        name = newNames[i];\n	        var indexNew = names.indexOf(name);\n		if (indexNew != -1) {\n		        indexFinal = indexNew + 1;\n		        continue;\n		}\n    	    \n	        names.splice(indexFinal, 0, name);\n	        indexFinal++;\n	    }\n\n	    resolve(names);\n	};\n})();','2020-11-18 02:48:55'),(279,'js','new (function addName () {\n	this.act = function (args, resolve, reject) {\n	    var agent = this.agent;\n	    var names = agent.mind.names;\n	    var name, relativeName, index;\n	    if (typeof args == \'string\') {\n	        if (args.indexOf(\':\') == -1) {\n    	        name = args;\n    	        relativeName = agent.mind.getName();\n    	        index = 1;\n	        }\n	        else {\n	            args = args.split(\':\');\n    	        name = args[0];\n    	        relativeName = args[1];\n    	        index = parseInt(args[2] || 1);\n	        }\n	    } \n	    else {\n	        name = args[0];\n	        relativeName = args[1];\n	        index = args[2] || 1;\n	    }\n	    \n	    var newNames = name.split(\' \');\n	    var indexRelative = names.indexOf(relativeName);\n	    var indexFinal = index + indexRelative;\n	    for (var i in newNames) {\n	        name = newNames[i];\n	        var indexNew = names.indexOf(name);\n		if (indexNew != -1) {\n		        indexFinal = indexNew + 1;\n		        continue;\n		}\n    	    \n	        names.splice(indexFinal, 0, name);\n	        indexFinal++;\n	    }\n\n	    resolve(names);\n	};\n})();','2020-11-18 02:51:00'),(280,'js','new (function live() {\n	this.act = function (args, resolve, reject) {\n		var agent = this.agent;\n		agent.see(\'addName\', \'Element\').then(resolve).catch(reject);\n	};\n})();','2020-11-18 02:53:49'),(281,'js','new (function live() {\n	this.act = function (args, resolve, reject) {\n		var agent = this.agent;\n		agent.see(\'addName\', \'Page Element\').then(function () {\n			agent.see(\'Element.live\', args).then(resolve).catch(reject);\n		});\n	};\n})();','2020-11-18 02:55:03'),(283,'string','appendTo','2020-11-18 03:03:07'),(284,'js','new (function appendTo () {\n	this.act = function (args, resolve, reject) {\n		var agent = this.agent;\n		\n		var tag;\n		var target;\n		if (typeof args == \'string\') {\n			args = args.split(\',\');\n		}\n		target = args[0];\n		tag = args[1];\n		if (target == null) {\n			target = $(\'.selected\');\n			if (target.length == 0) {\n				target = \'body\';\n			}\n		}\n		if (tag == null) {\n			tag = \'<div>\';\n		}\n		\n		var getBody = function (callback) {\n			agent.see(\'get\', \'body\').then(callback);\n		};\n		agent.getBody = getBody;\n			\n		agent.getBody(function (body) {\n			if (body != null) {\n				body.remove();\n			}\n			body = $(tag).appendTo(target);\n			// bind agent-div\n			agent.see(\'set\', [\'body\', body]);\n			body[0].agent = agent;\n			agent.see(\'getNames\').then(function (names) {\n				body.addClass(names);\n			});\n			\n			agent.see(\'reloadHtml\').then(function () {\n				resolve(body); // return statement\n				agent.see(\'trigger\', \'onLoad\');\n			});\n			agent.see(\'reloadCss\');\n			/*\n			body.click(function (event) {\n				agent.see(\'clicked\', event);\n			});*/\n			\n			if (window[\'getAgent\'] == null) {\n				window[\'getAgent\'] = function (element) {\n					var _agent = $(element).closest(\'.Naive\')[0].agent;\n					window[\'_agent\'] = _agent;\n					return _agent;\n				};\n			}\n			\n		});\n	};\n})();','2020-11-18 03:03:07'),(285,'string','reloadCss','2020-11-18 03:06:21'),(286,'js','new (function reloadCss () {\n	this.act = function (args, resolve, reject) {\n		var agent = this.agent;\n        agent.see(\'getStyle\').then(function (style) {\n		    agent.see(\'getCss\'.then(function (css) {\n		        style.html(css);\n		        \n		        resolve(true);\n		    });\n		});\n	};\n})();','2020-11-18 03:06:21'),(287,'js','new (function reloadCss () {\n	this.act = function (args, resolve, reject) {\n		var agent = this.agent;\n        agent.see(\'getStyle\').then(function (style) {\n		    agent.see(\'getCss\').then(function (css) {\n		        style.html(css);\n		        \n		        resolve(true);\n		    });\n		});\n	};\n})();','2020-11-18 03:06:49'),(288,'js','new (function reloadHtml () {\n	this.act = function (args, resolve, reject) {\n	    var agent = this.agent;\n        agent.see(\'get\', \'body\').then(function (body) {\n    		agent.see(\'getHtml\').then(function (html) {\n    		    body.append(html);\n    		    resolve(body);\n    		});\n        });\n	};\n})();','2020-11-18 03:09:09'),(289,'string','reloadHtml','2020-11-18 03:09:09'),(290,'string','getStyle','2020-11-18 03:11:43'),(291,'js','new (function getStyle () {\n	this.act = function (args, resolve, reject) {\n	    var agent = this.agent;\n	    agent.see(\'get\', \'style\').then(function (style) {\n	        if (style == null) {\n        		style = $(\'<style>\').appendTo(\'head\');\n        		agent.see(\'set\', [\'style\', style]).then(function () {\n        		    resolve(style);\n        		});\n	        }\n	        else {\n	            resolve(style);\n	        }\n	    });\n	};\n})();','2020-11-18 03:11:43'),(292,'string','getCss','2020-11-18 03:14:33'),(293,'css','','2020-11-18 03:14:33'),(294,'string','getHtml','2020-11-18 03:17:12'),(295,'html','New Element','2020-11-18 03:17:12'),(296,'string','trigger','2020-11-18 03:20:18'),(297,'js','new (function trigger () {\n	this.act = function (eventName, resolve, reject) {\n		var agent = this.agent;\n	    agent.see(eventName).then(function (script) {\n	        $(\'body\').append(script);\n	        \n	        resolve(true);\n	    });\n	};\n})();','2020-11-18 03:20:18'),(298,'string','D','2020-11-18 03:21:09'),(299,'string','onLoad','2020-11-18 03:21:09'),(300,'js','new (function onLoad() {\n	this.act = function (args, resolve, reject) {\n		// your code here\n		resolve();\n	};\n})();','2020-11-18 03:21:09'),(301,'html','<script>\n// your code here\n</script>','2020-11-18 03:22:34'),(302,'js','new (function live() {\n	this.act = async function (args, resolve, reject) {\n	    /*let MySQLBrain = (await import(\'./mysql_brain.js\')).MySQLBrain;\n	    let options = Object.assign({\n			database: \'xanadu\'\n		}, args);\n		agent.library = new MySQLBrain(options);*/\n		let agent = this.agent;\n		agent.library = (await agent.see(\'getLibraries\'))[0];\n		await Promise.all([\n    		agent.see(\'study\', \'preDispatch\'),\n    		agent.see(\'study\', \'reason\'),\n    		agent.see(\'study\', \'tie\'),\n    		agent.see(\'study\', \'getLinkFromRequest\'),\n    		agent.see(\'study\', \'getSymbolFromRequest\'),\n    		agent.see(\'study\', \'GET_getSymbolFromRequest\'),\n    		agent.see(\'study\', \'POST_getSymbolFromRequest\')\n    	]);\n		resolve(true);\n	};\n})();','2020-11-18 13:49:38'),(303,'js','new (function live() {\n	this.act = async function (args, resolve, reject) {\n	    /*let MySQLBrain = (await import(\'./mysql_brain.js\')).MySQLBrain;\n	    let options = Object.assign({\n			database: \'xanadu\'\n		}, args);\n		agent.library = new MySQLBrain(options);*/\n		let agent = this.agent;\n		agent.library = (await agent.see(\'getLibraries\'))[0];\n		await Promise.all([\n    		agent.see(\'study\', \'preDispatch\'),\n    		agent.see(\'study\', \'reason\'),\n    		agent.see(\'study\', \'tie\'),\n    		agent.see(\'study\', \'gets\'),\n    		agent.see(\'study\', \'getLinkFromRequest\'),\n    		agent.see(\'study\', \'getSymbolFromRequest\'),\n    		agent.see(\'study\', \'GET_getSymbolFromRequest\'),\n    		agent.see(\'study\', \'POST_getSymbolFromRequest\')\n    	]);\n		resolve(true);\n	};\n})();','2020-11-18 13:52:48'),(304,'string','edit','2020-11-18 13:56:09'),(305,'js','new (function edit () {\n	this.act = function (args, resolve, reject) {\n		var agent = this.agent;\n		agent.see(\'editCss\').then(function () {\n    		agent.see(\'ask\', \'onLoad\').then(function () {\n    	        agent.see(\'editHtml\').then(resolve);\n    		});\n		}).catch(reject);\n	};\n})();','2020-11-18 13:56:09'),(306,'html','<!DOCTYPE html>\r\n<html>\r\n<head>\r\n	<title>LEA - Live Environment for Agents</title>\r\n	<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\" />\r\n	<script src=\"<%=baseUrl%>_js/lib/jquery-1.8.3.min.js\"></script>\r\n	<script type=\"module\">\r\n	import {Ceed, AskAgent} from  \'<%=baseUrl%>_js/mindjs_v0.5/ceed.js\';\r\n	import {AjaxBrain} from  \'<%=baseUrl%>_js/mindjs_v0.5/ajaxbrain.js\';\r\n	window.Ceed = Ceed;\r\n	window.AskAgent = AskAgent;\r\n\r\n	var pathname = window.location.pathname.split(\'/\');\r\n    var agentName = pathname.slice(1).join(\'/\') + \' Page\';\r\n	$(function() {\r\n		Ceed().then(ceed => {\r\n			ceed.skills[\'ask\'] = new AskAgent(\'Script\');\r\n			ceed.see(\'setLibrary\', new AjaxBrain(\'/brain/\'));\r\n			\r\n			Ceed(agentName).then(agent => {\r\n				window.agent = agent;\r\n				agent.see(\'appendTo\', \'body\');\r\n				agent.see(\'edit\');\r\n			});\r\n			\r\n		});\r\n	});\r\n	</script>\r\n	<style>\r\n	#auth {\r\n        position: sticky;\r\n        top: 0;\r\n        text-align: right;\r\n    }\r\n    \r\n    #license {\r\n        position: fixed;\r\n        bottom: 8px;\r\n        right: 8px;\r\n        text-align: right;\r\n        width: 420px;\r\n    }\r\n    body {\r\n        padding-bottom: 75px;\r\n    }\r\n	</style>\r\n</head>\r\n<body>\r\n    <div id=\"auth\">\r\n    </div>\r\n    <div id=\"license\">\r\n        <b><a target=\"_blank\" href=\"https://tiia.com.br/\">LEA - Live Environment for Agents</a></b> by <a href=\"mailto: macaroots@gmail.com\">Renato Lenz Costalima</a><br />\r\n        This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0. If a copy of the MPL was not distributed with this file, You can obtain one at <a rel=\"license\" href=\"https://mozilla.org/MPL/2.0/\">https://mozilla.org/MPL/2.0/</a>.\r\n    </div>\r\n</body>\r\n</html>','2020-11-18 14:28:56'),(307,'string','editCss','2020-11-18 14:36:57'),(308,'js','new (function editCss () {\n	this.act = function (args, callback) {\n		var agent = this.agent;\n        agent.see(\'getStyle\').then(function (style) {\n		    Ceed(\'Script\').then(script => \n				script.see(\'askBind\', [agent, \'getCss\', style]).then(callback)\n			);\n        });\n	};\n})();','2020-11-18 14:36:57'),(309,'js','new (function editCss () {\n	this.act = function (args, resolve, reject) {\n		var agent = this.agent;\n        agent.see(\'getStyle\').then(function (style) {\n		    Ceed(\'Script\').then(script => \n				script.see(\'askBind\', [agent, \'getCss\', style]).then(resolve)\n			);\n        }).catch(reject);\n	};\n})();','2020-11-18 14:38:16'),(310,'string','Script','2020-11-18 18:38:26'),(311,'js','new (function live () {\n	this.act = function (target, resolve, reject) {\n		var agent = this.agent;\n		agent.see(\'addName\', \'Script Element\').then(function () {\n			$.ajax({\n				type: \"GET\",\n				url: baseUrl + \'_js/ace/ace.js\',\n				dataType: \"script\",\n				cache: true,\n				success: function () { \n					ace.config.set(\"modePath\", baseUrl + \"_js/ace\");\n					ace.config.set(\"workerPath\", baseUrl + \"_js/ace\");\n					ace.config.set(\"themePath\", baseUrl + \"_js/ace\");\n					\n					resolve(true);\n				}\n			});\n		});\n	};\n})();','2020-11-18 18:38:26'),(312,'js','new (function live () {\n	this.act = function (target, resolve, reject) {\nconsole.log(\'BRAIN LIVE\', this.agent.toString());\n		var agent = this.agent;\n		agent.see(\'addName\', \'Script Element\').then(function () {\n			$.ajax({\n				type: \"GET\",\n				url: baseUrl + \'_js/ace/ace.js\',\n				dataType: \"script\",\n				cache: true,\n				success: function () { \n					ace.config.set(\"modePath\", baseUrl + \"_js/ace\");\n					ace.config.set(\"workerPath\", baseUrl + \"_js/ace\");\n					ace.config.set(\"themePath\", baseUrl + \"_js/ace\");\n					\n					resolve(true);\n				}\n			});\n		});\n	};\n})();\n','2020-11-18 18:39:23'),(313,'js','new (function live () {\n	this.act = function (target, resolve, reject) {\nconsole.log(\'BRAIN LIVE\', this.agent.toString());\n		var agent = this.agent;\n		agent.see(\'addName\', \'Script Element\').then(function () {\n			$.ajax({\n				type: \"GET\",\n				url: baseUrl + \'_js/ace/ace.js\',\n				dataType: \"script\",\n				cache: true,\n				success: function () { \n					ace.config.set(\"modePath\", baseUrl + \"_js/ace\");\n					ace.config.set(\"workerPath\", baseUrl + \"_js/ace\");\n					ace.config.set(\"themePath\", baseUrl + \"_js/ace\");\n					\n					resolve(true);\n				}\n			});\n		});\n	};\n})();','2020-11-18 18:39:35'),(314,'html','<!DOCTYPE html>\r\n<html>\r\n<head>\r\n	<title>LEA - Live Environment for Agents</title>\r\n	<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\" />\r\n	<script src=\"<%=baseUrl%>_js/lib/jquery-1.8.3.min.js\"></script>\r\n	<script type=\"module\">\r\n	import {Ceed, AskAgent} from  \'<%=baseUrl%>_js/mindjs_v0.5/ceed.js\';\r\n	import {AjaxBrain} from  \'<%=baseUrl%>_js/mindjs_v0.5/ajaxbrain.js\';\r\n	window.Ceed = Ceed;\r\n	window.AskAgent = AskAgent;\r\n	window.baseUrl = \'<%=baseUrl%>\';\r\n\r\n	var pathname = window.location.pathname.split(\'/\');\r\n    var agentName = pathname.slice(1).join(\'/\') + \' Page\';\r\n	$(function() {\r\n		Ceed().then(ceed => {\r\n			ceed.skills[\'ask\'] = new AskAgent(\'Script\');\r\n			ceed.see(\'setLibrary\', new AjaxBrain(\'/brain/\'));\r\n			\r\n			Ceed(agentName).then(agent => {\r\n				window.agent = agent;\r\n				agent.see(\'appendTo\', \'body\');\r\n				agent.see(\'edit\');\r\n			});\r\n			\r\n		});\r\n	});\r\n	</script>\r\n	<style>\r\n	#auth {\r\n        position: sticky;\r\n        top: 0;\r\n        text-align: right;\r\n    }\r\n    \r\n    #license {\r\n        position: fixed;\r\n        bottom: 8px;\r\n        right: 8px;\r\n        text-align: right;\r\n        width: 420px;\r\n    }\r\n    body {\r\n        padding-bottom: 75px;\r\n    }\r\n	</style>\r\n</head>\r\n<body>\r\n    <div id=\"auth\">\r\n    </div>\r\n    <div id=\"license\">\r\n        <b><a target=\"_blank\" href=\"https://tiia.com.br/\">LEA - Live Environment for Agents</a></b> by <a href=\"mailto: macaroots@gmail.com\">Renato Lenz Costalima</a><br />\r\n        This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0. If a copy of the MPL was not distributed with this file, You can obtain one at <a rel=\"license\" href=\"https://mozilla.org/MPL/2.0/\">https://mozilla.org/MPL/2.0/</a>.\r\n    </div>\r\n</body>\r\n</html>','2020-11-18 18:43:36'),(315,'string','askFor','2020-11-18 18:58:39'),(316,'js','new (function askFor () {\n	this.act = function (args, resolve, reject) {\n		var script = this.agent;\n		var asker;\n		var key;\n		if (typeof args == \'string\') {\n    		var list = args.split(\'.\');\n    		asker = $(\'.\' + list[0])[0].agent;\n    		key = list[1];\n		}\n		else {\n		    asker = args[0];\n		    key = args[1];\n		}\n		script.see(\'get\', \'parent\').then(function (parent) {\n		    parent.see(\'show\');\n		});\n		script.see(\'get\', \'editor\').then(function (editor) {\n		    if (editor == null) {\n		        console.warn(\'Editor missing!\');\n				script.see(\'appendTo\', \'body\');\n		        return false;\n		    }\n		    editor.removeAllListeners(\'change\');\n		    script.see(\'get\', \'body\').then(function (body) {\n		        body.show();\n		        var type = body.find(\'input[name=type]\');\n    			var totalVersions = body.find(\'.versions > .total\');\n		        var questions = body.find(\'.questions\');\n		        var question = $(\'<label>\').prependTo(questions);\n		        var name = $(\'<span>\').prependTo(question);\n		        question[0].agent = asker;\n		        question[0]._key = key;\n		        asker.see(\'getNames\').then(function (names) {\n		            name.html(names);\n		        });\n		        var keyInput = $(\'<input>\').appendTo(question);\n		        keyInput.val(key);\n		        \n                var session = ace.createEditSession(\'\', editor.getSession().getMode());\n                session.setOption(\'indentedSoftWrap\', false);\n        		session.setUseWrapMode(true);\n    			session.getUndoManager().markClean();\n        		\n		        question[0].session = session;\n		        var selectQuestion = function (event) {\n                    editor.setSession(question[0].session);\n		            questions.find(\'.selected\').removeClass(\'selected\');\n		            question.addClass(\'selected\');\n		            type.val(question[0]._type);\n		            try {\n			            totalVersions.html(question[0].representations.length);\n		            } catch (e) {}\n                };\n                question.click(selectQuestion);\n                question.trigger(\'click\');\n		    \n    		    var z = \'\';\n    			var info = \'\';\n    			var representations;\n    			var context = 1;\n    			\n    			asker.see(\'read\', key).then(function (representations) {\n    				if (representations != null && representations.length > 0) {\n					    question[0].representations = representations;\n    				    var representation = representations[representations.length - context];\n    					z = representation.z;\n    					info = representation.info;\n    \n                        question[0]._type = z;\n    					type.val(z);\n    					session.setValue(info, -1);\n    					session.getUndoManager().markClean();\n    					type.trigger(\'change\');\n    				}\n    				else {\n    					asker.see(\'read\', \'EmptyAction\').then(function (representations) {\n    						if (representations != null && representations.length > 0) {\n    						    question[0].representations = representations;\n    						    var representation = representations[representations.length - 1];\n    							z = representation.z;\n    							info = representation.info;\n    							info = info.replace(new RegExp(\'agent\', \'g\'), asker.mind.getName());\n    							info = info.replace(new RegExp(\'EmptyAction\', \'g\'), key);\n                                question[0]._type = z;\n    							type.val(z);\n    							session.setValue(info, -1);\n    							session.getUndoManager().markClean();\n    							type.trigger(\'change\');\n    						}\n    					});\n    				}\n    			});\n		    });\n		});\n		resolve(false);\n	};\n})();','2020-11-18 18:58:39'),(317,'js','new (function live () {\n	this.act = function (target, resolve, reject) {\nconsole.log(\'BRAIN LIVE\', this.agent.toString());\n		var agent = this.agent;\n		agent.see(\'addName\', \'Script Element\').then(function () {\n			agent.see(\'study\', \'askFor\');\n			$.ajax({\n				type: \"GET\",\n				url: baseUrl + \'_js/ace/ace.js\',\n				dataType: \"script\",\n				cache: true,\n				success: function () { \n					ace.config.set(\"modePath\", baseUrl + \"_js/ace\");\n					ace.config.set(\"workerPath\", baseUrl + \"_js/ace\");\n					ace.config.set(\"themePath\", baseUrl + \"_js/ace\");\n					\n					resolve(true);\n				}\n			});\n		});\n	};\n})();','2020-11-18 19:01:27'),(318,'html','<form onsubmit=\"getAgent(this).see(\'submit\', this); return false;\">\n    <div class=\"questions\"></div>\n    <div class=\"info\" style=\"width: 600px; height: 400px; float: left;\"></div>\n    <input name=\"type\" placeholder=\"type\" onchange=\"getAgent(this).see(\'typeChanged\', this);\">\n    <div class=\"versions\">\n        <label for=\"version\">version: </label>\n        <input id=\"version\" onchange=\"getAgent(this).see(\'changeVersion\', 0);\" value=\"0\">\n        / <label class=\"total\"></label>\n        <button accessKey=\"p\" onclick=\"getAgent(this).see(\'changeVersion\', -1);\" type=\"button\">previous</button>\n        <button accessKey=\"n\" onclick=\"getAgent(this).see(\'changeVersion\', 1);\" type=\"button\">next</button>\n    </div>\n    \n    <br>\n    <button accessKey=\"\" onclick=\"getAgent(this).see(\'executeClick\');\" type=\"button\">execute</button>\n    <button accessKey=\"s\" type=\"submit\">Save</button>\n    <button accessKey=\"w\" onclick=\"getAgent(this).see(\'close\');\" type=\"button\">close</button>\n    <button accessKey=\"t\" onclick=\"getAgent(this).see(\'setClick\');\" type=\"button\">set</button>\n    <button accessKey=\"r\" onclick=\"getAgent(this).see(\'readClick\');\" type=\"button\">read</button>\n    <button accessKey=\"d\" onclick=\"getAgent(this).see(\'download\');\" type=\"button\">download</button>\n</form>','2020-11-18 19:02:53'),(319,'js','new (function onLoad () {\n	this.act = function (target, resolve, reject) {\n		var agent = this.agent;\n					\n		agent.see(\'get\', \'body\').then(function (body) {\n			/* adicionar barra de ferramentas\n			agent.see(\'newAgent\', \'scriptTools,tools\', function (tools) {\n				tools.see(\'live\', body);\n			});\n			*/\n			\n			var info = body.find(\'.info\');\n			console.warn(\'script onLoad\', body, info[0]);\n			\n			var editor = ace.edit(info[0]);\n			body.editor = editor;\n			agent.see(\'set\', [\'editor\', editor]);\n			editor.on(\'blur\', function () {\n				var question = body.find(\'.questions .selected\');\n				console.warn(\'changing\', editor.getSession().getUndoManager().isClean());\n				\n				if (!editor.getSession().getUndoManager().isClean()) {\n					question.addClass(\'changed\');\n					question.removeClass(\'learned\');\n				}\n				else {\n					question.addClass(\'learned\');\n					question.removeClass(\'changed\');\n				}\n			});\n			\n			var session = editor.getSession();\n			session.setMode(\'ace/mode/javascript\');\n			session.setOption(\'indentedSoftWrap\', false);\n			editor.setOptions({\n			  fontSize: \"14pt\"\n			});\n			session.setUseWrapMode(true);\n			\n			body.hide();\n			\n			resolve(\'\');\n		});\n	};\n})();','2020-11-18 19:22:41'),(320,'js','new (function live () {\n	this.act = function (target, resolve, reject) {\nconsole.log(\'SCRIPT LIVE\', this.agent.toString());\n		var agent = this.agent;\n		agent.see(\'addName\', \'Script Element\').then(function () {\n			agent.see(\'study\', \'askFor\');\n			$.ajax({\n				type: \"GET\",\n				url: baseUrl + \'_js/ace/ace.js\',\n				dataType: \"script\",\n				cache: true,\n				success: function () { \n					ace.config.set(\"modePath\", baseUrl + \"_js/ace\");\n					ace.config.set(\"workerPath\", baseUrl + \"_js/ace\");\n					ace.config.set(\"themePath\", baseUrl + \"_js/ace\");\n					\n					resolve(true);\n				}\n			});\n		});\n	};\n})();','2020-11-18 19:27:09'),(321,'js','new (function live () {\n	this.act = function (target, resolve, reject) {\nconsole.log(\'SCRIPT LIVE\', this.agent.toString());\n		var agent = this.agent;\n		agent.see(\'addName\', \'Script Element\').then(function () {\n			agent.see(\'study\', \'askFor\');\n			agent.see(\'study\', \'getHtml\');\n			$.ajax({\n				type: \"GET\",\n				url: baseUrl + \'_js/ace/ace.js\',\n				dataType: \"script\",\n				cache: true,\n				success: function () { \n					ace.config.set(\"modePath\", baseUrl + \"_js/ace\");\n					ace.config.set(\"workerPath\", baseUrl + \"_js/ace\");\n					ace.config.set(\"themePath\", baseUrl + \"_js/ace\");\n					\n					resolve(true);\n				}\n			});\n		});\n	};\n})();','2020-11-18 19:28:36'),(322,'js','new (function submit () {\n	this.act = function (args, resolve, reject) {\n		var script = this.agent;\n		script.see(\'get\', \'editor\').then(function (editor) {\n		    script.see(\'get\', \'body\').then(function (body) {\n		        var question = body.find(\'.selected\');\n		        var asker = question[0].agent;\n		        var key = question.find(\'input\').val();\n		        var type = body.find(\'input[name=type]\').val();\n				var info = editor.getValue();\n		        var answer = new Symbol(0, type, info);\n				asker.see(\'hearAnswer\', [key, answer]).then(function (learned) {\n				    console.log(\'Learned:\', key, learned);\n					if (learned) {\n						question.addClass(\'learned\');\n						question.removeClass(\'changed\');\n    					editor.getSession().getUndoManager().markClean();\n					}\n				});\n		        \n		    });\n		});\n	};\n})();','2020-11-18 19:34:44'),(323,'string','submit','2020-11-18 19:34:44'),(324,'','new (function live () {\n	this.act = function (target, resolve, reject) {\nconsole.log(\'SCRIPT LIVE\', this.agent.toString());\n		var agent = this.agent;\n		agent.see(\'addName\', \'Script Element\').then(function () {\n			agent.see(\'study\', \'askFor\');\n			agent.see(\'study\', \'askBind\');\n			agent.see(\'study\', \'reloadHtml\');\n			agent.see(\'study\', \'getHtml\');\n			agent.see(\'study\', \'appendTo\');\n			agent.see(\'study\', \'onLoad\');\n			$.ajax({\n				type: \"GET\",\n				url: baseUrl + \'_js/ace/ace.js\',\n				dataType: \"script\",\n				cache: true,\n				success: function () { \n					ace.config.set(\"modePath\", baseUrl + \"_js/ace\");\n					ace.config.set(\"workerPath\", baseUrl + \"_js/ace\");\n					ace.config.set(\"themePath\", baseUrl + \"_js/ace\");\n					\n					resolve(true);\n				}\n			});\n		});\n	};\n})();','2020-11-18 19:42:19'),(325,'js','new (function live () {\n	this.act = function (target, resolve, reject) {\nconsole.log(\'SCRIPT LIVE\', this.agent.toString());\n		var agent = this.agent;\n		agent.see(\'addName\', \'Script Element\').then(function () {\n			agent.see(\'study\', \'askFor\');\n			agent.see(\'study\', \'askBind\');\n			agent.see(\'study\', \'reloadHtml\');\n			agent.see(\'study\', \'getHtml\');\n			agent.see(\'study\', \'appendTo\');\n			agent.see(\'study\', \'onLoad\');\n			$.ajax({\n				type: \"GET\",\n				url: baseUrl + \'_js/ace/ace.js\',\n				dataType: \"script\",\n				cache: true,\n				success: function () { \n					ace.config.set(\"modePath\", baseUrl + \"_js/ace\");\n					ace.config.set(\"workerPath\", baseUrl + \"_js/ace\");\n					ace.config.set(\"themePath\", baseUrl + \"_js/ace\");\n					\n					resolve(true);\n				}\n			});\n		});\n	};\n})();','2020-11-18 19:42:42'),(326,'js','new (function askFor () {\r\n	this.act = function (args, resolve, reject) {\r\n		var script = this.agent;\r\n		var asker;\r\n		var key;\r\n		if (typeof args == \'string\') {\r\n    		var list = args.split(\'.\');\r\n    		asker = $(\'.\' + list[0])[0].agent;\r\n    		key = list[1];\r\n		}\r\n		else {\r\n		    asker = args[0];\r\n		    key = args[1];\r\n		}\r\n		script.see(\'get\', \'parent\').then(function (parent) {\r\n		    parent.see(\'show\');\r\n		});\r\n		script.see(\'get\', \'editor\').then(function (editor) {\r\n		    if (editor == null) {\r\n		        console.warn(\'Editor missing!\');\r\n				script.see(\'appendTo\', \'body\');\r\n		        return false;\r\n		    }\r\n		    editor.removeAllListeners(\'change\');\r\n		    script.see(\'get\', \'body\').then(function (body) {\r\n		        body.show();\r\n		        var txType = body.find(\'input[name=type]\');\r\n    			var totalVersions = body.find(\'.versions > .total\');\r\n		        var questions = body.find(\'.questions\');\r\n		        var question = $(\'<label>\').prependTo(questions);\r\n		        var name = $(\'<span>\').prependTo(question);\r\n		        question[0].agent = asker;\r\n		        question[0]._key = key;\r\n		        asker.see(\'getNames\').then(function (names) {\r\n		            name.html(names);\r\n		        });\r\n		        var keyInput = $(\'<input>\').appendTo(question);\r\n		        keyInput.val(key);\r\n		        \r\n                var session = ace.createEditSession(\'\', editor.getSession().getMode());\r\n                session.setOption(\'indentedSoftWrap\', false);\r\n        		session.setUseWrapMode(true);\r\n    			session.getUndoManager().markClean();\r\n        		\r\n		        question[0].session = session;\r\n		        var selectQuestion = function (event) {\r\n                    editor.setSession(question[0].session);\r\n		            questions.find(\'.selected\').removeClass(\'selected\');\r\n		            question.addClass(\'selected\');\r\n		            txType.val(question[0]._type);\r\n		            try {\r\n			            totalVersions.html(question[0].representations.length);\r\n		            } catch (e) {}\r\n                };\r\n                question.click(selectQuestion);\r\n                question.trigger(\'click\');\r\n		    \r\n    		    var type = \'\';\r\n    			var info = \'\';\r\n    			var representations;\r\n    			var context = 1;\r\n    			\r\n    			asker.see(\'read\', key).then(function (representations) {\r\n    				if (representations != null && representations.length > 0) {\r\n					    question[0].representations = representations;\r\n    				    var representation = representations[representations.length - context];\r\n    					type = representation.type;\r\n    					info = representation.info;\r\n    \r\n                        question[0]._type = type;\r\n    					txType.val(type);\r\n    					session.setValue(info, -1);\r\n    					session.getUndoManager().markClean();\r\n    					txType.trigger(\'change\');\r\n    				}\r\n    				else {\r\n    					asker.see(\'read\', \'EmptyAction\').then(function (representations) {\r\n    						if (representations != null && representations.length > 0) {\r\n    						    question[0].representations = representations;\r\n    						    var representation = representations[representations.length - 1];\r\n    							type = representation.type;\r\n    							info = representation.info;\r\n    							info = info.replace(new RegExp(\'agent\', \'g\'), asker.mind.getName());\r\n    							info = info.replace(new RegExp(\'EmptyAction\', \'g\'), key);\r\n                                question[0]._type = type;\r\n    							txType.val(type);\r\n    							session.setValue(info, -1);\r\n    							session.getUndoManager().markClean();\r\n    							txType.trigger(\'change\');\r\n    						}\r\n    					});\r\n    				}\r\n    			});\r\n		    });\r\n		});\r\n		resolve(false);\r\n	};\r\n})();','2020-11-18 19:46:39'),(327,'js','new (function reloadCss () {\n	this.act = function (args, resolve, reject) {\n		var agent = this.agent;\n        agent.see(\'getStyle\').then(function (style) {\n            if (style != null) {\n    		    agent.see(\'getCss\').then(function (css) {\n    		        style.html(css);\n    		        \n    		        resolve(true);\n    		    });\n            }\n		});\n	};\n})();','2020-11-18 19:50:35'),(328,'string','editHtml','2020-11-18 19:54:55'),(329,'js','new (function editHtml () {\r\n	this.act = function (args, resolve, reject) {\r\n		var agent = this.agent;\r\n        agent.see(\'get\', \'body\').then(function (body) {\r\n		    Ceed(\'Script\').then(script =>\r\n				script.see(\'askBind\', [agent, \'getHtml\', body]).then(resolve)\r\n			);\r\n        }).catch(reject);\r\n	};\r\n})();','2020-11-18 19:54:55'),(330,'string','askBind','2020-11-18 20:01:55'),(331,'js','new (function askBind () {\r\n	this.act = function (args, resolve, reject) {\r\n	    var agent = this.agent;\r\n	    var target = args[2];\r\n	    agent.see(\'askFor\', args).then(function () {\r\n	        agent.see(\'get\', \'editor\').then(function (editor) {\r\n	            var session = editor.getSession();\r\n	            session.removeAllListeners(\'change\');\r\n    	        if (target.html() != \'\') {\r\n    	            editor.setValue(target.html(), -1);\r\n    	            session.getUndoManager().markClean();\r\n    	        }\r\n	            session.on(\'change\', function() {\r\n	                target.html(editor.getValue());\r\n                });\r\n	        });\r\n	    });\r\n		resolve();\r\n	};\r\n})();','2020-11-18 20:01:55'),(332,'js','new (function askFor () {\r\n	this.act = function (args, resolve, reject) {\r\n		var script = this.agent;\r\n		var asker;\r\n		var key;\r\n		if (typeof args == \'string\') {\r\n    		var list = args.split(\'.\');\r\n    		asker = $(\'.\' + list[0])[0].agent;\r\n    		key = list[1];\r\n		}\r\n		else {\r\n		    asker = args[0];\r\n		    key = args[1];\r\n		}\r\n		script.see(\'get\', \'parent\').then(function (parent) {\r\n		    parent.see(\'show\');\r\n		});\r\n		script.see(\'get\', \'editor\').then(function (editor) {\r\n		    if (editor == null) {\r\n		        console.warn(\'Editor missing!\');\r\n				script.see(\'appendTo\', \'body\');\r\n		        return false;\r\n		    }\r\n		    editor.removeAllListeners(\'change\');\r\n		    script.see(\'get\', \'body\').then(function (body) {\r\n		        body.show();\r\n		        var txType = body.find(\'input[name=type]\');\r\n    			var totalVersions = body.find(\'.versions > .total\');\r\n		        var questions = body.find(\'.questions\');\r\n		        var question = $(\'<label>\').prependTo(questions);\r\n		        var name = $(\'<span>\').prependTo(question);\r\n		        question[0].agent = asker;\r\n		        question[0]._key = key;\r\n		        asker.see(\'getNames\').then(function (names) {\r\n		            name.html(names);\r\n		        });\r\n		        var keyInput = $(\'<input>\').appendTo(question);\r\n		        keyInput.val(key);\r\n		        \r\n                var session = ace.createEditSession(\'\', editor.getSession().getMode());\r\n                session.setOption(\'indentedSoftWrap\', false);\r\n        		session.setUseWrapMode(true);\r\n    			session.getUndoManager().markClean();\r\n        		\r\n		        question[0].session = session;\r\n		        var selectQuestion = function (event) {\r\n                    editor.setSession(question[0].session);\r\n		            questions.find(\'.selected\').removeClass(\'selected\');\r\n		            question.addClass(\'selected\');\r\n		            txType.val(question[0]._type);\r\n		            try {\r\n			            totalVersions.html(question[0].representations.length);\r\n		            } catch (e) {}\r\n                };\r\n                question.click(selectQuestion);\r\n                question.trigger(\'click\');\r\n		    \r\n    		    var type = \'\';\r\n    			var info = \'\';\r\n    			var representations;\r\n    			var context = 1;\r\n    			\r\n    			asker.see(\'read\', key).then(function (representations) {\r\n    				if (representations != null && representations.length > 0) {\r\n					    question[0].representations = representations;\r\n    				    var representation = representations[representations.length - context];\r\n    					type = representation.type;\r\n    					info = representation.info;\r\n    \r\n                        question[0]._type = type;\r\n    					txType.val(type);\r\n    					session.setValue(info, -1);\r\n    					session.getUndoManager().markClean();\r\n    					txType.trigger(\'change\');\r\n	                	resolve(false);\r\n    				}\r\n    				else {\r\n    					asker.see(\'read\', \'EmptyAction\').then(function (representations) {\r\n    						if (representations != null && representations.length > 0) {\r\n    						    question[0].representations = representations;\r\n    						    var representation = representations[representations.length - 1];\r\n    							type = representation.type;\r\n    							info = representation.info;\r\n    							info = info.replace(new RegExp(\'agent\', \'g\'), asker.mind.getName());\r\n    							info = info.replace(new RegExp(\'EmptyAction\', \'g\'), key);\r\n                                question[0]._type = type;\r\n    							txType.val(type);\r\n    							session.setValue(info, -1);\r\n    							session.getUndoManager().markClean();\r\n    							txType.trigger(\'change\');\r\n    						}\r\n		                    resolve(false);\r\n    					});\r\n    				}\r\n    			});\r\n		    });\r\n		});\r\n	};\r\n})();','2020-11-18 20:05:14'),(333,'js','new (function live () {\n	this.act = function (target, resolve, reject) {\nconsole.log(\'SCRIPT LIVE\', this.agent.toString());\n		var agent = this.agent;\n		agent.see(\'addName\', \'Script Element\').then(async function () {\n		    let loadAce = new Promise((resolve, reject) => {\n    			$.ajax({\n    				type: \"GET\",\n    				url: baseUrl + \'_js/ace/ace.js\',\n    				dataType: \"script\",\n    				cache: true,\n    				success: function () { \n    					ace.config.set(\"modePath\", baseUrl + \"_js/ace\");\n    					ace.config.set(\"workerPath\", baseUrl + \"_js/ace\");\n    					ace.config.set(\"themePath\", baseUrl + \"_js/ace\");\n    					\n    					resolve(true);\n    				}\n    			});\n		    });\n		    await Promise.all([\n		        loadAce,\n		        agent.see(\'study\', \'askFor\'),\n    			agent.see(\'study\', \'askBind\'),\n    			agent.see(\'study\', \'reloadHtml\'),\n    			agent.see(\'study\', \'getHtml\'),\n    			agent.see(\'study\', \'appendTo\'),\n    			agent.see(\'study\', \'onLoad\')\n    		]);\n			resolve(true);\n		});\n	};\n})();','2020-11-18 20:19:29'),(334,'js','new (function live () {\n	this.act = function (target, resolve, reject) {\nconsole.log(\'SCRIPT LIVE\', this.agent.toString());\n		var agent = this.agent;\n		agent.see(\'addName\', \'Script Element\').then(async function () {\n		    let loadAce = new Promise((resolve, reject) => {\n    			$.ajax({\n    				type: \"GET\",\n    				url: baseUrl + \'_js/ace/ace.js\',\n    				dataType: \"script\",\n    				cache: true,\n    				success: function () { \n    					ace.config.set(\"modePath\", baseUrl + \"_js/ace\");\n    					ace.config.set(\"workerPath\", baseUrl + \"_js/ace\");\n    					ace.config.set(\"themePath\", baseUrl + \"_js/ace\");\n    					\n    					resolve(true);\n    				}\n    			});\n		    });\n		    await Promise.all([\n		        loadAce,\n		        agent.see(\'study\', \'askFor\'),\n    			agent.see(\'study\', \'askBind\'),\n    			agent.see(\'study\', \'reloadHtml\'),\n    			agent.see(\'study\', \'getHtml\'),\n    			agent.see(\'study\', \'html\'),\n    			agent.see(\'study\', \'appendTo\'),\n    			agent.see(\'study\', \'trigger\'),\n    			agent.see(\'study\', \'onLoad\')\n    		]);\n			resolve(true);\n		});\n	};\n})();','2020-11-18 20:21:44'),(335,'js','new (function askFor () {\r\n	this.act = function (args, resolve, reject) {\r\n		var script = this.agent;\r\n		var asker;\r\n		var key;\r\n		if (typeof args == \'string\') {\r\n    		var list = args.split(\'.\');\r\n    		asker = $(\'.\' + list[0])[0].agent;\r\n    		key = list[1];\r\n		}\r\n		else {\r\n		    asker = args[0];\r\n		    key = args[1];\r\n		}\r\n		script.see(\'get\', \'parent\').then(function (parent) {\r\n		    parent.see(\'show\');\r\n		});\r\n		script.see(\'get\', \'editor\').then(function (editor) {\r\n		    if (editor == null) {\r\n		        console.warn(\'Editor missing!\');\r\n				await script.see(\'appendTo\', \'body\');\r\n		        return false;\r\n		    }\r\n		    editor.removeAllListeners(\'change\');\r\n		    script.see(\'get\', \'body\').then(function (body) {\r\n		        body.show();\r\n		        var txType = body.find(\'input[name=type]\');\r\n    			var totalVersions = body.find(\'.versions > .total\');\r\n		        var questions = body.find(\'.questions\');\r\n		        var question = $(\'<label>\').prependTo(questions);\r\n		        var name = $(\'<span>\').prependTo(question);\r\n		        question[0].agent = asker;\r\n		        question[0]._key = key;\r\n		        asker.see(\'getNames\').then(function (names) {\r\n		            name.html(names);\r\n		        });\r\n		        var keyInput = $(\'<input>\').appendTo(question);\r\n		        keyInput.val(key);\r\n		        \r\n                var session = ace.createEditSession(\'\', editor.getSession().getMode());\r\n                session.setOption(\'indentedSoftWrap\', false);\r\n        		session.setUseWrapMode(true);\r\n    			session.getUndoManager().markClean();\r\n        		\r\n		        question[0].session = session;\r\n		        var selectQuestion = function (event) {\r\n                    editor.setSession(question[0].session);\r\n		            questions.find(\'.selected\').removeClass(\'selected\');\r\n		            question.addClass(\'selected\');\r\n		            txType.val(question[0]._type);\r\n		            try {\r\n			            totalVersions.html(question[0].representations.length);\r\n		            } catch (e) {}\r\n                };\r\n                question.click(selectQuestion);\r\n                question.trigger(\'click\');\r\n		    \r\n    		    var type = \'\';\r\n    			var info = \'\';\r\n    			var representations;\r\n    			var context = 1;\r\n    			\r\n    			asker.see(\'read\', key).then(function (representations) {\r\n    				if (representations != null && representations.length > 0) {\r\n					    question[0].representations = representations;\r\n    				    var representation = representations[representations.length - context];\r\n    					type = representation.type;\r\n    					info = representation.info;\r\n    \r\n                        question[0]._type = type;\r\n    					txType.val(type);\r\n    					session.setValue(info, -1);\r\n    					session.getUndoManager().markClean();\r\n    					txType.trigger(\'change\');\r\n	                	resolve(false);\r\n    				}\r\n    				else {\r\n    					asker.see(\'read\', \'EmptyAction\').then(function (representations) {\r\n    						if (representations != null && representations.length > 0) {\r\n    						    question[0].representations = representations;\r\n    						    var representation = representations[representations.length - 1];\r\n    							type = representation.type;\r\n    							info = representation.info;\r\n    							info = info.replace(new RegExp(\'agent\', \'g\'), asker.mind.getName());\r\n    							info = info.replace(new RegExp(\'EmptyAction\', \'g\'), key);\r\n                                question[0]._type = type;\r\n    							txType.val(type);\r\n    							session.setValue(info, -1);\r\n    							session.getUndoManager().markClean();\r\n    							txType.trigger(\'change\');\r\n    						}\r\n		                    resolve(false);\r\n    					});\r\n    				}\r\n    			});\r\n		    });\r\n		});\r\n	};\r\n})();','2020-11-18 22:35:12'),(336,'js','new (function askFor () {\r\n	this.act = function (args, resolve, reject) {\r\n		var script = this.agent;\r\n		var asker;\r\n		var key;\r\n		if (typeof args == \'string\') {\r\n    		var list = args.split(\'.\');\r\n    		asker = $(\'.\' + list[0])[0].agent;\r\n    		key = list[1];\r\n		}\r\n		else {\r\n		    asker = args[0];\r\n		    key = args[1];\r\n		}\r\n		script.see(\'get\', \'parent\').then(function (parent) {\r\n		    parent.see(\'show\');\r\n		});\r\n		script.see(\'get\', \'editor\').then(async function (editor) {\r\n		    if (editor == null) {\r\n		        console.warn(\'Editor missing!\');\r\n				await script.see(\'appendTo\', \'body\');\r\n		        return false;\r\n		    }\r\n		    editor.removeAllListeners(\'change\');\r\n		    script.see(\'get\', \'body\').then(function (body) {\r\n		        body.show();\r\n		        var txType = body.find(\'input[name=type]\');\r\n    			var totalVersions = body.find(\'.versions > .total\');\r\n		        var questions = body.find(\'.questions\');\r\n		        var question = $(\'<label>\').prependTo(questions);\r\n		        var name = $(\'<span>\').prependTo(question);\r\n		        question[0].agent = asker;\r\n		        question[0]._key = key;\r\n		        asker.see(\'getNames\').then(function (names) {\r\n		            name.html(names);\r\n		        });\r\n		        var keyInput = $(\'<input>\').appendTo(question);\r\n		        keyInput.val(key);\r\n		        \r\n                var session = ace.createEditSession(\'\', editor.getSession().getMode());\r\n                session.setOption(\'indentedSoftWrap\', false);\r\n        		session.setUseWrapMode(true);\r\n    			session.getUndoManager().markClean();\r\n        		\r\n		        question[0].session = session;\r\n		        var selectQuestion = function (event) {\r\n                    editor.setSession(question[0].session);\r\n		            questions.find(\'.selected\').removeClass(\'selected\');\r\n		            question.addClass(\'selected\');\r\n		            txType.val(question[0]._type);\r\n		            try {\r\n			            totalVersions.html(question[0].representations.length);\r\n		            } catch (e) {}\r\n                };\r\n                question.click(selectQuestion);\r\n                question.trigger(\'click\');\r\n		    \r\n    		    var type = \'\';\r\n    			var info = \'\';\r\n    			var representations;\r\n    			var context = 1;\r\n    			\r\n    			asker.see(\'read\', key).then(function (representations) {\r\n    				if (representations != null && representations.length > 0) {\r\n					    question[0].representations = representations;\r\n    				    var representation = representations[representations.length - context];\r\n    					type = representation.type;\r\n    					info = representation.info;\r\n    \r\n                        question[0]._type = type;\r\n    					txType.val(type);\r\n    					session.setValue(info, -1);\r\n    					session.getUndoManager().markClean();\r\n    					txType.trigger(\'change\');\r\n	                	resolve(false);\r\n    				}\r\n    				else {\r\n    					asker.see(\'read\', \'EmptyAction\').then(function (representations) {\r\n    						if (representations != null && representations.length > 0) {\r\n    						    question[0].representations = representations;\r\n    						    var representation = representations[representations.length - 1];\r\n    							type = representation.type;\r\n    							info = representation.info;\r\n    							info = info.replace(new RegExp(\'agent\', \'g\'), asker.mind.getName());\r\n    							info = info.replace(new RegExp(\'EmptyAction\', \'g\'), key);\r\n                                question[0]._type = type;\r\n    							txType.val(type);\r\n    							session.setValue(info, -1);\r\n    							session.getUndoManager().markClean();\r\n    							txType.trigger(\'change\');\r\n    						}\r\n		                    resolve(false);\r\n    					});\r\n    				}\r\n    			});\r\n		    });\r\n		});\r\n	};\r\n})();','2020-11-18 22:35:58'),(337,'js','new (function live () {\n	this.act = function (target, resolve, reject) {\nconsole.log(\'SCRIPT LIVE\', this.agent.toString());\n		var agent = this.agent;\n		agent.see(\'addName\', \'Script Element\').then(async function () {\n		    let loadAce = new Promise((resolve, reject) => {\n    			$.ajax({\n    				type: \"GET\",\n    				url: baseUrl + \'_js/ace/ace.js\',\n    				dataType: \"script\",\n    				cache: true,\n    				success: function () { \n    					ace.config.set(\"modePath\", baseUrl + \"_js/ace\");\n    					ace.config.set(\"workerPath\", baseUrl + \"_js/ace\");\n    					ace.config.set(\"themePath\", baseUrl + \"_js/ace\");\n    					\n    					resolve(true);\n    				}\n    			});\n		    });\n		    await Promise.all([\n		        loadAce,\n    			agent.see(\'study\', \'html\'),\n    			agent.see(\'study\', \'reloadHtml\'),\n    			agent.see(\'study\', \'getHtml\'),\n    			agent.see(\'study\', \'appendTo\'),\n    			agent.see(\'study\', \'trigger\'),\n    			agent.see(\'study\', \'onLoad\'),\n		        agent.see(\'study\', \'askFor\'),\n    			agent.see(\'study\', \'askBind\')\n    		]);\n			resolve(true);\n		});\n	};\n})();','2020-11-18 22:38:29'),(338,'html','<!DOCTYPE html>\r\n<html>\r\n<head>\r\n	<title>LEA - Live Environment for Agents</title>\r\n	<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\" />\r\n	<script src=\"<%=baseUrl%>_js/lib/jquery-1.8.3.min.js\"></script>\r\n	<script type=\"module\">\r\n	import {Ceed, AskAgent} from  \'<%=baseUrl%>_js/mindjs_v0.5/ceed.js\';\r\n	import {AjaxBrain} from  \'<%=baseUrl%>_js/mindjs_v0.5/ajaxbrain.js\';\r\n	window.Ceed = Ceed;\r\n	window.AskAgent = AskAgent;\r\n	window.baseUrl = \'<%=baseUrl%>\';\r\n\r\n	var pathname = window.location.pathname.split(\'/\');\r\n    var agentName = pathname.slice(1).join(\'/\') + \' Page\';\r\n	$(function() {\r\n		Ceed().then(ceed => {\r\n			ceed.skills[\'ask\'] = new AskAgent(\'Script\');\r\n			ceed.see(\'setLibrary\', new AjaxBrain(\'/brain/\'));\r\n			\r\n			Ceed(agentName).then(async agent => {\r\n				window.agent = agent;\r\n				agent.see(\'appendTo\', \'body\');\r\n				let ceed = await agent.see(\'getAgent\', \'Ceed\');\r\n				await ceed.see(\'appendTo\', \'body\');\r\n				agent.see(\'edit\');\r\n			});\r\n			\r\n		});\r\n	});\r\n	</script>\r\n	<style>\r\n	#auth {\r\n        position: sticky;\r\n        top: 0;\r\n        text-align: right;\r\n    }\r\n    \r\n    #license {\r\n        position: fixed;\r\n        bottom: 8px;\r\n        right: 8px;\r\n        text-align: right;\r\n        width: 420px;\r\n    }\r\n    body {\r\n        padding-bottom: 75px;\r\n    }\r\n	</style>\r\n</head>\r\n<body>\r\n    <div id=\"auth\">\r\n    </div>\r\n    <div id=\"license\">\r\n        <b><a target=\"_blank\" href=\"https://tiia.com.br/\">LEA - Live Environment for Agents</a></b> by <a href=\"mailto: macaroots@gmail.com\">Renato Lenz Costalima</a><br />\r\n        This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0. If a copy of the MPL was not distributed with this file, You can obtain one at <a rel=\"license\" href=\"https://mozilla.org/MPL/2.0/\">https://mozilla.org/MPL/2.0/</a>.\r\n    </div>\r\n</body>\r\n</html>','2020-11-18 22:43:01'),(339,'html','<!DOCTYPE html>\r\n<html>\r\n<head>\r\n	<title>LEA - Live Environment for Agents</title>\r\n	<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\" />\r\n	<script src=\"<%=baseUrl%>_js/lib/jquery-1.8.3.min.js\"></script>\r\n	<script type=\"module\">\r\n	import {Ceed, AskAgent} from  \'<%=baseUrl%>_js/mindjs_v0.5/ceed.js\';\r\n	import {AjaxBrain} from  \'<%=baseUrl%>_js/mindjs_v0.5/ajaxbrain.js\';\r\n	window.Ceed = Ceed;\r\n	window.AskAgent = AskAgent;\r\n	window.baseUrl = \'<%=baseUrl%>\';\r\n\r\n	var pathname = window.location.pathname.split(\'/\');\r\n    var agentName = pathname.slice(1).join(\'/\') + \' Page\';\r\n	$(function() {\r\n		Ceed().then(ceed => {\r\n			ceed.skills[\'ask\'] = new AskAgent(\'Script\');\r\n			ceed.see(\'setLibrary\', new AjaxBrain(\'/brain/\'));\r\n			\r\n			Ceed(agentName).then(async agent => {\r\n				window.agent = agent;\r\n				agent.see(\'appendTo\', \'body\');\r\n				let script = await agent.see(\'getAgent\', \'Script\');\r\n				await script.see(\'appendTo\', \'body\');\r\n				agent.see(\'edit\');\r\n			});\r\n			\r\n		});\r\n	});\r\n	</script>\r\n	<style>\r\n	#auth {\r\n        position: sticky;\r\n        top: 0;\r\n        text-align: right;\r\n    }\r\n    \r\n    #license {\r\n        position: fixed;\r\n        bottom: 8px;\r\n        right: 8px;\r\n        text-align: right;\r\n        width: 420px;\r\n    }\r\n    body {\r\n        padding-bottom: 75px;\r\n    }\r\n	</style>\r\n</head>\r\n<body>\r\n    <div id=\"auth\">\r\n    </div>\r\n    <div id=\"license\">\r\n        <b><a target=\"_blank\" href=\"https://tiia.com.br/\">LEA - Live Environment for Agents</a></b> by <a href=\"mailto: macaroots@gmail.com\">Renato Lenz Costalima</a><br />\r\n        This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0. If a copy of the MPL was not distributed with this file, You can obtain one at <a rel=\"license\" href=\"https://mozilla.org/MPL/2.0/\">https://mozilla.org/MPL/2.0/</a>.\r\n    </div>\r\n</body>\r\n</html>','2020-11-19 02:28:30'),(340,'html','<!DOCTYPE html>\r\n<html>\r\n<head>\r\n	<title>LEA - Live Environment for Agents</title>\r\n	<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\" />\r\n	<script src=\"<%=baseUrl%>_js/lib/jquery-1.8.3.min.js\"></script>\r\n	<script type=\"module\">\r\n	import {Ceed, AskAgent} from  \'<%=baseUrl%>_js/mindjs_v0.5/ceed.js\';\r\n	import {AjaxBrain} from  \'<%=baseUrl%>_js/mindjs_v0.5/ajaxbrain.js\';\r\n	window.Ceed = Ceed;\r\n	window.AskAgent = AskAgent;\r\n	window.baseUrl = \'<%=baseUrl%>\';\r\n\r\n	var pathname = window.location.pathname.split(\'/\');\r\n    var agentName = pathname.slice(1).join(\'/\') + \' Page\';\r\n	$(function() {\r\n		Ceed().then(ceed => {\r\n			ceed.skills[\'ask\'] = new AskAgent(\'CE\');\r\n			ceed.see(\'setLibrary\', new AjaxBrain(\'/brain/\'));\r\n			\r\n			Ceed(agentName).then(async agent => {\r\n				window.agent = agent;\r\n				agent.see(\'appendTo\', \'body\');\r\n				let ce = await agent.see(\'getAgent\', \'CE\');\r\n				await ce.see(\'appendTo\', \'body\');\r\n				agent.see(\'edit\');\r\n			});\r\n			\r\n		});\r\n	});\r\n	</script>\r\n	<style>\r\n	#auth {\r\n        position: sticky;\r\n        top: 0;\r\n        text-align: right;\r\n    }\r\n    \r\n    #license {\r\n        position: fixed;\r\n        bottom: 8px;\r\n        right: 8px;\r\n        text-align: right;\r\n        width: 420px;\r\n    }\r\n    body {\r\n        padding-bottom: 75px;\r\n    }\r\n	</style>\r\n</head>\r\n<body>\r\n    <div id=\"auth\">\r\n    </div>\r\n    <div id=\"license\">\r\n        <b><a target=\"_blank\" href=\"https://tiia.com.br/\">LEA - Live Environment for Agents</a></b> by <a href=\"mailto: macaroots@gmail.com\">Renato Lenz Costalima</a><br />\r\n        This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0. If a copy of the MPL was not distributed with this file, You can obtain one at <a rel=\"license\" href=\"https://mozilla.org/MPL/2.0/\">https://mozilla.org/MPL/2.0/</a>.\r\n    </div>\r\n</body>\r\n</html>','2020-11-19 18:19:22'),(341,'string','CE','2020-11-19 18:22:58'),(342,'js','new (function live() {\n	this.act = function (args, resolve, reject) {\n		let agent = this.agent;\n		agent.see(\'addName\', \'CE Element\').then(function () {\n		    agent.see(\'Element.live\', args).then(resolve);\n		}).catch(reject);\n	};\n})();','2020-11-19 18:22:58'),(343,'js','new (function askBind () {\n	this.act = function (args, resolve, reject) {\n	    var agent = this.agent;\n	    var target = args[2];\n	    agent.see(\'askFor\', args).then(function () {\n	        agent.see(\'get\', \'editor\').then(function (editor) {\n	            var session = editor.getSession();\n	            session.removeAllListeners(\'change\');\n    	            if (target.html() != \'\') {\n    	                editor.setValue(target.html(), -1);\n    	                session.getUndoManager().markClean();\n    	            }\n	            session.on(\'change\', function() {\n	                target.html(editor.getValue());\n                    });\n	        });\n		resolve();\n	    });\n	};\n})();','2020-11-19 18:43:52'),(344,'html','<div class=\"answers\"></div>\r\n<form onSubmit=\"getAgent(this).see(\'submit\'); return false;\">\r\n    <select name=\"agent\"></select>\r\n    <input name=\"action\" placeholder=\"action\" type=\"list\" id=\"actions\" />\r\n    <datalist id=\"actions\"></datalist>\r\n    <input name=\"target\" placeholder=\"args\" />\r\n    <input type=\"submit\" value=\"see\" accessKey=\"x\" />\r\n    <input type=\"button\" value=\"ask\" accessKey=\"a\" onClick=\"getAgent(this).see(\'askClick\');\" />\r\n    <input type=\"button\" value=\"hide\" accessKey=\"\'\" onClick=\"getAgent(this).see(\'toggle\');\" />\r\n</form>','2020-11-19 18:45:57'),(345,'js','new (function live() {\n	this.act = function (args, resolve, reject) {\n		let agent = this.agent;\n		agent.see(\'addName\', \'CE Element\').then(function () {\n    		Ceed().then(ceed => {\n    		    ceed.see(\'addListener\', [\'newAgent\', agent]);\n    		})\n		    agent.see(\'Element.live\', args).then(resolve);\n		}).catch(reject);\n	};\n})();','2020-11-19 18:50:56'),(346,'js','new (function appendTo () {\n	this.act = function (args, resolve, reject) {\n		var agent = this.agent;\n		\n		var tag;\n		var target;\n		if (typeof args == \'string\') {\n			args = args.split(\',\');\n		}\n		target = args[0];\n		tag = args[1];\n		if (target == null) {\n			target = $(\'.selected\');\n			if (target.length == 0) {\n				target = \'body\';\n			}\n		}\n		\n		agent.see(\'getBody\', tag).then(function (body) {\n			if (body != null) {\n				body.detach();\n		    	body.appendTo(target);\n			}\n			\n			if (window[\'getAgent\'] == null) {\n				window[\'getAgent\'] = function (element) {\n					var _agent = $(element).closest(\'.Naive\')[0].agent;\n					window[\'_agent\'] = _agent;\n					return _agent;\n				};\n			}\n			\n		});\n	};\n})();','2020-11-19 19:56:54'),(347,'string','getBody','2020-11-19 19:57:01'),(348,'js','new (function getBody() {\n	this.act = function (tag, resolve, reject) {\n		if (!tag) {\n			tag = \'<div>\';\n		}\n		let body = $(tag);\n		// bind agent-div\n		agent.see(\'set\', [\'body\', body]);\n		body[0].agent = agent;\n		agent.see(\'getNames\').then(function (names) {\n			body.addClass(names);\n		});\n		\n		agent.see(\'reloadHtml\').then(function () {\n			resolve(body);\n			agent.see(\'trigger\', \'onLoad\');\n		});\n		agent.see(\'reloadCss\');\n	};\n})();','2020-11-19 19:57:01'),(349,'html','<!DOCTYPE html>\r\n<html>\r\n<head>\r\n	<title>LEA - Live Environment for Agents</title>\r\n	<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\" />\r\n	<script src=\"<%=baseUrl%>_js/lib/jquery-1.8.3.min.js\"></script>\r\n	<script type=\"module\">\r\n	import {Ceed, AskAgent} from  \'<%=baseUrl%>_js/mindjs_v0.5/ceed.js\';\r\n	import {AjaxBrain} from  \'<%=baseUrl%>_js/mindjs_v0.5/ajaxbrain.js\';\r\n	window.Ceed = Ceed;\r\n	window.AskAgent = AskAgent;\r\n	window.baseUrl = \'<%=baseUrl%>\';\r\n\r\n	var pathname = window.location.pathname.split(\'/\');\r\n    var agentName = pathname.slice(1).join(\'/\') + \' Page\';\r\n	$(function() {\r\n		Ceed().then(ceed => {\r\n			ceed.skills[\'ask\'] = new AskAgent(\'CE\');\r\n			ceed.see(\'setLibrary\', new AjaxBrain(\'/brain/\'));\r\n			\r\n			Ceed(agentName).then(async agent => {\r\n				window.agent = agent;\r\n				agent.see(\'appendTo\', \'body\');\r\n				let ce = await agent.see(\'getAgent\', \'CE\');\r\n				console.log(\'agent ready\', await ce.see(\'getFullName\'));\r\n				await ce.see(\'appendTo\', \'body\');\r\n				agent.see(\'edit\');\r\n			});\r\n			\r\n		});\r\n	});\r\n	</script>\r\n	<style>\r\n	#auth {\r\n        position: sticky;\r\n        top: 0;\r\n        text-align: right;\r\n    }\r\n    \r\n    #license {\r\n        position: fixed;\r\n        bottom: 8px;\r\n        right: 8px;\r\n        text-align: right;\r\n        width: 420px;\r\n    }\r\n    body {\r\n        padding-bottom: 75px;\r\n    }\r\n	</style>\r\n</head>\r\n<body>\r\n    <div id=\"auth\">\r\n    </div>\r\n    <div id=\"license\">\r\n        <b><a target=\"_blank\" href=\"https://tiia.com.br/\">LEA - Live Environment for Agents</a></b> by <a href=\"mailto: macaroots@gmail.com\">Renato Lenz Costalima</a><br />\r\n        This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0. If a copy of the MPL was not distributed with this file, You can obtain one at <a rel=\"license\" href=\"https://mozilla.org/MPL/2.0/\">https://mozilla.org/MPL/2.0/</a>.\r\n    </div>\r\n</body>\r\n</html>','2020-11-19 20:05:43'),(350,'js','new (function appendTo () {\n	this.act = function (args, resolve, reject) {\n		var agent = this.agent;\n		\n		var tag;\n		var target;\n		if (typeof args == \'string\') {\n			args = args.split(\',\');\n		}\n		target = args[0];\n		tag = args[1];\n		if (target == null) {\n			target = $(\'.selected\');\n			if (target.length == 0) {\n				target = \'body\';\n			}\n		}\n		\n		agent.see(\'getBody\', tag).then(function (body) {\n			if (body != null) {\n				body.detach().appendTo(target);\n			}\n			\n			if (window[\'getAgent\'] == null) {\n				window[\'getAgent\'] = function (element) {\n					var _agent = $(element).closest(\'.Naive\')[0].agent;\n					window[\'_agent\'] = _agent;\n					return _agent;\n				};\n			}\n			\n		});\n	};\n})();','2020-11-19 20:56:55'),(351,'js','new (function getBody() {\n	this.act = async function (tag, resolve, reject) {\n	    let agent = this.agent;\n	    let body = await agent.see(\'get\', \'body\');\n	    if (!body) {\n    		if (!tag) {\n    			tag = \'<div>\';\n    		}\n    		body = $(tag);\n    		// bind agent-div\n    		agent.see(\'set\', [\'body\', body]);\n    		body[0].agent = agent;\n    		agent.see(\'getNames\').then(function (names) {\n    			body.addClass(names);\n    		});\n    		\n    		agent.see(\'reloadHtml\').then(function () {\n    			resolve(body);\n    			agent.see(\'trigger\', \'onLoad\');\n    		});\n    		agent.see(\'reloadCss\');\n	    }\n	    else {\n	        resolve(body);\n	    }\n	};\n})();','2020-11-19 21:03:47'),(352,'string','onNewAgent','2020-11-19 21:26:16'),(353,'js','new (function onNewAgent() {\n	this.act = function (args, resolve, reject) {\n		var ce = this.agent;\n		ce.see(\'getBody\').then(async function (body) {\n			var select = body.find(\'select\');\n			select.empty();\n			var agents = (await Ceed()).agents;\n			var names = [];\n			for (var i in agents) {\n			    let agent = agents[i][0];\n			    agent.see(\'getNames\').then(name => {\n			        if (!names.includes(name)) {\n			            names.push(name);\n        			    let option = $(\'<option>\');\n        				option[0].agent = agent;\n    					option.text(name);\n        				select.prepend(option);\n			        }\n				});\n			}\n			\n		});\n		resolve();\n	};\n})();','2020-11-19 21:26:16'),(354,'js','new (function onNewAgent() {\n	this.act = function (args, resolve, reject) {\n		var ce = this.agent;\n		ce.see(\'getBody\').then(async function (body) {\n			var select = body.find(\'select\');\n			select.empty();\n			var agents = (await Ceed()).agents;\n			var names = [];\n			for (var i in agents) {\n			    try {\n    			    let agent = agents[i][0];\n    			    agent.see(\'getNames\').then(name => {\n    			        if (!names.includes(name)) {\n    			            names.push(name);\n            			    let option = $(\'<option>\');\n            				option[0].agent = agent;\n        					option.text(name);\n            				select.prepend(option);\n    			        }\n    				});\n			    } catch {}\n			}\n			\n		});\n		resolve();\n	};\n})();','2020-11-19 21:28:02'),(355,'js','new (function onNewAgent() {\n	this.act = function (args, resolve, reject) {\n		var ce = this.agent;\n		ce.see(\'getBody\').then(async function (body) {\n			var select = body.find(\'select\');\n			select.empty();\n			var agents = (await Ceed()).agents;\n			var names = [];\n			\n			for (var i in agents) {\n			    try {\n    			    let agent = agents[i][0];\nconsole.log(\'AGENT\', agent);\n    			    agent.see(\'getNames\').then(name => {\n    			        if (!names.includes(name)) {\n    			            names.push(name);\n            			    let option = $(\'<option>\');\n            				option[0].agent = agent;\n        					option.text(name);\n            				select.prepend(option);\n    			        }\n    				});\n			    } catch {}\n			}\n			\n		});\n		resolve();\n	};\n})();','2020-11-19 21:29:02'),(356,'js','new (function onNewAgent() {\n	this.act = function (args, resolve, reject) {\n		var ce = this.agent;\n		ce.see(\'getBody\').then(async function (body) {\n			var select = body.find(\'select\');\n			select.empty();\n			var agents = (await Ceed()).agents;\n			var names = [];\n			\n			for (var i in agents) {\n			    try {\n    			    let agent = await agents[i][0];\n    			    agent.see(\'getNames\').then(name => {\n    			        if (!names.includes(name)) {\n    			            names.push(name);\n            			    let option = $(\'<option>\');\n            				option[0].agent = agent;\n        					option.text(name);\n            				select.prepend(option);\n    			        }\n    				});\n			    } catch {}\n			}\n			\n		});\n		resolve();\n	};\n})();','2020-11-19 21:29:45'),(357,'string','seeClick','2020-11-19 21:43:26'),(358,'js','new (function seeClick() {\n	this.act = function (args, resolve, reject) {\n		var agent = this.agent;\n		agent.see(\'getBody\').then(function (body) {\n    		var form = body.children(\'form.ce\');\n    		var action = form.children(\'input[name=action]\').val();\n    		var target = form.children(\'input[name=target]\').val();\n    		var selectedAgent = form.find(\'select option:selected\')[0].agent;\n			selectedAgent.see(action, target).then(function (answer) {\n				body.find(\'.answers\').append(\'<div class=\"\' + action + \'\">\' + answer + \'</div>\');\n			});\n		});\n		resolve();\n	};\n})();','2020-11-19 21:43:26'),(359,'html','<div class=\"answers\"></div>\n<form class=\"ce\" onsubmit=\"getAgent(this).see(\'seeClick\'); return false;\">\n    <select name=\"agent\"><option>Script Element Naive</option><option>CE Element D/CE Naive</option><option>D Page Element Naive</option></select>\n    <input name=\"action\" placeholder=\"action\" type=\"list\" id=\"actions\">\n    <datalist id=\"actions\"></datalist>\n    <input name=\"target\" placeholder=\"args\">\n    <input type=\"submit\" value=\"See\" accesskey=\"x\">\n    <input type=\"button\" value=\"ask\" accesskey=\"a\" onclick=\"getAgent(this).see(\'askClick\');\">\n    <input type=\"button\" value=\"hide\" accesskey=\"\'\" onclick=\"getAgent(this).see(\'toggle\');\">\n</form>','2020-11-19 21:44:01'),(360,'js','new (function onNewAgent() {\n	this.act = function (args, resolve, reject) {\n		var ce = this.agent;\n		ce.see(\'getBody\').then(async function (body) {\n			var select = body.find(\'select\');\n			select.empty();\n			var agents = (await Ceed()).agents;\n			var names = [];\n			\n			for (var i in agents) {\n			    try {\n    			    let agent = await agents[i][0];\n    			    agent.see(\'getNames\').then(name => {\n    			        if (!names.includes(name)) {\n    			            names.push(name);\n            			    let option = $(\'<option>\');\nconsole.log(\'ONNEWAGENT\', agent);\n            				option[0].agent = agent;\n        					option.text(name);\n            				select.prepend(option);\n    			        }\n    				});\n			    } catch {}\n			}\n			\n		});\n		resolve();\n	};\n})();','2020-11-19 21:47:26'),(361,'string','askClick','2020-11-19 21:53:51'),(362,'js','new (function askClick() {\n	this.act = function (args, resolve, reject) {\n		var agent = this.agent;\n		agent.see(\'getBody\').then(function (body) {\n    		var form = body.children(\'form.ce\');\n    		var action = form.children(\'input[name=action]\').val();\n    		var selectedAgent = form.find(\'select option:selected\')[0].agent;\n			selectedAgent.see(\'ask\', action);\n		});\n		resolve();\n	};\n})();','2020-11-19 21:53:51'),(363,'string','show','2020-11-19 21:55:39'),(364,'js','new (function show() {\n	this.act = function (args, resolve, reject) {\n		var agent = this.agent;\n		agent.see(\'getBody\').then(function (body) {\n		    body.show();\n		    resolve();\n		});\n	};\n})();','2020-11-19 21:55:39'),(365,'js','new (function askFor () {\r\n	this.act = function (args, resolve, reject) {\r\n		var script = this.agent;\r\n		var asker;\r\n		var key;\r\n		if (typeof args == \'string\') {\r\n    		var list = args.split(\'.\');\r\n    		asker = $(\'.\' + list[0])[0].agent;\r\n    		key = list[1];\r\n		}\r\n		else {\r\n		    asker = args[0];\r\n		    key = args[1];\r\n		}\r\n	    script.see(\'getBody\').then(function (body) {\r\n	        script.see(\'get\', \'parent\').then(function (parent) {\r\n    		    parent.see(\'show\');\r\n    		});\r\n            body.show();\r\n		        \r\n    		script.see(\'get\', \'editor\').then(async function (editor) {\r\n    		    if (editor == null) {\r\n    		        console.warn(\'Editor missing!\');\r\n    				// await script.see(\'appendTo\', \'body\');\r\n    		        return false;\r\n    		    }\r\n    		    editor.removeAllListeners(\'change\');\r\n    		    \r\n		        var txType = body.find(\'input[name=type]\');\r\n    			var totalVersions = body.find(\'.versions > .total\');\r\n		        var questions = body.find(\'.questions\');\r\n		        var question = $(\'<label>\').prependTo(questions);\r\n		        var name = $(\'<span>\').prependTo(question);\r\n		        question[0].agent = asker;\r\n		        question[0]._key = key;\r\n		        asker.see(\'getNames\').then(function (names) {\r\n		            name.html(names);\r\n		        });\r\n		        var keyInput = $(\'<input>\').appendTo(question);\r\n		        keyInput.val(key);\r\n		        \r\n                var session = ace.createEditSession(\'\', editor.getSession().getMode());\r\n                session.setOption(\'indentedSoftWrap\', false);\r\n        		session.setUseWrapMode(true);\r\n    			session.getUndoManager().markClean();\r\n        		\r\n		        question[0].session = session;\r\n		        var selectQuestion = function (event) {\r\n                    editor.setSession(question[0].session);\r\n		            questions.find(\'.selected\').removeClass(\'selected\');\r\n		            question.addClass(\'selected\');\r\n		            txType.val(question[0]._type);\r\n		            try {\r\n			            totalVersions.html(question[0].representations.length);\r\n		            } catch (e) {}\r\n                };\r\n                question.click(selectQuestion);\r\n                question.trigger(\'click\');\r\n		    \r\n    		    var type = \'\';\r\n    			var info = \'\';\r\n    			var representations;\r\n    			var context = 1;\r\n    			\r\n    			asker.see(\'read\', key).then(function (representations) {\r\n    				if (representations != null && representations.length > 0) {\r\n					    question[0].representations = representations;\r\n    				    var representation = representations[representations.length - context];\r\n    					type = representation.type;\r\n    					info = representation.info;\r\n    \r\n                        question[0]._type = type;\r\n    					txType.val(type);\r\n    					session.setValue(info, -1);\r\n    					session.getUndoManager().markClean();\r\n    					txType.trigger(\'change\');\r\n	                	resolve(false);\r\n    				}\r\n    				else {\r\n    					asker.see(\'read\', \'EmptyAction\').then(function (representations) {\r\n    						if (representations != null && representations.length > 0) {\r\n    						    question[0].representations = representations;\r\n    						    var representation = representations[representations.length - 1];\r\n    							type = representation.type;\r\n    							info = representation.info;\r\n    							info = info.replace(new RegExp(\'agent\', \'g\'), asker.mind.getName());\r\n    							info = info.replace(new RegExp(\'EmptyAction\', \'g\'), key);\r\n                                question[0]._type = type;\r\n    							txType.val(type);\r\n    							session.setValue(info, -1);\r\n    							session.getUndoManager().markClean();\r\n    							txType.trigger(\'change\');\r\n    						}\r\n		                    resolve(false);\r\n    					});\r\n    				}\r\n    			});\r\n		    });\r\n		});\r\n	};\r\n})();','2020-11-19 22:01:59'),(366,'js','new (function onNewAgent() {\n	this.act = function (args, resolve, reject) {\n		var ce = this.agent;\n		ce.see(\'getBody\').then(async function (body) {\n			var select = body.find(\'select\');\n			select.empty();\n			var agents = (await Ceed()).agents;\n			var names = [];\n			\n			for (var i in agents) {\n			    try {\n    			    let agent = await agents[i][0];\n    			    agent.see(\'getNames\').then(new (function (agent) { return name => {\n    			        if (!names.includes(name)) {\n    			            names.push(name);\n            			    let option = $(\'<option>\');\nconsole.log(\'ONNEWAGENT\', agent);\n            				option[0].agent = agent;\n        					option.text(name);\n            				select.prepend(option);\n    			        }\n    				}})(agent));\n			    } catch {}\n			}\n			\n		});\n		resolve();\n	};\n})();','2020-11-19 22:11:13'),(367,'js','new (function appendTo () {\n	this.act = function (args, resolve, reject) {\n		var agent = this.agent;\n		\n		var tag;\n		var target;\n		if (typeof args == \'string\') {\n			args = args.split(\',\');\n		}\n		target = args[0];\n		tag = args[1];\n		if (target == null) {\n			target = $(\'.selected\');\n			if (target.length == 0) {\n				target = \'body\';\n			}\n		}\n		\n		agent.see(\'getBody\', tag).then(function (body) {\n			if (body != null) {\n				body.detach().appendTo(target);\n			}\n			\n			if (window[\'getAgent\'] == null) {\n				window[\'getAgent\'] = function (element) {\n					var _agent = $(element).closest(\'.Naive\')[0].agent;\n					window[\'_agent\'] = _agent;\n					return _agent;\n				};\n			}\n			\n			resolve();\n		});\n	};\n})();','2020-11-19 22:17:21'),(368,'string','newBody','2020-11-19 22:30:52'),(369,'js','new (function newBody() {\n	this.act = function (tag, resolve, reject) {\n	    let agent = this.agent;\n		if (!tag) {\n			tag = \'<div>\';\n		}\n		body = $(tag);\n		// bind agent-div\n		agent.see(\'set\', [\'body\', body]);\n		body[0].agent = agent;\n		agent.see(\'getNames\').then(function (names) {\n			body.addClass(names);\n		});\n		\n		agent.see(\'reloadHtml\').then(function () {\n			resolve(body);\n			agent.see(\'trigger\', \'onLoad\');\n		});\n		agent.see(\'reloadCss\');\n	};\n})();','2020-11-19 22:30:52'),(370,'js','new (function getBody() {\n	this.act = async function (tag, resolve, reject) {\n	    let agent = this.agent;\n	    let body = await agent.see(\'get\', \'body\');\n	    if (!body) {\n	        agent.see(\'newBody\', tag).then(resolve);\n	    }\n	    else {\n	        resolve(body);\n	    }\n	};\n})();','2020-11-19 22:31:17'),(371,'js','new (function newBody() {\n	this.act = function (tag, resolve, reject) {\n	    let agent = this.agent;\n		if (!tag) {\n			tag = \'<div>\';\n		}\n		let body = $(tag);\n		// bind agent-div\n		agent.see(\'set\', [\'body\', body]);\n		body[0].agent = agent;\n		agent.see(\'getNames\').then(function (names) {\n			body.addClass(names);\n		});\n		\n		agent.see(\'reloadHtml\').then(function () {\n			resolve(body);\n			agent.see(\'trigger\', \'onLoad\');\n		});\n		agent.see(\'reloadCss\');\n	};\n})();','2020-11-19 22:32:03'),(372,'js','new (function newBody() {\n	this.act = function (args, resolve, reject) {\n		let agent = this.agent;\n		agent.see(\'Element.newBody\', args).then(body => {\n		    agent.see(\'getAgent\', \'Script\').then(script => {\n		        script.see(\'appendTo\', body);\n		        resolve(body);\n		    });\n		})\n	};\n})();','2020-11-19 22:48:41'),(373,'js','new (function askFor () {\r\n	this.act = function (args, resolve, reject) {\r\n		var script = this.agent;\r\n		var asker;\r\n		var key;\r\n		if (typeof args == \'string\') {\r\n    		var list = args.split(\'.\');\r\n    		asker = $(\'.\' + list[0])[0].agent;\r\n    		key = list[1];\r\n		}\r\n		else {\r\n		    asker = args[0];\r\n		    key = args[1];\r\n		}\r\n	    script.see(\'getBody\').then(function (body) {\r\n	        script.see(\'get\', \'parent\').then(function (parent) {\r\n    		    parent.see(\'show\');\r\n    		});\r\n            body.show();\r\n		        \r\n    		script.see(\'get\', \'editor\').then(async function (editor) {\r\n    		    if (editor == null) {\r\n    		        console.warn(\'Editor missing!\');\r\n    				// await script.see(\'appendTo\', \'body\');\r\n    		        return false;\r\n    		    }\r\n    		    editor.removeAllListeners(\'change\');\r\n    		    \r\n		        var txType = body.find(\'input[name=type]\');\r\n    			var totalVersions = body.find(\'.versions > .total\');\r\n		        var questions = body.find(\'.questions\');\r\n		        var question = $(\'<label>\').prependTo(questions);\r\n		        var name = $(\'<span>\').prependTo(question);\r\n		        question[0].agent = asker;\r\n		        question[0]._key = key;\r\n		        asker.see(\'getNames\').then(function (names) {\r\n		            name.html(names);\r\n		        });\r\n		        var keyInput = $(\'<input>\').appendTo(question);\r\n		        keyInput.val(key);\r\n		        \r\n                var session = ace.createEditSession(\'\', editor.getSession().getMode());\r\n                session.setOption(\'indentedSoftWrap\', false);\r\n        		session.setUseWrapMode(true);\r\n    			session.getUndoManager().markClean();\r\n        		\r\n		        question[0].session = session;\r\n		        var selectQuestion = function (event) {\r\n                    editor.setSession(question[0].session);\r\n		            questions.find(\'.selected\').removeClass(\'selected\');\r\n		            question.addClass(\'selected\');\r\n		            txType.val(question[0]._type);\r\n		            try {\r\n			            totalVersions.html(question[0].representations.length);\r\n		            } catch (e) {}\r\n                };\r\n                question.click(selectQuestion);\r\n                question.trigger(\'click\');\r\n		    \r\n    		    var type = \'\';\r\n    			var info = \'\';\r\n    			var representations;\r\n    			var context = 1;\r\n    			\r\n    			asker.see(\'read\', key).then(function (representations) {\r\n    				if (representations != null && representations.length > 0) {\r\n					    question[0].representations = representations;\r\n    				    var representation = representations[representations.length - context];\r\n    					type = representation.type;\r\n    					info = representation.info;\r\n    \r\n                        question[0]._type = type;\r\n    					txType.val(type);\r\n    					session.setValue(info, -1);\r\n    					session.getUndoManager().markClean();\r\n    					txType.trigger(\'change\');\r\n	                	resolve(false);\r\n    				}\r\n    				else {\r\n    					asker.see(\'read\', \'EmptyAction\').then(function (representations) {\r\n    						if (representations != null && representations.length > 0) {\r\n    						    question[0].representations = representations;\r\n    						    var representation = representations[representations.length - 1];\r\n    							type = representation.type;\r\n    							info = representation.info;\r\n    							info = info.replace(new RegExp(\'agent\', \'g\'), asker.mind.getName());\r\n    							info = info.replace(new RegExp(\'EmptyAction\', \'g\'), key);\r\n                                question[0]._type = type;\r\n    							txType.val(type);\r\n    							session.setValue(info, -1);\r\n    							session.getUndoManager().markClean();\r\n    							txType.trigger(\'change\');\r\n    						}\r\n		                    resolve(false);\r\n    					});\r\n    				}\r\n    			});\r\n                resolve(false);\r\n		    });\r\n		});\r\n	};\r\n})();','2020-11-19 23:43:49'),(374,'html','<!DOCTYPE html>\r\n<html>\r\n<head>\r\n	<title>LEA - Live Environment for Agents</title>\r\n	<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\" />\r\n	<script src=\"<%=baseUrl%>_js/lib/jquery-3.5.1.min.js\"></script>\r\n	<script type=\"module\">\r\n	import {Ceed, AskAgent} from  \'<%=baseUrl%>_js/mindjs_v0.5/ceed.js\';\r\n	import {AjaxBrain} from  \'<%=baseUrl%>_js/mindjs_v0.5/ajaxbrain.js\';\r\n	window.Ceed = Ceed;\r\n	window.AskAgent = AskAgent;\r\n	window.baseUrl = \'<%=baseUrl%>\';\r\n\r\n	var pathname = window.location.pathname.split(\'/\');\r\n    var agentName = pathname.slice(1).join(\'/\') + \' Page\';\r\n	$(function() {\r\n		Ceed().then(ceed => {\r\n			ceed.skills[\'ask\'] = new AskAgent(\'CE\');\r\n			ceed.see(\'setLibrary\', new AjaxBrain(\'/brain/\'));\r\n			\r\n			Ceed(agentName).then(async agent => {\r\n				window.agent = agent;\r\n				agent.see(\'appendTo\', \'body\');\r\n				let ce = await agent.see(\'getAgent\', \'CE\');\r\n				console.log(\'agent ready\', await ce.see(\'getFullName\'));\r\n				await ce.see(\'appendTo\', \'body\');\r\n				agent.see(\'edit\');\r\n			});\r\n			\r\n		});\r\n	});\r\n	</script>\r\n	<style>\r\n	#auth {\r\n        position: sticky;\r\n        top: 0;\r\n        text-align: right;\r\n    }\r\n    \r\n    #license {\r\n        position: fixed;\r\n        bottom: 8px;\r\n        right: 8px;\r\n        text-align: right;\r\n        width: 420px;\r\n    }\r\n    body {\r\n        padding-bottom: 75px;\r\n    }\r\n	</style>\r\n</head>\r\n<body>\r\n    <div id=\"auth\">\r\n    </div>\r\n    <div id=\"license\">\r\n        <b><a target=\"_blank\" href=\"https://tiia.com.br/\">LEA - Live Environment for Agents</a></b> by <a href=\"mailto: macaroots@gmail.com\">Renato Lenz Costalima</a><br />\r\n        This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0. If a copy of the MPL was not distributed with this file, You can obtain one at <a rel=\"license\" href=\"https://mozilla.org/MPL/2.0/\">https://mozilla.org/MPL/2.0/</a>.\r\n    </div>\r\n</body>\r\n</html>','2020-11-20 13:37:27'),(375,'js','new (function askFor() {\n	this.act = function (args, resolve, reject) {\n		this.agent.see(\'getAgent\', \'Script\').then(script => {\n		    script.see(\'askFor\', args).then(resolve);\n		}).catch(reject);\n	};\n})();','2020-11-20 22:07:43'),(377,'js','new (function live() {\n	this.act = function (args, resolve, reject) {\n		let agent = this.agent;\n		agent.see(\'addName\', \'CE Element\').then(function () {\n		    agent.see(\'study\', \'askFor\');\n    		Ceed().then(ceed => {\n    		    ceed.see(\'addListener\', [\'newAgent\', agent]);\n    		})\n		    agent.see(\'Element.live\', args).then(resolve);\n		}).catch(reject);\n	};\n})();','2020-11-20 22:20:33'),(378,'string','typeChanged','2020-11-20 22:23:14'),(379,'js','new (function typeChanged() {\n	this.act = function (args, resolve, reject) {\n	    var agent = this.agent;\n	    agent.see(\'get\', \'editor\').then(function (editor) {\n            var mode = type.value;\n            var session = editor.getSession();\n            var question = $(\'.questions .selected\')[0];\n            question._type = mode;\n            if (mode == \'js\') {\n                mode = \'javascript\';\n            }\n            session.setMode(\'ace/mode/\' + mode);\n	        \n	    });\n		resolve();\n	};\n})();','2020-11-20 22:23:14'),(380,'html','<!DOCTYPE html>\r\n<html>\r\n<head>\r\n	<title>LEA - Live Environment for Agents</title>\r\n	<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\" />\r\n	<meta name=\"google-signin-client_id\" content=\"1058560848585-k19ome8pfq3ddmr8mut359257em0vg52.apps.googleusercontent.com\">\r\n	<script src=\"https://apis.google.com/js/platform.js\" async defer></script>\r\n	<script src=\"<%=baseUrl%>_js/lib/jquery-3.5.1.min.js\"></script>\r\n	<script type=\"module\">\r\n	import {Ceed, AskAgent} from  \'<%=baseUrl%>_js/mindjs_v0.5/ceed.js\';\r\n	import {AjaxBrain} from  \'<%=baseUrl%>_js/mindjs_v0.5/ajaxbrain.js\';\r\n	window.Ceed = Ceed;\r\n	window.AskAgent = AskAgent;\r\n	window.baseUrl = \'<%=baseUrl%>\';\r\n\r\n	var pathname = window.location.pathname.split(\'/\');\r\n    var agentName = pathname.slice(1).join(\'/\') + \' Page\';\r\n	$(function() {\r\n		Ceed().then(ceed => {\r\n			ceed.skills[\'ask\'] = new AskAgent(\'CE\');\r\n			ceed.see(\'setLibrary\', new AjaxBrain(\'/brain/\'));\r\n			\r\n			Ceed(agentName).then(async agent => {\r\n				window.agent = agent;\r\n				agent.see(\'appendTo\', \'body\');\r\n				let ce = await agent.see(\'getAgent\', \'CE\');\r\n				console.log(\'agent ready\', await ce.see(\'getFullName\'));\r\n				await ce.see(\'appendTo\', \'body\');\r\n				agent.see(\'edit\');\r\n			});\r\n			\r\n		});\r\n	});\r\n	</script>\r\n	<style>\r\n	#auth {\r\n        position: sticky;\r\n        top: 0;\r\n        text-align: right;\r\n    }\r\n    \r\n    #license {\r\n        position: fixed;\r\n        bottom: 8px;\r\n        right: 8px;\r\n        text-align: right;\r\n        width: 420px;\r\n    }\r\n    body {\r\n        padding-bottom: 75px;\r\n    }\r\n	</style>\r\n</head>\r\n<body>\r\n    <div id=\"auth\">\r\n    </div>\r\n    <div id=\"license\">\r\n        <b><a target=\"_blank\" href=\"https://tiia.com.br/\">LEA - Live Environment for Agents</a></b> by <a href=\"mailto: macaroots@gmail.com\">Renato Lenz Costalima</a><br />\r\n        This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0. If a copy of the MPL was not distributed with this file, You can obtain one at <a rel=\"license\" href=\"https://mozilla.org/MPL/2.0/\">https://mozilla.org/MPL/2.0/</a>.\r\n    </div>\r\n</body>\r\n</html>','2020-11-20 22:38:46'),(381,'js','new (function typeChanged() {\n	this.act = function (type, resolve, reject) {\n	    var agent = this.agent;\n	    agent.see(\'get\', \'editor\').then(function (editor) {\n            var mode = type.value;\n            var session = editor.getSession();\n            var question = $(\'.questions .selected\')[0];\n            question._type = mode;\n            if (mode == \'js\') {\n                mode = \'javascript\';\n            }\n            session.setMode(\'ace/mode/\' + mode);\n	        \n	    });\n		resolve();\n	};\n})();','2020-11-20 22:41:45'),(382,'string','Auth/CE/Script','2020-11-20 22:48:44'),(383,'string','executeClick','2020-11-20 22:48:44'),(384,'js','new (function executeClick() {\n	this.act = function (args, resolve, reject) {\n		var script = this.agent;\n		script.see(\'setClick\').then(function () {\n		    script.see(\'getBody\').then(function (body) {\n		        var question = body.find(\'.selected\');\n	            var asker = question[0].agent;\n		        var key = question.find(\'input\').val();\n		        asker.see(key);\n    		});\n		});\n		resolve();\n	};\n})();','2020-11-20 22:48:44'),(386,'html','<!DOCTYPE html>\r\n<html>\r\n<head>\r\n	<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n	<title>LEA Auth - Who is it?</title>\r\n	<meta name=\"google-signin-client_id\" content=\"1058560848585-k19ome8pfq3ddmr8mut359257em0vg52.apps.googleusercontent.com\">\r\n	<script src=\"https://apis.google.com/js/platform.js\" async defer></script>\r\n    <script src=\"<%=baseUrl%>_js/lib/jquery-1.8.3.min.js\"></script>\r\n	<script type=\"module\">\r\n	import {Ceed} from  \'<%=baseUrl%>_js/mindjs_v0.5/ceed.js\';\r\n	import {AjaxBrain} from  \'<%=baseUrl%>_js/mindjs_v0.5/ajaxbrain.js\';\r\n	window.Ceed = Ceed;\r\n\r\n	var pathname = window.location.pathname.split(\'/\');\r\n    var agentName = pathname.slice(1).join(\'/\');\r\n	window.agent = Ceed(agentName);\r\n	window.agent.then(agent => {\r\n		agent.see(\'setLibrary\', new AjaxBrain(\'<%=baseUrl%>brain/\'));\r\n	});\r\n	</script>\r\n    <script>\r\n	window.clicked = false;\r\n	function onSignIn(googleUser) {\r\n        agent.then(a => a.see(\'signIn\', googleUser));\r\n    }\r\n    window.onclick = function () {\r\n        window.clicked = true;\r\n    };\r\n    \r\n    function signOut() {\r\n        agent.then(a => a.see(\'signOut\'));\r\n    }\r\n	</script>\r\n</head>\r\n<body>\r\n<form action=\"<%=baseUrl%>auth/login\" method=\"post\">\r\n    Who are you?<br/>\r\n    <input name=\"username\" id=\"a\" />\r\n    <input name=\"password\" id=\"b\" type=\"password\" />\r\n    <p id=\"license\">\r\n        LEA - Live Environment for Agents by <a href=\"mailto: macaroots@gmail.com\">Renato Lenz Costalima</a><br>\r\n        This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0. If a copy of the MPL was not distributed with this file, You can obtain one at <a rel=\"license\" href=\"https://mozilla.org/MPL/2.0/\">https://mozilla.org/MPL/2.0/</a>.\r\n    </p>\r\n    \r\n    <p>\r\n        <label><input type=\"checkbox\" name=\"agree\" value=\"true\" /> I agree with <a href=\"/LEA/ce/termos\" target=\"_blank\">Terms & Conditions</a></label>\r\n    </p>\r\n    <input value=\"Submit\" type=\"submit\" /><br/><br/>or<br/>\r\n    \r\n    <div>\r\n        <div class=\"g-signin2\" data-onsuccess=\"onSignIn\"></div>\r\n        \r\n        <a class=\"g-signout2\" href=\"#\" onclick=\"signOut();\">Sign out</a>\r\n    </div>\r\n</form>\r\n</body>\r\n</html>','2020-11-21 03:11:06'),(387,'string','LEAClient','2020-11-23 02:01:05'),(388,'js','new (function live() {\r\n	this.act = function (data, callback) {\r\n		console.log(\'LEAClient LIVE\', this.agent.toString());\r\n		this.agent.see(\'study\', \'question\', callback);\r\n	}\r\n})();','2020-11-23 02:01:05'),(389,'string','connect','2020-11-23 02:07:38'),(390,'js','new (function connect() {\n	this.act = function (args, resolve, reject) {\n		var socket = io();\n		var agent = this.agent;\n		agent.socket = socket;\n		socket.on(\'question\', function (data) {\n		  agent.see(\'question\', data);\n		});\n		resolve();\n	};\n})();','2020-11-23 02:07:38'),(391,'js','new (function connect() {\n	this.act = async function (args, resolve, reject) {\n	    let io = (await import(\'./_js/socket.io/socket.io.js\').default);\n		var socket = io();\n		var agent = this.agent;\n		agent.socket = socket;\n		socket.on(\'question\', function (data) {\n		  agent.see(\'question\', data);\n		});\n		resolve();\n	};\n})();','2020-11-23 02:10:17'),(392,'string','setClick','2020-11-23 02:13:15'),(393,'js','new (function setClick() {\n	this.act = function (args, resolve, reject) {\n		var script = this.agent;\n	    script.see(\'getBody\').then(function (body) {\n		    script.see(\'get\', \'editor\').then(function (editor) {\n		        var question = body.find(\'.selected\');\n		        var asker = question[0].agent;\n		        var key = question.find(\'input\').val();\n		        var type = body.find(\'input[name=type]\').val();\n				var info = editor.getValue();\n		        var answer = new Symbol(0, type, info);\n				asker.see(\'understand\', [key, answer]).then(function (learned) {\n				    console.log(\'Learned:\', key, learned);\n					if (learned) {\n						question.addClass(\'learned\');\n						question.removeClass(\'changed\');\n    					editor.getSession().getUndoManager().markClean();\n					}\n					resolve(learned);\n				});\n		        \n		    });\n		});\n	};\n})();','2020-11-23 02:13:15'),(394,'js','new (function connect() {\n	this.act = async function (args, resolve, reject) {\n	    let io = (await import(\'./../socket.io/socket.io.js\').default);\n		var socket = io();\n		var agent = this.agent;\n		agent.socket = socket;\n		socket.on(\'question\', function (data) {\n		  agent.see(\'question\', data);\n		});\n		resolve();\n	};\n})();','2020-11-23 02:15:21'),(395,'js','new (function connect() {\n	this.act = async function (args, resolve, reject) {\n	    let io = (await import(\'./../../socket.io/socket.io.js\').default);\n		var socket = io();\n		var agent = this.agent;\n		agent.socket = socket;\n		socket.on(\'question\', function (data) {\n		  agent.see(\'question\', data);\n		});\n		resolve();\n	};\n})();','2020-11-23 02:16:25'),(396,'string','Math','2020-12-01 23:12:47'),(397,'string','sum','2020-12-01 23:12:47'),(398,'js','new (function sum() {\n	this.act = function (args, resolve, reject) {\n		\n		resolve(args[0] + args[1]);\n	};\n})();','2020-12-01 23:12:47'),(399,'css','#auth {\n    position: fixed;\n    top: 0px;\n    right: 8px;\n}\nbody > * {\n    width: 52%;\n}\n.CE {\n    border: 1px solid;\n    position: fixed;\n    width: 47%;\n    top: 20px;\n    right: 0px;\n    bottom: 4px;\n    display: flex;\n    flex-direction: column;\n}\n.CE > form {\n    text-align: right;\n}\n.CE > * {\n    order: 2;\n}\n.Tools {\n    order: 1;\n    margin: 8px;\n}\n.answers {\n    display: none;\n}\n\n.questions {\n    display: flex;\n    overflow: auto;\n}\n\n.questions label {\n    border-width: 1px;\n    border-style: solid;\n    padding: 8px;\n    margin: 2px;\n    background: white;\n}\n.Script input[name=type], #version {\n    width: 105px;\n}\n\n.selected {\n    border-style: solid;\n    border-color: blue;\n    border-width: 2px !important;\n}\n\n.learned {\n    border-color: green !important;\n}\n\n.changed {\n    border-color: red !important;\n}\n','2020-12-17 23:16:24'),(400,'string','Sebrae/CE','2020-12-17 23:17:36'),(401,'html','<form onsubmit=\"getAgent(this).see(\'submit\', this); return false;\">\n    <div class=\"questions\"></div>\n    <div class=\"info\" style=\"width: 600px; height: 400px; float: left;\"></div>\n    <input name=\"type\" placeholder=\"type\" onchange=\"getAgent(this).see(\'typeChanged\', this);\">\n    <div class=\"versions\">\n        <label for=\"version\">version: </label>\n        <input id=\"version\" onchange=\"getAgent(this).see(\'changeVersion\', 0);\" value=\"0\">\n        / <label class=\"total\"></label>\n        <button accessKey=\"p\" onclick=\"getAgent(this).see(\'changeVersion\', -1);\" type=\"button\">previous</button>\n        <button accessKey=\"n\" onclick=\"getAgent(this).see(\'changeVersion\', 1);\" type=\"button\">next</button>\n    </div>\n    \n    <br>\n    <button accessKey=\"\" onclick=\"getAgent(this).see(\'executeClick\');\" type=\"button\">test</button>\n    <button accessKey=\"s\" type=\"submit\">Save</button>\n    <button accessKey=\"w\" onclick=\"getAgent(this).see(\'close\');\" type=\"button\">close</button>\n    <button accessKey=\"t\" onclick=\"getAgent(this).see(\'setClick\');\" type=\"button\">set</button>\n    <button accessKey=\"r\" onclick=\"getAgent(this).see(\'readClick\');\" type=\"button\">read</button>\n    <button accessKey=\"d\" onclick=\"getAgent(this).see(\'download\');\" type=\"button\">download</button>\n</form>','2020-12-17 23:17:36'),(402,'html','<div class=\"answers\"></div>\n<form onSubmit=\"getAgent(this).see(\'submit\'); return false;\">\n    <select name=\"agent\"></select>\n    <input name=\"action\" placeholder=\"action\" type=\"list\" id=\"actions\" />\n    <datalist id=\"actions\"></datalist>\n    <input name=\"target\" placeholder=\"args\" />\n    <input type=\"submit\" value=\"run\" accessKey=\"x\" />\n    <input type=\"button\" value=\"view code\" accessKey=\"a\" onClick=\"getAgent(this).see(\'askClick\');\" />\n    <input type=\"button\" value=\"hide\" accessKey=\"\'\" onClick=\"getAgent(this).see(\'toggle\');\" />\n</form>','2020-12-17 23:20:33'),(403,'string','postDispatch','2020-12-28 17:55:55'),(404,'js','new (function PostDispatch() {\n	this.act = function (args, resolve, reject) {\n		let req = args[0];\n		let res = args[1];\n		// your code here\n		resolve(true);\n	};\n})();','2020-12-28 17:55:55'),(405,'js','new (function changeVersion () {\n	this.act = function (args, resolve, reject) {\n		var agent = this.agent;\n		agent.see(\'get\', \'body\', function (body) {\n		    var input = body.find(\'#version\');\n		    var version = parseInt(input.val()) + args;\n		    input.val(version);\n		    var question = body.find(\'.questions > .selected\')[0];\n	        var txType = body.find(\'input[name=type]\');\n	        var session = question.session;\n		    \n		    try {\n    		    var representation = question.representations[version];\n    			var type = representation.type;\n    			info = representation.info;\n    \n                question._type = type;\n    			txType.val(type);\n    			session.setValue(info, -1);\n    			session.getUndoManager().markClean();\n    			txType.trigger(\'change\');\n    			\n    		    resolve(representation);\n		    } catch {}\n		});\n	};\n})();','2020-12-29 18:19:28'),(406,'string','changeVersion','2020-12-29 18:19:28'),(407,'string','close','2020-12-29 18:25:26'),(408,'js','new (function close() {\n	this.act = function (args, resolve, reject) {\n		this.agent.see(\'get\', \'body\', function (body) {\n		    var questions = body.find(\'.questions\');\n		    var question = questions.find(\'.selected\');\n		    question.remove();\n		    if (questions.html() == \'\') {\n		        body.hide();\n		    }\n		    else {\n		        questions.find(\'label:first\').click();\n		    }\n		});\n		resolve();\n	};\n})();','2020-12-29 18:25:26'),(409,'html','<!DOCTYPE html>\r\n<html>\r\n<head>\r\n	<title>LEA - Live Environment for Agents</title>\r\n	<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\" />\r\n	<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\r\n	<script type=\"module\">\r\n	import {Ceed, AskAgent} from  \'<%=baseUrl%>_js/mindjs_v0.5/ceed.js\';\r\n	import {AjaxBrain} from  \'<%=baseUrl%>_js/mindjs_v0.5/ajaxbrain.js\';\r\n	window.Ceed = Ceed;\r\n	window.AskAgent = AskAgent;\r\n	window.baseUrl = \'<%=baseUrl%>\';\r\n\r\n	var pathname = window.location.pathname.split(\'/\');\r\n    var agentName = pathname.slice(1).join(\'/\') + \' Page\';\r\n	$(function() {\r\n		Ceed().then(ceed => {\r\n			ceed.skills[\'ask\'] = new AskAgent(\'CE\');\r\n			ceed.see(\'setLibrary\', new AjaxBrain(\'/brain/\'));\r\n			\r\n			Ceed(agentName).then(async agent => {\r\n				window.agent = agent;\r\n				agent.see(\'appendTo\', \'body\');\r\n				let ce = await agent.see(\'getAgent\', \'CE\');\r\n				console.log(\'agent ready\', await ce.see(\'getFullName\'));\r\n				await ce.see(\'appendTo\', \'body\');\r\n				agent.see(\'edit\');\r\n			});\r\n			\r\n		});\r\n	});\r\n	</script>\r\n	<style>\r\n	#auth {\r\n        position: sticky;\r\n        top: 0;\r\n        text-align: right;\r\n    }\r\n    \r\n    #license {\r\n        position: fixed;\r\n        bottom: 8px;\r\n        right: 8px;\r\n        text-align: right;\r\n        width: 420px;\r\n    }\r\n    body {\r\n        padding-bottom: 75px;\r\n    }\r\n	</style>\r\n</head>\r\n<body>\r\n    <div id=\"auth\">\r\n    </div>\r\n    <div id=\"license\">\r\n        <b><a target=\"_blank\" href=\"https://tiia.com.br/\">LEA - Live Environment for Agents</a></b> by <a href=\"mailto: macaroots@gmail.com\">Renato Lenz Costalima</a><br />\r\n        This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0. If a copy of the MPL was not distributed with this file, You can obtain one at <a rel=\"license\" href=\"https://mozilla.org/MPL/2.0/\">https://mozilla.org/MPL/2.0/</a>.\r\n    </div>\r\n</body>\r\n</html>','2021-01-04 20:51:55'),(412,'js','new (function live () {\n	this.act = function (target, resolve, reject) {\nconsole.log(\'SCRIPT LIVE\', this.agent.toString());\n		var agent = this.agent;\n		agent.see(\'addName\', \'Script Element\').then(async function () {\n		    let loadAce = new Promise((resolve, reject) => {\n    			$.ajax({\n    				type: \"GET\",\n    				url: \'https://pagecdn.io/lib/ace/1.4.12/ace.min.js\',\n    				dataType: \"script\",\n    				cache: true,\n    				success: function () { \n    					ace.config.set(\'modePath\', \'https://pagecdn.io/lib/ace/1.4.12/\');\n    					ace.config.set(\'workerPath\', \'https://pagecdn.io/lib/ace/1.4.12/\');\n    					ace.config.set(\'themePath\', \'https://pagecdn.io/lib/ace/1.4.12/\');\n    					\n    					resolve(true);\n    				}\n    			});\n		    });\n		    await Promise.all([\n		        loadAce,\n    			agent.see(\'study\', \'html\'),\n    			agent.see(\'study\', \'reloadHtml\'),\n    			agent.see(\'study\', \'getHtml\'),\n    			agent.see(\'study\', \'appendTo\'),\n    			agent.see(\'study\', \'trigger\'),\n    			agent.see(\'study\', \'onLoad\'),\n		        agent.see(\'study\', \'askFor\'),\n    			agent.see(\'study\', \'askBind\')\n    		]);\n			resolve(true);\n		});\n	};\n})();','2021-01-04 20:52:33'),(414,'string','RenatoController','2021-01-08 21:46:12'),(415,'js','new (function live() {\r\n	this.act = function (data, callback) {\r\n		console.log(\'LEAClient LIVE\', this.agent.toString());\r\n		this.agent.see(\'study\', \'onQuestion\', callback);\r\n	}\r\n})();','2021-01-19 21:55:56'),(416,'js','new (function onQuestion() {\r\n	this.act = async function (data, callback) {\r\n		console.log(data);\r\n		let socket = this.agent.socket;\r\n		let name = data[0];\r\n		let key = data[1];\r\n		let script = await Ceed(\'Script\');\r\n		if (!this.agent.agents) {\r\n			this.agent.agents = {};\r\n		}\r\n		let agent = this.agent.agents[name][0];\r\n		if (!agent) {\r\n			agent = new SocketAgent(name, socket);\r\n			this.agent.agents[name] = [agent];\r\n		}\r\n		script.see(\'askFor\', [agent, key]);\r\n		callback(true); \r\n	};\r\n})();','2021-01-19 21:55:56'),(417,'string','onQuestion','2021-01-19 21:55:56'),(418,'html','<!DOCTYPE html>\r\n<html>\r\n<head>\r\n	<title>LEA - Live Environment for Agents</title>\r\n	<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\" />\r\n	<script src=\"<%=baseUrl%>_js/lib/jquery-3.5.1.min.js\"></script>\r\n	<script src=\"/socket.io/socket.io.js\"></script>\r\n	<script type=\"module\">\r\n	import {Ceed, AskAgent} from  \'<%=baseUrl%>_js/ceed/ceed.js\';\r\n	import {SocketAgent} from  \'./_js/agents/lea_client.js\';\r\n	import {AjaxBrain} from  \'<%=baseUrl%>_js/ceed/ajaxbrain.js\';\r\n	window.Ceed = Ceed;\r\n	window.SocketAgent = SocketAgent;\r\n	window.AskAgent = AskAgent;\r\n	window.baseUrl = \'<%=baseUrl%>\';\r\n\r\n	var pathname = window.location.pathname.split(\'/\');\r\n    var agentName = pathname.slice(1).join(\'/\') + \' Page\';\r\n	$(function() {\r\n		Ceed().then(ceed => {\r\n			ceed.skills[\'ask\'] = new AskAgent(\'CE\');\r\n			ceed.see(\'setLibrary\', new AjaxBrain(\'/brain/\'));\r\n			\r\n			Ceed(agentName).then(async agent => {\r\n				window.agent = agent;\r\n				agent.see(\'appendTo\', \'body\');\r\n				\r\n				agent.see(\'getAgent\', \'CE\').then(async ce => {\r\n        		    await ce.see(\'appendTo\', \'body\');\r\n            		agent.see(\'edit\');\r\n        		});\r\n        		\r\n        		Ceed(\'LEAClient\').then(lea => {\r\n        			window.lea = lea;\r\n        			lea.see(\'connect\');\r\n        		});\r\n			});\r\n			\r\n		});\r\n	});\r\n	</script>\r\n	<style>\r\n	#auth {\r\n        position: sticky;\r\n        top: 0;\r\n        text-align: right;\r\n    }\r\n    \r\n    #license {\r\n        position: fixed;\r\n        bottom: 8px;\r\n        right: 8px;\r\n        text-align: right;\r\n        width: 420px;\r\n    }\r\n    body {\r\n        padding-bottom: 75px;\r\n    }\r\n	</style>\r\n</head>\r\n<body>\r\n    <div id=\"auth\">\r\n    </div>\r\n    <div id=\"license\">\r\n        <b><a target=\"_blank\" href=\"https://tiia.com.br/\">LEA - Live Environment for Agents</a></b> by <a href=\"mailto: macaroots@gmail.com\">Renato Lenz Costalima</a><br />\r\n        This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0. If a copy of the MPL was not distributed with this file, You can obtain one at <a rel=\"license\" href=\"https://mozilla.org/MPL/2.0/\">https://mozilla.org/MPL/2.0/</a>.\r\n    </div>\r\n</body>\r\n</html>','2021-01-19 23:13:40'),(419,'js','new (function connect() {\n	this.act = async function (args, resolve, reject) {\n		var socket = io();\n		var agent = this.agent;\n		agent.socket = socket;\n		socket.on(\'onQuestion\', function (data) {\n		  agent.see(\'onQuestion\', data);\n		});\n		resolve();\n	};\n})();','2021-01-19 23:20:26'),(420,'string','getSocketAgent','2021-01-19 23:39:34'),(421,'js','new (function getSocketAgent() {\n	this.act = function (name, resolve, reject) {\n		const agent = this.agent;\n		const socket = agent.socket;\n		if (!agent.agents) {\n			agent.agents = {};\n		}\n		let agents = agent.agents;\n		let newAgent;\n		try {\n			newAgent = agents[name][0];\n		} catch (e) {\n			newAgent = new Promise((res, rej) => {\n			    res(new SocketAgent(name, socket));\n			});\n			agents[name] = [newAgent];\n		}\n		newAgent.then(resolve);\n	};\n})();','2021-01-19 23:39:34'),(422,'js','new (function getSocketAgent() {\n	this.act = function (name, resolve, reject) {\n		const agent = this.agent;\n		const socket = agent.socket;\n		if (!agent.agents) {\n			agent.agents = {};\n		}\n		let agents = agent.agents;\n		let newAgent;\n		try {\n			newAgent = agents[name][0];\n		} catch (e) {\n			newAgent = new Promise((res, rej) => {\n			    let socketAgent = new SocketAgent(name, socket);\n    			agent.see(\'notify\', [\'newSocketAgent\', socketAgent]);\n			    res(socketAgent);\n			});\n			agents[name] = [newAgent];\n		}\n		newAgent.then(resolve);\n	};\n})();','2021-01-19 23:45:13'),(423,'js','new (function onQuestion() {\r\n	this.act = async function (data, callback) {\r\n		console.log(data);\r\n		let name = data[0];\r\n		let key = data[1];\r\n		let lea = this.agent;\r\n		let script = await Ceed(\'Script\');\r\n		\r\n		let agent = await lea.see(\'getSocketAgent\', name);\r\n		script.see(\'askFor\', [agent, key]);\r\n		callback(true); \r\n	};\r\n})();','2021-01-19 23:51:29'),(424,'js','new (function connect() {\n	this.act = async function (args, resolve, reject) {\n		var socket = io();\n		var agent = this.agent;\n		agent.socket = socket;\n		socket.on(\'question\', function (data) {\n		  agent.see(\'onQuestion\', data);\n		});\n		resolve();\n	};\n})();','2021-01-19 23:55:59'),(427,'string','Ceed','2021-01-20 01:20:20'),(428,'js','new (function getSocketAgent() {\n	this.act = function (name, resolve, reject) {\n		const agent = this.agent;\n		const socket = agent.socket;\n		if (!agent.agents) {\n			agent.agents = {};\n		}\n		let agents = agent.agents;\n		let newAgent;\n		try {\n			newAgent = agents[name][0];\n		} catch (e) {\n			newAgent = new Promise((res, rej) => {\n			    let socketAgent = new SocketAgent(name, socket);\n    			agent.see(\'notify\', [\'newAgent\', socketAgent]);\n			    res(socketAgent);\n			});\n			agents[name] = [newAgent];\n		}\n		newAgent.then(resolve);\n	};\n})();','2021-01-20 01:20:20'),(434,'html','<!DOCTYPE html>\r\n<html>\r\n<head>\r\n	<title>LEA - Live Environment for Agents</title>\r\n	<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\" />\r\n	<script src=\"<%=baseUrl%>_js/lib/jquery-3.5.1.min.js\"></script>\r\n	<script src=\"/socket.io/socket.io.js\"></script>\r\n	<script type=\"module\">\r\n	import {Ceed, AskAgent} from  \'<%=baseUrl%>_js/ceed/ceed.js\';\r\n	import {SocketAgent} from  \'./_js/agents/lea_client.js\';\r\n	import {AjaxBrain} from  \'<%=baseUrl%>_js/ceed/ajaxbrain.js\';\r\n	window.Ceed = Ceed;\r\n	window.SocketAgent = SocketAgent;\r\n	window.AskAgent = AskAgent;\r\n	window.baseUrl = \'<%=baseUrl%>\';\r\n\r\n	var pathname = window.location.pathname.split(\'/\');\r\n    let controllerName = pathname.slice(1).join(\'/\');\r\n    let agentName = controllerName = \' Page\';\r\n	$(function() {\r\n		Ceed().then(ceed => {\r\n			ceed.skills[\'ask\'] = new AskAgent(\'CE\');\r\n			ceed.see(\'setLibrary\', new AjaxBrain(\'/brain/\'));\r\n			\r\n			Ceed(agentName).then(async agent => {\r\n				window.agent = agent;\r\n				agent.see(\'appendTo\', \'body\');\r\n				\r\n				agent.see(\'getAgent\', \'CE\').then(async ce => {\r\n        		    await ce.see(\'appendTo\', \'body\');\r\n            		agent.see(\'edit\');\r\n            		\r\n            		Ceed(\'LEAClient\').then(lea => {\r\n            			window.lea = lea;\r\n            			lea.see(\'connect\');\r\n            			ceed.see(\'getSocketAgent\', controllerName + \'Controller\');\r\n            		});\r\n        		});\r\n			});\r\n			\r\n		});\r\n	});\r\n	</script>\r\n	<style>\r\n	#auth {\r\n        position: sticky;\r\n        top: 0;\r\n        text-align: right;\r\n    }\r\n    \r\n    #license {\r\n        position: fixed;\r\n        bottom: 8px;\r\n        right: 8px;\r\n        text-align: right;\r\n        width: 420px;\r\n    }\r\n    body {\r\n        padding-bottom: 75px;\r\n    }\r\n	</style>\r\n</head>\r\n<body>\r\n    <div id=\"auth\">\r\n    </div>\r\n    <div id=\"license\">\r\n        <b><a target=\"_blank\" href=\"https://tiia.com.br/\">LEA - Live Environment for Agents</a></b> by <a href=\"mailto: macaroots@gmail.com\">Renato Lenz Costalima</a><br />\r\n        This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0. If a copy of the MPL was not distributed with this file, You can obtain one at <a rel=\"license\" href=\"https://mozilla.org/MPL/2.0/\">https://mozilla.org/MPL/2.0/</a>.\r\n    </div>\r\n</body>\r\n</html>','2021-01-20 01:45:32'),(437,'js','new (function askFor () {\r\n	this.act = function (args, resolve, reject) {\r\n		var script = this.agent;\r\n		var asker;\r\n		var key;\r\n		if (typeof args == \'string\') {\r\n    		var list = args.split(\'.\');\r\n    		asker = $(\'.\' + list[0])[0].agent;\r\n    		key = list[1];\r\n		}\r\n		else {\r\n		    asker = args[0];\r\n		    key = args[1];\r\n		}\r\n	    script.see(\'getBody\').then(function (body) {\r\n	        script.see(\'get\', \'parent\').then(function (parent) {\r\n    		    parent.see(\'show\');\r\n    		});\r\n            body.show();\r\n		        \r\n    		script.see(\'get\', \'editor\').then(async function (editor) {\r\n    		    if (editor == null) {\r\n    		        console.warn(\'Editor missing!\');\r\n    				// await script.see(\'appendTo\', \'body\');\r\n    		        return false;\r\n    		    }\r\n    		    editor.removeAllListeners(\'change\');\r\n    		    \r\n		        var txType = body.find(\'input[name=type]\');\r\n    			var totalVersions = body.find(\'.versions > .total\');\r\n		        var questions = body.find(\'.questions\');\r\n		        var question = $(\'<label>\').prependTo(questions);\r\n		        var txName = $(\'<span>\').prependTo(question);\r\n		        question[0].agent = asker;\r\n		        question[0]._key = key;\r\n		        let name = asker.see(\'getNames\');\r\n		        name.then(function (names) {\r\n		            txName.html(names);\r\n		        });\r\n		        var keyInput = $(\'<input>\').appendTo(question);\r\n		        keyInput.val(key);\r\n		        \r\n                var session = ace.createEditSession(\'\', editor.getSession().getMode());\r\n                session.setOption(\'indentedSoftWrap\', false);\r\n        		session.setUseWrapMode(true);\r\n    			session.getUndoManager().markClean();\r\n        		\r\n		        question[0].session = session;\r\n		        var selectQuestion = function (event) {\r\n                    editor.setSession(question[0].session);\r\n		            questions.find(\'.selected\').removeClass(\'selected\');\r\n		            question.addClass(\'selected\');\r\n		            txType.val(question[0]._type);\r\n		            try {\r\n			            totalVersions.html(question[0].representations.length);\r\n		            } catch (e) {}\r\n                };\r\n                question.click(selectQuestion);\r\n                question.trigger(\'click\');\r\n		    \r\n    		    var type = \'\';\r\n    			var info = \'\';\r\n    			var representations;\r\n    			var context = 1;\r\n    			\r\n    			asker.see(\'read\', key).then(function (representations) {\r\n    				if (representations != null && representations.length > 0) {\r\n					    question[0].representations = representations;\r\n    				    var representation = representations[representations.length - context];\r\n    					type = representation.type;\r\n    					info = representation.info;\r\n    \r\n                        question[0]._type = type;\r\n    					txType.val(type);\r\n    					session.setValue(info, -1);\r\n    					session.getUndoManager().markClean();\r\n    					txType.trigger(\'change\');\r\n	                	resolve(false);\r\n    				}\r\n    				else {\r\n    					asker.see(\'read\', \'EmptyAction\').then(async function (representations) {\r\n    						if (representations != null && representations.length > 0) {\r\n    						    question[0].representations = representations;\r\n    						    var representation = representations[representations.length - 1];\r\n    							type = representation.type;\r\n    							info = representation.info;\r\n    							info = info.replace(new RegExp(\'agent\', \'g\'), await name);\r\n    							info = info.replace(new RegExp(\'EmptyAction\', \'g\'), key);\r\n                                question[0]._type = type;\r\n    							txType.val(type);\r\n    							session.setValue(info, -1);\r\n    							session.getUndoManager().markClean();\r\n    							txType.trigger(\'change\');\r\n    						}\r\n		                    resolve(false);\r\n    					});\r\n    				}\r\n    			});\r\n                resolve(false);\r\n		    });\r\n		});\r\n	};\r\n})();','2021-01-20 01:57:28'),(440,'html','<div class=\"answers\"></div>\n<form class=\"ce\" onsubmit=\"getAgent(this).see(\'seeClick\'); return false;\">\n    <select name=\"agent\"></select>\n    <input name=\"action\" placeholder=\"action\" type=\"list\" id=\"actions\" />\n    <datalist id=\"actions\"></datalist>\n    <input name=\"target\" placeholder=\"args\" />\n    <button accessKey=\"x\">run</button>\n    <button type=\"button\" accessKey=\"a\" onClick=\"getAgent(this).see(\'askClick\');\">view code</button>\n    <button type=\"button\" accessKey=\"\'\" onClick=\"getAgent(this).see(\'toggle\');\">hide</button>\n</form>','2021-01-20 13:02:40'),(441,'css','#auth {\n    position: fixed;\n    top: 0px;\n    right: 8px;\n}\nbody > * {\n    width: 52%;\n}\n[accesskey]::after {\n    content: \" [\" attr(accesskey) \"]\";\n}\n.CE {\n    border: 1px solid;\n    position: fixed;\n    width: 47%;\n    top: 20px;\n    right: 0px;\n    bottom: 4px;\n    display: flex;\n    flex-direction: column;\n}\n.CE > form {\n    text-align: right;\n}\n.CE > * {\n    order: 2;\n}\n.Tools {\n    order: 1;\n    margin: 8px;\n}\n.answers {\n    display: none;\n}\n\n.questions {\n    display: flex;\n    overflow: auto;\n}\n\n.questions label {\n    border-width: 1px;\n    border-style: solid;\n    padding: 8px;\n    margin: 2px;\n    background: white;\n}\n.Script input[name=type], #version {\n    width: 105px;\n}\n\n.selected {\n    border-style: solid;\n    border-color: blue;\n    border-width: 2px !important;\n}\n\n.learned {\n    border-color: green !important;\n}\n\n.changed {\n    border-color: red !important;\n}\n','2021-01-20 13:03:32'),(442,'html','<!-- LEA - Live Environment for Agents\n   - by Renato Lenz Costalima\n   - This Source Code Form is subject to the terms of the Mozilla Public\n   - License, v. 2.0. If a copy of the MPL was not distributed with this\n   - file, You can obtain one at https://mozilla.org/MPL/2.0/. -->\n<header>\n    <h1>Título da página</h1>\n    <nav>\n        <ul>\n            <li>\n                <a href=\"#\">Início</a>\n                <ul>\n                    <li><a href=\"#secao1\">Edição ao vivo</a></li>\n                    <li><a href=\"#secao2\">Edição assistida por agentes</a></li>\n                    <li><a href=\"#secaoForm\">Formulário</a></li>\n                </ul>\n            </li>\n            <li><a href=\"#\">Sobre</a></li>\n            <li><a href=\"#\">Contato</a></li>\n        </ul>\n    </nav>\n</header>\n<main>\n    <section id=\"secao1\">\n        <h1>Título da seção</h1>\n        \n        <p>Primeiro parágrafo começa aqui.</p>\n        \n        <p>Usa o <b>editor ao lado</b> para editar HTML (\"getHtml\" - estrutura e conteúdo), Javascript (\"onLoad\" - interação com usuário) e CSS (\"getCss\" - visual).</p>\n        \n        <p>Desculpa, isto é um protótipo. Se as letras não estiverem aparecendo, alterna entre as <input value=\"caixas de texto\" size=\"10\"> do editor.</p>\n        \n    </section>\n    <section id=\"secao2\">\n        <h1>Edição ao vivo/assistida por agentes</h1>\n        <p>Experimenta também a <b>edição assistida por agentes</b>, direcionando eventos do DOM para um agente, por exemplo:</p>\n        <pre>&lt;button onclick=\"getAgent(this).see(\'novaAcao\', \'args\');\"&gt;Clique para definir uma ação&lt;/button&gt;</pre>\n        <button onclick=\"getAgent(this).see(\'novaAcao\', \'args\');\">Clique para definir uma ação</button>\n    </section>\n    <section id=\"secaoForm\">\n        <h1>Exemplo de formulário</h1>\n        <form id=\"formExemplo\" onsubmit=\"getAgent(this).see(\'onSubmit\', this); return false;\">\n            <p>Formulários permitem receber do usuário vários tipos de dados.</p>\n            <label>\n                <span>\n                   Texto\n                </span>\n                <input name=\"texto\" type=\"text\">\n            </label>\n            <label>\n                <span>\n                   Número\n                </span>\n                <input name=\"numero\" type=\"number\">\n            </label>\n            <label>\n                <span>\n                   Data\n                </span>\n                <input name=\"data\" type=\"date\">\n            </label>\n            <label>\n                <span>\n                   Parágrafo\n                </span>\n                <textarea name=\"paragrafo\"></textarea>\n            </label>\n            <input type=\"submit\">\n        </form>\n    </section>\n</main>\n<aside>\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean ut arcu dolor.\n</aside>\n<footer>\n    Rodapé da página\n</footer>','2021-01-20 13:08:38'),(444,'js','new (function changeVersion () {\n	this.act = function (args, resolve, reject) {\n		let agent = this.agent;\n		agent.see(\'get\', \'body\', function (body) {\n		    let input = body.find(\'#version\');\n		    let version = parseInt(input.val()) + args;\n		    input.val(version);\n		    let question = body.find(\'.questions > .selected\')[0];\n	        let txType = body.find(\'input[name=type]\');\n	        let session = question.session;\n		    \n		    try {\n    		    let representation = question.representations[version];\n    			let type = representation.type;\n    			let info = representation.info;\n    \n                question._type = type;\n    			txType.val(type);\n    			session.setValue(info, -1);\n    			session.getUndoManager().markClean();\n    			txType.trigger(\'change\');\n    			\n    		    resolve(representation);\n		    } catch {}\n		});\n	};\n})();','2021-01-20 13:25:26'),(445,'html','<!DOCTYPE html>\r\n<html>\r\n<head>\r\n	<title>LEA - Live Environment for Agents</title>\r\n	<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\" />\r\n	<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\r\n	<script src=\"/socket.io/socket.io.js\"></script>\r\n	<script type=\"module\">\r\n	import {Ceed, AskAgent} from  \'<%=baseUrl%>_js/ceed/ceed.js\';\r\n	import {SocketAgent} from  \'<%=baseUrl%>_js/agents/lea_client.js\';\r\n	import {AjaxBrain} from  \'<%=baseUrl%>_js/ceed/ajaxbrain.js\';\r\n	window.Ceed = Ceed;\r\n	window.SocketAgent = SocketAgent;\r\n	window.AskAgent = AskAgent;\r\n	window.baseUrl = \'<%=baseUrl%>\';\r\n\r\n	var pathname = window.location.pathname.split(\'/\');\r\n	let paths = pathname.slice(1);\r\n    let controllerName = paths[0];\r\n    let agentName = paths.join(\'/\') + \'Page Page\';\r\n	$(function() {\r\n		Ceed().then(ceed => {\r\n		    let ask = new AskAgent(\'CE\');\r\n			ceed.see(\'set\', [\'ask\', ask]);\r\n			ceed.skills[\'ask\'] = ask;\r\n			ceed.see(\'setLibrary\', new AjaxBrain(\'/brain/\'));\r\n			\r\n			Ceed(agentName).then(async agent => {\r\n				window.agent = agent;\r\n				agent.see(\'appendTo\', \'body\');\r\n				\r\n				agent.see(\'getAgent\', \'CE\').then(async ce => {\r\n        		    await ce.see(\'appendTo\', \'body\');\r\n            		agent.see(\'edit\');\r\n            		\r\n        			ceed.see(\'connect\');\r\n        			ceed.see(\'getSocketAgent\', controllerName + \'Controller\');\r\n        		});\r\n			});\r\n			\r\n		});\r\n	});\r\n	</script>\r\n	<style>\r\n	#auth {\r\n        position: sticky;\r\n        top: 0;\r\n        text-align: right;\r\n    }\r\n    \r\n    #license {\r\n        position: fixed;\r\n        bottom: 8px;\r\n        right: 8px;\r\n        text-align: right;\r\n        width: 420px;\r\n    }\r\n    body {\r\n        padding-bottom: 75px;\r\n    }\r\n	</style>\r\n</head>\r\n<body>\r\n    <div id=\"auth\">\r\n    </div>\r\n    <div id=\"license\">\r\n        <b><a target=\"_blank\" href=\"https://tiia.com.br/\">LEA - Live Environment for Agents</a></b> by <a href=\"mailto: macaroots@gmail.com\">Renato Lenz Costalima</a><br />\r\n        This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0. If a copy of the MPL was not distributed with this file, You can obtain one at <a rel=\"license\" href=\"https://mozilla.org/MPL/2.0/\">https://mozilla.org/MPL/2.0/</a>.\r\n    </div>\r\n</body>\r\n</html>','2021-01-20 14:05:24'),(446,'string','BrainPage','2021-01-20 14:10:29'),(447,'html','<form id=\"formReason\" onsubmit=\"getAgent(this).see(\'submit\', this); return false;\">\n	<div id=\"formA\">\n		A: <input name=\"a[id]\" placeholder=\"id\"><input name=\"a[type]\" placeholder=\"type\"><textarea name=\"a[info]\" rows=\"6\" cols=\"50\" placeholder=\"info\"></textarea>\n	</div>\n	<div id=\"formR\">\n		R: <input name=\"r[id]\" placeholder=\"id\"><input name=\"r[type]\" placeholder=\"type\"><textarea name=\"r[info]\" rows=\"6\" cols=\"50\" placeholder=\"info\"></textarea>\n	</div>\n	<div id=\"formB\">\n		B: <input name=\"b[id]\" placeholder=\"id\"><input name=\"b[type]\" placeholder=\"type\"><textarea name=\"b[info]\" rows=\"6\" cols=\"50\" placeholder=\"info\"></textarea>\n	</div>\n	<div class=\"\">\n	    Order by: A <input id=\"order_a\" value=\"desc\"> R <input id=\"order_r\" value=\"desc\"> B <input id=\"order_b\" value=\"asc\">\n	</div>\n	<input type=\"submit\" value=\"Reason\">\n	<div class=\"responses\"></div>\n</form>','2021-01-20 14:10:29'),(448,'js','new (function submit () {\n	this.act = function (args, callback) {\n	    var presenter = this.agent;\n	    this.agent.see(\'get\', \'body\', function (body) {\n    		var response = body.find(\'.responses\');\n	        response.html(\'Reasoning...\');\n	        fetch(\'reason\', $(args).serialize()).then(function (r) {\n                presenter.see(\'renderReason\', r.json());\n    		});\n	    });\n	};\n})();','2021-01-20 14:22:29'),(449,'js','new (function submit () {\n	this.act = function (args, callback) {\n	    var presenter = this.agent;\n	    this.agent.see(\'get\', \'body\', function (body) {\n    		var response = body.find(\'.responses\');\n	        response.html(\'Reasoning...\');\n	        fetch(\'reason\', $(args).serialize()).then(function (r) {\nconsole.log(r);\n                presenter.see(\'renderReason\', r.json());\n    		});\n	    });\n	};\n})();','2021-01-20 14:22:53'),(450,'js','new (function submit () {\n	this.act = function (args, callback) {\n	    var presenter = this.agent;\n	    this.agent.see(\'get\', \'body\', function (body) {\n    		var response = body.find(\'.responses\');\n	        response.html(\'Reasoning...\');\n	        let data = $(args).serialize();\nconsole.log(\'REQUEST\', r);\n	        fetch(\'/brain/reason?\' + data).then(function (r) {\nconsole.log(\'RESPONSE\', r);\n                presenter.see(\'renderReason\', r.json());\n    		});\n	    });\n	};\n})();','2021-01-20 14:27:13'),(451,'js','new (function submit () {\n	this.act = function (args, callback) {\n	    var presenter = this.agent;\n	    this.agent.see(\'get\', \'body\', function (body) {\n    		var response = body.find(\'.responses\');\n	        response.html(\'Reasoning...\');\n	        let data = $(args).serialize();\nconsole.log(\'REQUEST\', data);\n	        fetch(\'/brain/reason?\' + data).then(function (r) {\nconsole.log(\'RESPONSE\', r);\n                presenter.see(\'renderReason\', r.json());\n    		});\n	    });\n	};\n})();','2021-01-20 14:27:35'),(452,'string','renderReason','2021-01-20 14:30:44'),(453,'js','new (function renderReason () {\n	this.act = function (links, callback) {\n	    var agent = this.agent;\n	    agent.see(\'getBody\').then(function (body) {\n    		var response = body.find(\'.responses\');\n    	    response.html(\'\');\n    	    var objects = {};\n    	    var symbols = {};\n    	    for (var i in links) {\n    	        var link = links[i];\n                try {\n        	        symbols[link.a.id] = link.a;\n        	        symbols[link.r.id] = link.r;\n        	        symbols[link.b.id] = link.b;\n        	        if (!(link.a.id in objects)) {\n        	            objects[link.a.id] = {};\n        	        }\n        	        var methods = objects[link.a.id];\n        	        if (!(link.r.id in methods)) {\n        	            methods[link.r.id] = [];\n        	        }\n        	        methods[link.r.id].push(link.b.id);\n                } catch (e) {\n                    console.log(\'Error on reasoning!\');\n                    console.log(link);\n                    console.log(e);\n                }\n    	    }\n    	    \n    	    var brain = new HTTPAgent(\'brain\');\n    	    var loadSymbol = function (e) {\n    	        var li = this;\n    	        var id = li.innerHTML.split(\' - \')[0];\n    	        li.innerHTML += \'ing...\';\n    	        brain.see(\'gets\', \'id=\' + id).then(function (symbols) {\n    	            var symbol = symbols[0];\n    	            $(li).unbind();\n    	            li.innerHTML = \'\';\n    	            var form = $(\'<form>\').appendTo(li);\n    	            form.text(symbol.id + \' - \');\n    	            var txType = $(\'<input>\');\n    	            txType.val(symbol.type);\n    	            txType.appendTo(form);\n    	            var txInfo = $(\'<textarea rows=\"15\" cols=\"50\">\');\n    	            txInfo.appendTo(form).val(symbol.info);\n    	            var btSet = $(\'<button>set</button>\');\n    	            form.submit(function (e) {\n    	                var symbol = new Symbol(id, txType.val(), txInfo.val());\n    	                agent.see(\'setClick\', symbol);\n    	                return false;\n    	            })\n    	            btSet.appendTo(form);\n    	        });\n    	        e.stopPropagation();\n    	        return false;\n    	    };\n    	    \n    	    var objectsTree = $(\'<ul>\').appendTo(response);\n    	    for (var object in objects) {\n    	        var a = symbols[object];\n    	        var objectTree = $(\'<li>\').prependTo(objectsTree);\n    	        objectTree.append(\'<input type=\"checkbox\" id=\"c\' + object + \'\" checked=\"checked\" /><label for=\"c\' + object + \'\"><b>\' + a.id + \' - \' + a.type + \' - \' + a.info + \'</b></label>\');\n    	        var methods = objects[object];\n    	        var methodsTree = $(\'<ul>\').appendTo(objectTree);\n    	        for (var method in methods) {\n    	            var r = symbols[method];\n    	            var methodTree = $(\'<li>\').prependTo(methodsTree);\n    	            methodTree.append(\'<input type=\"checkbox\" id=\"c\' + object + \'_\' + method + \'\" /><label for=\"c\' + object + \'_\' + method + \'\"><i>\' + r.id + \' - \' + r.type + \' - \' + r.info + \'</i></label>\');\n    	            var values = methods[method];\n    	            var valuesTree = $(\'<ul>\').appendTo(methodTree);\n    	            for (var i in values) {\n    	                var b = symbols[values[i]];\n    		            var li = $(\'<li>\' + b.id + \' - \' + b.type + \' - Load</li>\').prependTo(valuesTree);\n    		            li.click(loadSymbol);\n    	            }\n    	        }\n    	    }\n	    });\n	};\n})();','2021-01-20 14:30:44'),(454,'js','new (function renderReason () {\n	this.act = function (links, callback) {\n	    var agent = this.agent;\n	    agent.see(\'getBody\').then(function (body) {\n    		var response = body.find(\'.responses\');\n    	    response.html(\'\');\n    	    var objects = {};\n    	    var symbols = {};\n    	    for (var i in links) {\n    	        var link = links[i];\n                try {\n        	        symbols[link.a.id] = link.a;\n        	        symbols[link.r.id] = link.r;\n        	        symbols[link.b.id] = link.b;\n        	        if (!(link.a.id in objects)) {\n        	            objects[link.a.id] = {};\n        	        }\n        	        var methods = objects[link.a.id];\n        	        if (!(link.r.id in methods)) {\n        	            methods[link.r.id] = [];\n        	        }\n        	        methods[link.r.id].push(link.b.id);\n                } catch (e) {\n                    console.log(\'Error on reasoning!\');\n                    console.log(link);\n                    console.log(e);\n                }\n    	    }\n    	    \n    	    var loadSymbol = function (e) {\n    	        var li = this;\n    	        var id = li.innerHTML.split(\' - \')[0];\n    	        li.innerHTML += \'ing...\';\n    	        fetch(\'/brain/gets?id=\' + id).then(function (r) {\n    	            let symbols = r.json();\n    	            var symbol = symbols[0];\n    	            $(li).unbind();\n    	            li.innerHTML = \'\';\n    	            var form = $(\'<form>\').appendTo(li);\n    	            form.text(symbol.id + \' - \');\n    	            var txType = $(\'<input>\');\n    	            txType.val(symbol.type);\n    	            txType.appendTo(form);\n    	            var txInfo = $(\'<textarea rows=\"15\" cols=\"50\">\');\n    	            txInfo.appendTo(form).val(symbol.info);\n    	            var btSet = $(\'<button>set</button>\');\n    	            form.submit(function (e) {\n    	                var symbol = new Symbol(id, txType.val(), txInfo.val());\n    	                agent.see(\'setClick\', symbol);\n    	                return false;\n    	            })\n    	            btSet.appendTo(form);\n    	        });\n    	        e.stopPropagation();\n    	        return false;\n    	    };\n    	    \n    	    var objectsTree = $(\'<ul>\').appendTo(response);\n    	    for (var object in objects) {\n    	        var a = symbols[object];\n    	        var objectTree = $(\'<li>\').prependTo(objectsTree);\n    	        objectTree.append(\'<input type=\"checkbox\" id=\"c\' + object + \'\" checked=\"checked\" /><label for=\"c\' + object + \'\"><b>\' + a.id + \' - \' + a.type + \' - \' + a.info + \'</b></label>\');\n    	        var methods = objects[object];\n    	        var methodsTree = $(\'<ul>\').appendTo(objectTree);\n    	        for (var method in methods) {\n    	            var r = symbols[method];\n    	            var methodTree = $(\'<li>\').prependTo(methodsTree);\n    	            methodTree.append(\'<input type=\"checkbox\" id=\"c\' + object + \'_\' + method + \'\" /><label for=\"c\' + object + \'_\' + method + \'\"><i>\' + r.id + \' - \' + r.type + \' - \' + r.info + \'</i></label>\');\n    	            var values = methods[method];\n    	            var valuesTree = $(\'<ul>\').appendTo(methodTree);\n    	            for (var i in values) {\n    	                var b = symbols[values[i]];\n    		            var li = $(\'<li>\' + b.id + \' - \' + b.type + \' - Load</li>\').prependTo(valuesTree);\n    		            li.click(loadSymbol);\n    	            }\n    	        }\n    	    }\n	    });\n	};\n})();','2021-01-20 14:33:56'),(455,'js','new (function GET_getSymbolFromRequest() {\n	this.act = async function (args, resolve, reject) {\n		let brain = await import(\'./brain.js\');\n		let Symbol = brain.Symbol;\n		\n		let req = args[0];\n		let res = args[1];\n		\n		\n		let url = await import(\'url\');\n		let params = url.parse(req.url,true).query;\n		\n		let prefix;\n	    let sufix;\n	    if (!args[2]) {\n	        prefix = \'\';\n	        sufix = \'\';\n	    }\n	    else {\n	        prefix = args[2] + \'[\';\n	        sufix = \']\';\n	    }\n\n		let symbol = new Symbol();\n		if (params != null) {\n		    let id = params[prefix + \'id\' + sufix];\n		    let type = params[prefix + \'type\' + sufix];\n		    let info = params[prefix + \'info\' + sufix];\n    		if (undefined !== id && id != \'\') {\n    		    symbol.id = id;\n    		}\n    		if (undefined !== type && type != \'\') {\n    		    symbol.type = type;\n    		}\n    		if (undefined !== info && info != \'\') {\n    		    symbol.info = info;\n    		}\n    	}\n		resolve(symbol);\n	};\n})();','2021-01-20 14:37:31'),(456,'js','new (function GET_getSymbolFromRequest() {\n	this.act = async function (args, resolve, reject) {\n		let brain = await import(\'./brain.js\');\n		let Symbol = brain.Symbol;\n		\n		let req = args[0];\n		let res = args[1];\n		\n		\n		let url = await import(\'url\');\n		let params = url.parse(req.url,true).query;\n		\n		let prefix;\n	    let sufix;\n	    if (!args[2]) {\n	        prefix = \'\';\n	        sufix = \'\';\n	    }\n	    else {\n	        prefix = args[2] + \'[\';\n	        sufix = \']\';\n	    }\n\n		let symbol = new Symbol();\n		if (params != null) {\n		    let id = params[prefix + \'id\' + sufix];\n		    let type = params[prefix + \'type\' + sufix];\n		    let info = params[prefix + \'info\' + sufix];\n    		if (undefined !== id && id != \'\') {\n    		    symbol.id = id;\n    		}\n    		if (undefined !== type && type != \'\') {\n    		    symbol.type = type;\n    		}\n    		if (undefined !== info && info != \'\') {\n    		    symbol.info = info;\n    		}\n    	}\nconsole.log(\'GET_SYMBOL\', symbol);\n		resolve(symbol);\n	};\n})();','2021-01-20 14:38:06'),(457,'js','new (function renderReason () {\n	this.act = function (links, callback) {\nconsole.log(\'RENDER\', links);\n	    var agent = this.agent;\n	    agent.see(\'getBody\').then(function (body) {\n    		var response = body.find(\'.responses\');\n    	    response.html(\'\');\n    	    var objects = {};\n    	    var symbols = {};\n    	    for (var i in links) {\n    	        var link = links[i];\n                try {\n        	        symbols[link.a.id] = link.a;\n        	        symbols[link.r.id] = link.r;\n        	        symbols[link.b.id] = link.b;\n        	        if (!(link.a.id in objects)) {\n        	            objects[link.a.id] = {};\n        	        }\n        	        var methods = objects[link.a.id];\n        	        if (!(link.r.id in methods)) {\n        	            methods[link.r.id] = [];\n        	        }\n        	        methods[link.r.id].push(link.b.id);\n                } catch (e) {\n                    console.log(\'Error on reasoning!\');\n                    console.log(link);\n                    console.log(e);\n                }\n    	    }\n    	    \n    	    var loadSymbol = function (e) {\n    	        var li = this;\n    	        var id = li.innerHTML.split(\' - \')[0];\n    	        li.innerHTML += \'ing...\';\n    	        fetch(\'/brain/gets?id=\' + id).then(function (r) {\n    	            let symbols = r.json();\n    	            var symbol = symbols[0];\n    	            $(li).unbind();\n    	            li.innerHTML = \'\';\n    	            var form = $(\'<form>\').appendTo(li);\n    	            form.text(symbol.id + \' - \');\n    	            var txType = $(\'<input>\');\n    	            txType.val(symbol.type);\n    	            txType.appendTo(form);\n    	            var txInfo = $(\'<textarea rows=\"15\" cols=\"50\">\');\n    	            txInfo.appendTo(form).val(symbol.info);\n    	            var btSet = $(\'<button>set</button>\');\n    	            form.submit(function (e) {\n    	                var symbol = new Symbol(id, txType.val(), txInfo.val());\n    	                agent.see(\'setClick\', symbol);\n    	                return false;\n    	            })\n    	            btSet.appendTo(form);\n    	        });\n    	        e.stopPropagation();\n    	        return false;\n    	    };\n    	    \n    	    var objectsTree = $(\'<ul>\').appendTo(response);\n    	    for (var object in objects) {\n    	        var a = symbols[object];\n    	        var objectTree = $(\'<li>\').prependTo(objectsTree);\n    	        objectTree.append(\'<input type=\"checkbox\" id=\"c\' + object + \'\" checked=\"checked\" /><label for=\"c\' + object + \'\"><b>\' + a.id + \' - \' + a.type + \' - \' + a.info + \'</b></label>\');\n    	        var methods = objects[object];\n    	        var methodsTree = $(\'<ul>\').appendTo(objectTree);\n    	        for (var method in methods) {\n    	            var r = symbols[method];\n    	            var methodTree = $(\'<li>\').prependTo(methodsTree);\n    	            methodTree.append(\'<input type=\"checkbox\" id=\"c\' + object + \'_\' + method + \'\" /><label for=\"c\' + object + \'_\' + method + \'\"><i>\' + r.id + \' - \' + r.type + \' - \' + r.info + \'</i></label>\');\n    	            var values = methods[method];\n    	            var valuesTree = $(\'<ul>\').appendTo(methodTree);\n    	            for (var i in values) {\n    	                var b = symbols[values[i]];\n    		            var li = $(\'<li>\' + b.id + \' - \' + b.type + \' - Load</li>\').prependTo(valuesTree);\n    		            li.click(loadSymbol);\n    	            }\n    	        }\n    	    }\n	    });\n	};\n})();','2021-01-20 14:41:42'),(458,'js','new (function submit () {\n	this.act = function (args, callback) {\n	    var presenter = this.agent;\n	    this.agent.see(\'get\', \'body\', function (body) {\n    		var response = body.find(\'.responses\');\n	        response.html(\'Reasoning...\');\n	        let data = $(args).serialize();\n	        fetch(\'/brain/reason?\' + data).then(async function (r) {\n                presenter.see(\'renderReason\', await r.json());\n    		});\n	    });\n	};\n})();','2021-01-20 14:42:31'),(459,'string','collapse','2021-01-20 14:44:24'),(460,'js','new (function collapse () {\n	this.act = function (args, resolve, reject) {\n	    this.agent.see(\'getBody\').then(function (body) {\n    		body.find(\'.responses input[type=checkbox]\').attr(\'checked\', false);\n    		resolve();\n	    })\n	};\n})();','2021-01-20 14:44:24'),(461,'js','new (function renderReason () {\n	this.act = function (links, callback) {\n	    var agent = this.agent;\n	    agent.see(\'getBody\').then(function (body) {\n    		var response = body.find(\'.responses\');\n    	    response.html(\'\');\n    	    var objects = {};\n    	    var symbols = {};\n    	    for (var i in links) {\n    	        var link = links[i];\n                try {\n        	        symbols[link.a.id] = link.a;\n        	        symbols[link.r.id] = link.r;\n        	        symbols[link.b.id] = link.b;\n        	        if (!(link.a.id in objects)) {\n        	            objects[link.a.id] = {};\n        	        }\n        	        var methods = objects[link.a.id];\n        	        if (!(link.r.id in methods)) {\n        	            methods[link.r.id] = [];\n        	        }\n        	        methods[link.r.id].push(link.b.id);\n                } catch (e) {\n                    console.log(\'Error on reasoning!\');\n                    console.log(link);\n                    console.log(e);\n                }\n    	    }\n    	    \n    	    var loadSymbol = function (e) {\n    	        var li = this;\n    	        var id = li.innerHTML.split(\' - \')[0];\n    	        li.innerHTML += \'ing...\';\n    	        fetch(\'/brain/gets?id=\' + id).then(async function (r) {\n    	            let symbols = await r.json();\n    	            var symbol = symbols[0];\n    	            $(li).unbind();\n    	            li.innerHTML = \'\';\n    	            var form = $(\'<form>\').appendTo(li);\n    	            form.text(symbol.id + \' - \');\n    	            var txType = $(\'<input>\');\n    	            txType.val(symbol.type);\n    	            txType.appendTo(form);\n    	            var txInfo = $(\'<textarea rows=\"15\" cols=\"50\">\');\n    	            txInfo.appendTo(form).val(symbol.info);\n    	            var btSet = $(\'<button>set</button>\');\n    	            form.submit(function (e) {\n    	                var symbol = new Symbol(id, txType.val(), txInfo.val());\n    	                agent.see(\'setClick\', symbol);\n    	                return false;\n    	            })\n    	            btSet.appendTo(form);\n    	        });\n    	        e.stopPropagation();\n    	        return false;\n    	    };\n    	    \n    	    var objectsTree = $(\'<ul>\').appendTo(response);\n    	    for (var object in objects) {\n    	        var a = symbols[object];\n    	        var objectTree = $(\'<li>\').prependTo(objectsTree);\n    	        objectTree.append(\'<input type=\"checkbox\" id=\"c\' + object + \'\" checked=\"checked\" /><label for=\"c\' + object + \'\"><b>\' + a.id + \' - \' + a.type + \' - \' + a.info + \'</b></label>\');\n    	        var methods = objects[object];\n    	        var methodsTree = $(\'<ul>\').appendTo(objectTree);\n    	        for (var method in methods) {\n    	            var r = symbols[method];\n    	            var methodTree = $(\'<li>\').prependTo(methodsTree);\n    	            methodTree.append(\'<input type=\"checkbox\" id=\"c\' + object + \'_\' + method + \'\" /><label for=\"c\' + object + \'_\' + method + \'\"><i>\' + r.id + \' - \' + r.type + \' - \' + r.info + \'</i></label>\');\n    	            var values = methods[method];\n    	            var valuesTree = $(\'<ul>\').appendTo(methodTree);\n    	            for (var i in values) {\n    	                var b = symbols[values[i]];\n    		            var li = $(\'<li>\' + b.id + \' - \' + b.type + \' - Load</li>\').prependTo(valuesTree);\n    		            li.click(loadSymbol);\n    	            }\n    	        }\n    	    }\n	    });\n	};\n})();','2021-01-20 14:46:36'),(462,'css','ul input ~ ul {\n    display: none;\n}\nul input:checked ~ ul {\n    display: block;\n}','2021-01-20 14:54:17'),(463,'js','new (function index() {\n	this.act = async function (args, resolve, reject) {\n		let req = args[0];\n		let res = args[1];\n		\n		let ejs = (await import(\'ejs\')).default;\n		\n		let agent = this.agent;\n		\n		let url = \'//\' + req.headers.host + \'/\';\n		\n		res.send(ejs.render(await agent.see(\'indexView\'), {agent: agent, baseUrl: url}));\n		resolve();\n	};\n})();','2021-01-20 18:02:26'),(464,'string','AcoesPage','2021-01-20 19:51:33'),(465,'html','<!-- LEA - Live Environment for Agents\n   - by Renato Lenz Costalima\n   - This Source Code Form is subject to the terms of the Mozilla Public\n   - License, v. 2.0. If a copy of the MPL was not distributed with this\n   - file, You can obtain one at https://mozilla.org/MPL/2.0/. -->\n<header>\n    <h1>Ações</h1>\n    <nav>\n        <ul>\n            <li>\n                <a href=\"#\">Início</a>\n                <ul>\n                    <li><a href=\"#carteira\">Carteira</a></li>\n                    <li><a href=\"#dy\">Dividend Yield</a></li>\n                    <li><a href=\"#rendimentos\">Rendimentos Brutos</a></li>\n                    <li><a href=\"#preco\">Preço médio</a></li>\n                    <li><a href=\"#historico\">Histórico</a></li>\n                </ul>\n            </li>\n            <li><a href=\"#\">Sobre</a></li>\n            <li><a href=\"#\">Contato</a></li>\n        </ul>\n    </nav>\n</header>\n<main>\n    <section id=\"carteira\"></section>\n    <section id=\"dy\"></section>\n    <section id=\"rendimentos\"></section>\n    <section id=\"preco\"></section>\n    <section id=\"historico\"></section>\n</main>','2021-01-20 19:51:33'),(466,'js','new (function onLoad() {\n	this.act = async function (args, resolve, reject) {\n		const agent = this.agent;\n		let body = await agent.see(\'getBody\');\n		let sections = body.find(\'section\');\n		for (let section of sections) {\n		    let name = section.id + \' Element\';\n		    agent.see(\'getAgent\', name).then(a => {\n		        a.see(\'appendTo\', section);\n		    });\n		}\n\n		resolve();\n	};\n})();','2021-01-20 19:56:52'),(467,'js','new (function onLoad() {\n	this.act = async function (args, resolve, reject) {\n		const agent = this.agent;\n		let body = await agent.see(\'getBody\');\n		let sections = body.find(\'main > section\');\n		for (let section of sections) {\n		    let name = section.id + \' Element\';\n		    agent.see(\'getAgent\', name).then(a => {\n		        a.see(\'appendTo\', section);\n		    });\n		}\n\n		resolve();\n	};\n})();','2021-01-20 19:57:44'),(468,'js','new (function onLoad() {\n	this.act = async function (args, resolve, reject) {\n		const agent = this.agent;\n		let body = await agent.see(\'getBody\');\n		let sections = body.find(\'main > section\');\n		for (let section of sections) {\n		    let name = section.id + \' Element\';\n		    agent.see(\'getAgent\', name).then(a => {\n		        a.see(\'appendTo\', \'#\' + section.id);\n		    });\n		}\n\n		resolve();\n	};\n})();','2021-01-20 20:00:06'),(469,'js','new (function onLoad() {\n	this.act = async function (args, resolve, reject) {\n		const agent = this.agent;\n		let body = await agent.see(\'getBody\');\n		let sections = body.find(\'main > section\');\n		for (let section of sections) {\n		    let name = section.id + \' List\';\n		    agent.see(\'getAgent\', name).then(a => {\n		        a.see(\'appendTo\', \'#\' + section.id);\n		    });\n		}\n\n		resolve();\n	};\n})();','2021-01-20 20:01:57'),(470,'string','List','2021-01-20 21:04:46'),(471,'js','new (function live() {\n	this.act = function (args, resolve, reject) {\n		var agent = this.agent;\n	    agent.see(\'addName\', \'List Element\', function () {\n		    agent.see(\'Element.live\', args, resolve);\n		});\n	};\n})();','2021-01-20 21:04:46'),(472,'html','<button onclick=\"getAgent(this).see(\'list\', \'.list\');\">List</button>\r\n<div class=\"list\"></div>','2021-01-20 21:20:31'),(473,'js','new (function list () {\r\n	this.act = function (args, resolve, reject) {\r\n		var agent = this.agent;\r\n		agent.see(\'getBody\').then(function (body) {\r\n		    var div = body.find(\'.list\');\r\n    		div.html(\'Loading...\');\r\n		\r\n		    agent.see(\'study\', \'itemView\').then(function (ok) {\r\n        	    agent.see(\'listUrl\').then(function (listUrl) {\r\n            	    fetch(listUrl).then(async function (r) {\r\n            	        let rows = await r.json();\r\n            		    div.html(\'\');\r\n            		    var header = $(\'<div class=\"headers\">\').appendTo(div);\r\n            		    var first = true;\r\n                        for (let id in rows) {\r\n                            var row = rows[id];\r\n                            row.id = id;\r\n                            if (first) {\r\n                                for (let column in row) {\r\n                                    header.append(\'<span class=\"\' + column + \'\">\' + column + \'</span>\')\r\n                                    first = false;\r\n                                }\r\n                            }\r\n                            agent.see(\'itemView\', row).then(function (item) {\r\n                               div.append(item);\r\n                            });\r\n                        }\r\n            	    }, \'json\');\r\n        	        \r\n        	    })\r\n    		});\r\n		});\r\n		\r\n		\r\n	};\r\n})();','2021-01-20 22:24:37'),(474,'string','AcoesPage/Dy','2021-01-20 22:26:05'),(475,'string','listUrl','2021-01-20 22:26:05'),(476,'string','/acoes/dy','2021-01-20 22:26:05'),(477,'js','new (function list () {\r\n	this.act = function (args, resolve, reject) {\r\n		var agent = this.agent;\r\n		agent.see(\'getBody\').then(async function (body) {\r\n		    var div = body.find(\'.list\');\r\n    		div.html(\'Loading...\');\r\n		\r\n		    let itemAction = await agent.see(\'get\', \'itemView\');\r\n		    if (!itemAction) {\r\n		        await agent.see(\'study\', \'itemView\');\r\n		    }\r\n    	    agent.see(\'listUrl\').then(function (listUrl) {\r\nconsole.log(\'URL\', listUrl);\r\n        	    fetch(listUrl).then(async function (r) {\r\n        	        let rows = await r.json();\r\n        		    div.html(\'\');\r\n        		    var header = $(\'<div class=\"headers\">\').appendTo(div);\r\n        		    var first = true;\r\n                    for (let id in rows) {\r\n                        var row = rows[id];\r\n                        row.id = id;\r\n                        if (first) {\r\n                            for (let column in row) {\r\n                                header.append(\'<span class=\"\' + column + \'\">\' + column + \'</span>\')\r\n                                first = false;\r\n                            }\r\n                        }\r\n                        agent.see(\'itemView\', row).then(function (item) {\r\n                           div.append(item);\r\n                        });\r\n                    }\r\n        	    }, \'json\');\r\n    	        \r\n    	    });\r\n		});\r\n		\r\n		\r\n	};\r\n})();','2021-01-20 22:38:39'),(478,'string','AcoesController','2021-01-20 23:41:25'),(479,'string','dy','2021-01-20 23:41:25'),(480,'js','new (function dy() {\n	this.act = function (args, resolve, reject) {\n		let req = args[0];\n		let res = args[1];\n		res.json([{id: 1, nome: \'A\', \'dy\': \'23\'}]);\n		resolve();\n	};\n})();','2021-01-20 23:41:25'),(481,'string','itemView','2021-01-20 23:42:40'),(482,'js','new (function itemView () {\r\n	this.act = function (args, resolve, reject) {\r\n	    let agent = this.agent;\r\n		let html = \'<div class=\"item id\' + args.id + \'\">\';\r\n		for (let i in args) {\r\n		    html += \'\\n\\t<span class=\"\' + i + \'\">\' + args[i] + \'</span>\';\r\n		}\r\n		html += \'\\n</div>\';\r\n		let item = $(html);\r\n		resolve(item);\r\n	};\r\n})();','2021-01-20 23:42:40'),(483,'js','new (function dontKnow() {\r\n	this.act = function(perception, resolve, reject) {\r\n		let concept = perception.type;\r\n		let agent = this.agent;\r\n		let mind = this.mind;\r\n		let learned = false;\r\n		let fullname = mind.getFullName();\r\n\r\n		console.log(fullname + \' - Don\\\'t know \"\' + concept + \'\"! Searching\');\r\n		mind.set(\'unkowns\', concept);\r\n\r\n		agent.see(\'study\', concept).then(function (learned) {\r\n			console.log(fullname + \' - Studied \"\' + concept + \'\": \' + learned);\r\n			if (!learned) {\r\n				perception.type = \'index\';\r\n			    agent.see(\'ask\', concept);\r\n			}\r\n			mind.see(perception, resolve, reject);\r\n		});\r\n	};\r\n})();','2021-01-20 23:43:39'),(484,'string','AcoesPage/Rendimentos','2021-01-20 23:47:48'),(485,'string','/acoes/rendimentos','2021-01-20 23:47:48'),(486,'string','rendimentos','2021-01-20 23:49:20'),(487,'js','new (function rendimentos() {\n	this.act = function (args, resolve, reject) {\n		let req = args[0];\n		let res = args[1];\n		res.json([{id: 10, nome: \'A\', rendimento: \'43\'}]);\n		resolve();\n	};\n})();','2021-01-20 23:49:20'),(488,'string','AcoesPage/Preco','2021-01-20 23:50:19'),(489,'string','/acoes/preco','2021-01-20 23:50:19'),(490,'js','new (function rendimentos() {\n	this.act = async function (args, resolve, reject) {\n		let req = args[0];\n		let res = args[1];\n		const connection = await agent.see(\'connectDB\');\n		let sql = \"select t.nome, sum(valor) as total from tags t left join lancamentos l on l.nome like concat(\'%\',t.nome,\'%\') group by t.id order by total desc\";\n		connection.query(sql, function (error, results, fields) {\n			if (error) throw error;\n		    res.json(results);\n			\n			connection.release();\n			\n		});\n		resolve();\n	};\n})();','2021-01-21 00:11:40'),(491,'js','new (function rendimentos() {\n	this.act = async function (args, resolve, reject) {\n		let req = args[0];\n		let res = args[1];\n		let agent = this.agent;\n		const connection = await agent.see(\'connectDB\');\n		let sql = \"select t.nome, sum(valor) as total from tags t left join lancamentos l on l.nome like concat(\'%\',t.nome,\'%\') group by t.id order by total desc\";\n		connection.query(sql, function (error, results, fields) {\n			if (error) throw error;\n		    res.json(results);\n			\n			connection.release();\n			\n		});\n		resolve();\n	};\n})();','2021-01-21 00:13:32'),(492,'string','connectDB','2021-01-21 00:18:21'),(493,'js','new (function connectDB() {\n    const mysql = (await import(\'mysql\')).default;\n    \n	let options = {\n	    host: \'localhost\',\n	    user: \'root\',\n	    password: \'\',\n	    database: \'bolsa\'\n	};\n    const pool = mysql.createPool(options);\n    \n	this.act = async function (args, resolve, reject) {\n		pool.getConnection((err, con) => {\n			if (err) {\n				return reject(err);\n			}\n			resolve(con);\n		});\n	};\n})();','2021-01-21 00:18:21'),(494,'js','import mysql from \'mysql\';\nnew (function connectDB() {\n	let options = {\n	    host: \'localhost\',\n	    user: \'root\',\n	    password: \'\',\n	    database: \'bolsa\'\n	};\n    const pool = mysql.createPool(options);\n    \n	this.act = async function (args, resolve, reject) {\n		pool.getConnection((err, con) => {\n			if (err) {\n				return reject(err);\n			}\n			resolve(con);\n		});\n	};\n})();','2021-01-21 00:22:17'),(495,'js','new (function connectDB() {\n    let self = this;\n    (async function () {\n        const mysql = (await import(\'mysql\')).default;\n        \n    	let options = {\n    	    host: \'localhost\',\n    	    user: \'root\',\n    	    password: \'\',\n    	    database: \'bolsa\'\n    	};\n        self.pool = mysql.createPool(options);\n    })();\n    \n	this.act = async function (args, resolve, reject) {\n		self.pool.getConnection((err, con) => {\n			if (err) {\n				return reject(err);\n			}\n			resolve(con);\n		});\n	};\n})();','2021-01-21 00:23:38'),(496,'css','.list > div {\n    display: table-row;\n}\n.list > div > span {\n    display: table-cell;\n    padding-left: 30px;\n}\n.headers {\n    text-transform: capitalize;\n    font-weight: bold;\n}','2021-01-21 00:29:55'),(497,'js','new (function rendimentos() {\n	this.act = async function (args, resolve, reject) {\n		let sql = \"select t.nome, sum(valor) as total from tags t left join lancamentos l on l.nome like concat(\'%\',t.nome,\'%\') group by t.id order by total desc\";\n		args.push(sql);\n		this.agent.see(\'sendQuery\', args).then(resolve).catch(reject);\n	};\n})();','2021-01-21 00:45:35'),(498,'string','sendQuery','2021-01-21 00:48:06'),(499,'js','new (function sendQuery() {\n	this.act = async function (args, resolve, reject) {\n		let req = args[0];\n		let res = args[1];\n		let agent = this.agent;\n		const connection = await agent.see(\'connectDB\');\n		let sql = args[2];\n		connection.query(sql, function (error, results, fields) {\n			if (error) throw error;\n		    res.json(results);\n			\n			connection.release();\n			\n		});\n		resolve();\n	};\n})();','2021-01-21 00:48:06'),(500,'js','new (function sendQuery() {\n	this.act = async function (args, resolve, reject) {\n		let req = args[0];\n		let res = args[1];\n		let agent = this.agent;\n		const connection = await agent.see(\'connectDB\');\n		let sql = args[2];\n		let values = args[3] || [];\n		connection.query(sql, values, function (error, results, fields) {\n			if (error) throw error;\n		    res.json(results);\n			\n			connection.release();\n			\n		});\n		resolve();\n	};\n})();','2021-01-21 00:51:06'),(501,'string','carteira','2021-01-21 00:51:29'),(502,'html','new (function carteira() {\n	this.act = function (args, resolve, reject) {\n		let sql = \"select t.nome, sum(preco*quantidade) from acoes l join tags t on l.nome like concat(\'%\',t.nome,\'%\') group by t.id\";\n		args.push(sql);\n		this.agent.see(\'sendQuery\', args).then(resolve).catch(reject);\n	};\n})();','2021-01-21 00:51:29'),(503,'string','/acoes/carteira','2021-01-21 00:52:17'),(504,'string','AcoesPage/Carteira','2021-01-21 00:52:17'),(505,'html','<!-- LEA - Live Environment for Agents\n   - by Renato Lenz Costalima\n   - This Source Code Form is subject to the terms of the Mozilla Public\n   - License, v. 2.0. If a copy of the MPL was not distributed with this\n   - file, You can obtain one at https://mozilla.org/MPL/2.0/. -->\n<header>\n    <h1>Ações</h1>\n    <nav>\n        <ul>\n            <li>\n                <a href=\"#\">Início</a>\n                <ul>\n                    <li><a href=\"#carteira\">Carteira</a></li>\n                    <li><a href=\"#dy\">Dividend Yield</a></li>\n                    <li><a href=\"#rendimentos\">Rendimentos Brutos</a></li>\n                    <li><a href=\"#preco\">Preço médio</a></li>\n                    <li><a href=\"#historico\">Histórico</a></li>\n                </ul>\n            </li>\n            <li><a href=\"#\">Sobre</a></li>\n            <li><a href=\"#\">Contato</a></li>\n        </ul>\n    </nav>\n</header>\n<main>\n    <section id=\"carteira\"><h1>Carteira</h1></section>\n    <section id=\"dy\"><h1>Dividend Yield</h1></section>\n    <section id=\"rendimentos\"><h1>Rendimentos Brutos</h1></section>\n    <section id=\"preco\"><h1>Preço médio</h1></section>\n    <section id=\"historico\"><h1>Histórico</h1></section>\n</main>','2021-01-21 00:59:53'),(506,'js','new (function rendimentos() {\n	this.act = function (args, resolve, reject) {\n		let sql = \"select t.nome, sum(valor) as total from tags t left join lancamentos l on l.nome like concat(\'%\',t.nome,\'%\') group by t.id order by total desc\";\n		args.push(sql);\n		this.agent.see(\'sendQuery\', args).then(resolve).catch(reject);\n	};\n})();','2021-01-21 01:00:48'),(507,'js','new (function carteira() {\n	this.act = function (args, resolve, reject) {\n		let sql = \"select t.nome, sum(preco*quantidade) from acoes l join tags t on l.nome like concat(\'%\',t.nome,\'%\') group by t.id\";\n		args.push(sql);\n		this.agent.see(\'sendQuery\', args).then(resolve).catch(reject);\n	};\n})();','2021-01-21 01:00:51'),(508,'js','new (function carteira() {\n	this.act = function (args, resolve, reject) {\n		let sql = \"select t.nome, sum(preco*quantidade) as total from acoes l join tags t on l.nome like concat(\'%\',t.nome,\'%\') group by t.id\";\n		args.push(sql);\n		this.agent.see(\'sendQuery\', args).then(resolve).catch(reject);\n	};\n})();','2021-01-21 01:01:35'),(509,'js','new (function dy() {\n	this.act = function (args, resolve, reject) {\n		let sql = \"select * from dy\";\n		args.push(sql);\n		this.agent.see(\'sendQuery\', args).then(resolve).catch(reject);\n	};\n})();','2021-01-21 01:02:33'),(510,'string','toggle','2021-01-21 01:04:12'),(511,'js','new (function toggle() {\n	this.act = function (args, resolve, reject) {\n		var agent = this.agent;\n		agent.see(\'getBody\').then(function (body) {\n		    body.toggle();\n		    resolve();\n		});\n	};\n})();','2021-01-21 01:04:12'),(512,'string','AcoesPage/Historico','2021-01-21 01:07:26'),(513,'string','/acoes/historico','2021-01-21 01:07:26'),(514,'string','extrato','2021-01-21 01:09:51'),(515,'js','new (function extrato() {\n	this.act = function (args, resolve, reject) {\n		let sql = \"select * from lancamentos order by data desc\";\n		args.push(sql);\n		this.agent.see(\'sendQuery\', args).then(resolve).catch(reject);\n	};\n})();','2021-01-21 01:09:51'),(516,'html','<!-- LEA - Live Environment for Agents\n   - by Renato Lenz Costalima\n   - This Source Code Form is subject to the terms of the Mozilla Public\n   - License, v. 2.0. If a copy of the MPL was not distributed with this\n   - file, You can obtain one at https://mozilla.org/MPL/2.0/. -->\n<header>\n    <h1>Ações</h1>\n    <nav>\n        <ul>\n            <li>\n                <a href=\"#\">Início</a>\n                <ul>\n                    <li><a href=\"#carteira\">Carteira</a></li>\n                    <li><a href=\"#dy\">Dividend Yield</a></li>\n                    <li><a href=\"#rendimentos\">Rendimentos Brutos</a></li>\n                    <li><a href=\"#historico\">Histórico de compras</a></li>\n                    <li><a href=\"#extrato\">Extrato</a></li>\n                </ul>\n            </li>\n            <li><a href=\"#\">Sobre</a></li>\n            <li><a href=\"#\">Contato</a></li>\n        </ul>\n    </nav>\n</header>\n<main>\n    <section id=\"carteira\"><h1>Carteira</h1></section>\n    <section id=\"dy\"><h1>Dividend Yield</h1></section>\n    <section id=\"rendimentos\"><h1>Rendimentos Brutos</h1></section>\n    <section id=\"historico\"><h1>Histórico de compras</h1></section>\n    <section id=\"extrato\"><h1>Extrato</h1></section>\n</main>','2021-01-21 01:12:37'),(517,'string','historico','2021-01-21 01:13:15'),(518,'js','new (function historico() {\n	this.act = function (args, resolve, reject) {\n		let sql = \"select * from acoes order by data desc\";\n		args.push(sql);\n		this.agent.see(\'sendQuery\', args).then(resolve).catch(reject);\n	};\n})();','2021-01-21 01:13:15'),(519,'string','AcoesPage/Extrato','2021-01-21 01:14:02'),(520,'js','/acoes/extrato','2021-01-21 01:14:02'),(521,'string','/acoes/extrato','2021-01-21 01:14:09'),(522,'html','<!-- LEA - Live Environment for Agents\n   - by Renato Lenz Costalima\n   - This Source Code Form is subject to the terms of the Mozilla Public\n   - License, v. 2.0. If a copy of the MPL was not distributed with this\n   - file, You can obtain one at https://mozilla.org/MPL/2.0/. -->\n<header>\n    <h1>Ações</h1>\n    <nav>\n        <ul>\n            <li>\n                <a href=\"#\">Início</a>\n                <ul>\n                    <li><a href=\"#carteira\">Carteira</a></li>\n                    <li><a href=\"#dy\">Dividend Yield</a></li>\n                    <li><a href=\"#rendimentos\">Rendimentos Brutos</a></li>\n                    <li><a href=\"#historico\">Histórico de compras</a></li>\n                    <li><a href=\"#extrato\">Extrato</a></li>\n                </ul>\n            </li>\n            <li><a href=\"#\">Sobre</a></li>\n            <li><a href=\"#\">Contato</a></li>\n        </ul>\n    </nav>\n</header>\n<main>\n    <section id=\"dy\"><h1>Carteira</h1></section>\n    <section id=\"historico\"><h1>Histórico de compras</h1></section>\n    <section id=\"extrato\"><h1>Extrato</h1></section>\n</main>','2021-01-21 03:21:31'),(523,'css','.list > div {\n    display: table-row;\n}\n.list > div > span {\n    display: table-cell;\n    padding-left: 30px;\n}\n.list > div:nth-child(even) {\n    background-color: #EEE;\n}\n.headers {\n    text-transform: capitalize;\n    font-weight: bold;\n    background-color: #DFD;\n}','2021-01-21 19:57:49'),(524,'js','new (function historico() {\n	this.act = function (args, resolve, reject) {\n		let sql = \"select id, date_format(data, \'%d-%m-%Y\'), nome, quantidade, preco, quantidade*preco as subtotal from acoes order by data desc\";\n		args.push(sql);\n		this.agent.see(\'sendQuery\', args).then(resolve).catch(reject);\n	};\n})();','2021-01-21 21:55:38'),(525,'js','new (function historico() {\n	this.act = function (args, resolve, reject) {\n		let sql = \"select id, date_format(data, \'%d-%m-%Y\') as data, nome, quantidade, preco, round(quantidade*preco, 2) as subtotal from acoes order by data desc\";\n		args.push(sql);\n		this.agent.see(\'sendQuery\', args).then(resolve).catch(reject);\n	};\n})();','2021-01-21 21:56:09'),(526,'js','new (function historico() {\n	this.act = function (args, resolve, reject) {\n		let sql = \"select id, date_format(data, \'%d-%m-%Y\') as data, nome, quantidade, preco, round(quantidade*preco, 2) as subtotal from acoes a order by a.data desc\";\n		args.push(sql);\n		this.agent.see(\'sendQuery\', args).then(resolve).catch(reject);\n	};\n})();','2021-01-21 21:57:12'),(527,'html','<!-- LEA - Live Environment for Agents\n   - by Renato Lenz Costalima\n   - This Source Code Form is subject to the terms of the Mozilla Public\n   - License, v. 2.0. If a copy of the MPL was not distributed with this\n   - file, You can obtain one at https://mozilla.org/MPL/2.0/. -->\n<header>\n    <h1>Ações</h1>\n    <nav>\n        <ul>\n            <li>\n                <a href=\"#\">Início</a>\n                <ul>\n                    <li><a href=\"#carteira\">Carteira</a></li>\n                    <li><a href=\"#historico\">Histórico de compras</a></li>\n                    <li><a href=\"#extrato\">Extrato</a></li>\n                </ul>\n            </li>\n            <li><a href=\"#\">Sobre</a></li>\n            <li><a href=\"#\">Contato</a></li>\n        </ul>\n    </nav>\n</header>\n<main>\n    <section id=\"dy\"><h1>Carteira</h1></section>\n    <section id=\"historico\"><h1>Histórico de compras</h1></section>\n    <section id=\"extrato\"><h1>Extrato</h1></section>\n</main>','2021-01-21 22:49:31'),(528,'string','ShellPage','2021-01-26 15:57:33'),(529,'html','<section class=\"shell\">\n    <h1>Shell</h1>\n    <div class=\"responses\"></div>\n    <form onsubmit=\"getAgent(this).see(\'onSubmit\', this); return false;\">\n        <label>\n            <span class=\"current_dir\">\n            </span>\n            >\n            <input name=\"command\" placeholder=\"command\" type=\"text\">\n        </label>\n        <input type=\"submit\">\n    </form>\n</section>','2021-01-26 15:57:33'),(530,'string','onSubmit','2021-01-26 16:08:14'),(531,'js','new (function onSubmit() {\n	this.act = function (form, resolve, reject) {\n        let agent = this.agent;\n        let data = $(form).serialize();\n        fetch(\'/shell/execute\', {\n            headers: {\n        		\'Content-Type\': \'application/x-www-form-urlencoded\'\n        	},\n            method: \'post\',\n            body: data\n        }).then(async r => {\n            let response = await r.text();\n            \n            agent.see(\'getBody\').then(function (body) {\n                body.find(\'.responses\').append(\'<div>\' + response + \'</div>\');\n            });\n        });\n		resolve();\n	};\n})();','2021-01-26 16:08:14'),(532,'js','new (function dontKnow() {\r\n	this.act = function(perception, resolve, reject) {\r\n		let concept = perception.type;\r\n		let agent = this.agent;\r\n		let mind = this.mind;\r\n		let learned = false;\r\n		let fullname = mind.getFullName();\r\n\r\n		console.log(fullname + \' - Don\\\'t know \"\' + concept + \'\"! Searching\');\r\n		mind.set(\'unkowns\', concept);\r\n\r\n		agent.see(\'study\', concept).then(function (learned) {\r\n			console.log(fullname + \' - Studied \"\' + concept + \'\": \' + learned);\r\n			if (!learned) {\r\n				perception.type = \'index\';\r\n			    agent.see(\'ask\', concept);\r\n			}\r\n			mind.see(perception, resolve, reject);\r\n		});\r\n	};\r\n})();','2021-01-26 21:29:28'),(533,'string','ShellController','2021-01-26 21:39:15'),(534,'string','execute','2021-01-26 21:39:15'),(535,'js','new (function execute() {\n	this.act = async function (args, resolve, reject) {\n		let req = args[0];\n		let res = args[1];\n		let command = req.body.command;\n		let shell = await this.agent.see(\'getAgent\', \'Shell\');\n		shell.see(\'execute\', command).then(res.send).catch(reject);\n		\n		resolve();\n	};\n})();','2021-01-26 21:39:15'),(536,'string','Shell','2021-01-26 21:40:21'),(537,'js','new (function execute() {\n	this.act = function (args, resolve, reject) {\n		let exec = import(\'child_process\').exec;\n		\n        exec(cmd, (err, stdout, stderr) => {\n            if (err) {\n                reject(err);\n            } else {\n                resolve({ stdout, stderr });\n            }\n        });\n	};\n})();','2021-01-26 21:40:21'),(538,'js','new (function execute() {\n	this.act = function (command, resolve, reject) {\n		let exec = import(\'child_process\').exec;\n		\n        exec(command, (err, stdout, stderr) => {\n            if (err) {\n                reject(err);\n            } else {\n                resolve({ stdout, stderr });\n            }\n        });\n	};\n})();','2021-01-26 21:43:04'),(539,'js','new (function execute() {\n	this.act = function (command, resolve, reject) {\n		let exec = import(\'child_process\').exec;\n		\n        exec(command, (err, stdout, stderr) => {\n            resolve({ stdout, stderr });\n        });\n	};\n})();','2021-01-26 21:43:04'),(540,'js','new (function execute() {\n	this.act = function (command, resolve, reject) {\n		let exec = import(\'child_process\');\nconsole.log(exec);\n		\n        exec(command, (err, stdout, stderr) => {\n            resolve({ stdout, stderr });\n        });\n	};\n})();','2021-01-26 21:57:10'),(541,'js','new (function execute() {\n	this.act = function (command, resolve, reject) {\n		let exec = (await import(\'child_process\')).exec;\nconsole.log(exec);\n		\n        exec(command, (err, stdout, stderr) => {\n            resolve({ stdout, stderr });\n        });\n	};\n})();','2021-01-26 21:57:48'),(542,'js','new (function execute() {\n	this.act = async function (command, resolve, reject) {\n		let exec = (await import(\'child_process\')).exec;\nconsole.log(exec);\n		\n        exec(command, (err, stdout, stderr) => {\n            resolve({ stdout, stderr });\n        });\n	};\n})();','2021-01-26 21:58:39'),(543,'js','new (function execute() {\n	this.act = async function (args, resolve, reject) {\n		let req = args[0];\n		let res = args[1];\n		let command = req.body.command;\n		let shell = await this.agent.see(\'getAgent\', \'Shell\');\n		let r = await shell.see(\'execute\', command);\n	    let response = await r.text();\n	    res.send(response);\n		resolve();\n	};\n})();','2021-01-26 22:02:20'),(544,'js','new (function execute() {\n	this.act = async function (command, resolve, reject) {\n		let exec = (await import(\'child_process\')).exec;\n		\n        exec(command, (err, stdout, stderr) => {\n            resolve({ stdout, stderr, err });\n        });\n	};\n})();','2021-01-26 22:02:32'),(545,'js','new (function execute() {\n	this.act = async function (args, resolve, reject) {\n		let req = args[0];\n		let res = args[1];\n		let command = req.body.command;\n		let shell = await this.agent.see(\'getAgent\', \'Shell\');\n		let response = await shell.see(\'execute\', command);\n	    res.send(response);\n		resolve();\n	};\n})();','2021-01-26 22:03:30'),(546,'js','new (function execute() {\n	this.act = async function (args, resolve, reject) {\n		let req = args[0];\n		let res = args[1];\n		let command = req.body.command;\n		let shell = await this.agent.see(\'getAgent\', \'Shell\');\n		let response = await shell.see(\'execute\', command);\n	    res.json(response);\n		resolve();\n	};\n})();','2021-01-26 22:06:23'),(547,'js','new (function getSocketAgent() {\n	this.act = function (name, resolve, reject) {\n		const agent = this.agent;\n		const socket = agent.socket;\n		if (!agent.agents) {\n			agent.agents = {};\n		}\n		let agents = agent.agents;\n		let newAgent;\n		try {\n		    name = name.charAt(0).toUpperCase() + name.slice(1);\n			newAgent = agents[name][0];\n		} catch (e) {\n			newAgent = new Promise((res, rej) => {\n			    let socketAgent = new SocketAgent(name, socket);\n    			agent.see(\'notify\', [\'newAgent\', socketAgent]);\n			    res(socketAgent);\n			});\n			agents[name] = [newAgent];\n			agent.see(\'registerAgent\', newAgent);\n		}\n		newAgent.then(resolve);\n	};\n})();','2021-01-26 23:00:55'),(548,'string','registerAgent','2021-01-26 23:05:30'),(549,'js','new (function registerAgent() {\n	this.act = function (newAgent, resolve, reject) {\n		const agent = this.agent;\n		if (!agent.agents) {\n			agent.agents = {};\n		}\n		let agents = agent.agents;\n		newAgent.then(async function (a) {\n			let names = (await a.see(\'getNames\')).split(\' \');\n			// referência a partir do nome completo\n			names.push(names.join(\' \'));\n			for (let n of names) {\n				if (!agents[n]) {\n					agents[n] = [];\n				}\n				agents[n].unshift(newAgent);\n			}\n		});\n		resolve();\n	};\n})();','2021-01-26 23:05:30'),(550,'js','new (function askBind () {\n	this.act = function (args, resolve, reject) {\n	    let agent = this.agent;\n	    let target = args[2];\n	    agent.see(\'askFor\', args).then(function () {\n	        agent.see(\'get\', \'editor\').then(function (editor) {\n	            let session = editor.getSession();\n	            session.removeAllListeners(\'change\');\n	            if (target.html() != \'\') {\n	                editor.setValue(target.html(), -1);\n	                session.getUndoManager().markClean();\n	            }\n	            session.on(\'change\', function() {\n	                target.html(editor.getValue());\n                });\n	        });\n		resolve();\n	    });\n	};\n})();','2021-01-26 23:10:43'),(551,'js','new (function askFor () {\r\n	this.act = function (args, resolve, reject) {\r\n		let script = this.agent;\r\n		let asker;\r\n		let key;\r\n		if (typeof args == \'string\') {\r\n    		let list = args.split(\'.\');\r\n    		asker = $(\'.\' + list[0])[0].agent;\r\n    		key = list[1];\r\n		}\r\n		else {\r\n		    asker = args[0];\r\n		    key = args[1];\r\n		}\r\n	    script.see(\'getBody\').then(function (body) {\r\n	        script.see(\'get\', \'parent\').then(function (parent) {\r\n    		    parent.see(\'show\');\r\n    		});\r\n            body.show();\r\n		        \r\n    		script.see(\'get\', \'editor\').then(async function (editor) {\r\n    		    if (editor == null) {\r\n    		        console.warn(\'Editor missing!\');\r\n    				// await script.see(\'appendTo\', \'body\');\r\n    		        return false;\r\n    		    }\r\n    		    editor.removeAllListeners(\'change\');\r\n    		    \r\n		        let txType = body.find(\'input[name=type]\');\r\n    			let totalVersions = body.find(\'.versions > .total\');\r\n		        let questions = body.find(\'.questions\');\r\n		        let question = $(\'<label>\').prependTo(questions);\r\n		        let txName = $(\'<span>\').prependTo(question);\r\n		        question[0].agent = asker;\r\n		        question[0]._key = key;\r\n		        let name = asker.see(\'getNames\');\r\n		        name.then(function (names) {\r\n		            txName.html(names);\r\n		        });\r\n		        let keyInput = $(\'<input>\').appendTo(question);\r\n		        keyInput.val(key);\r\n		        \r\n                let session = ace.createEditSession(\'\', editor.getSession().getMode());\r\n                session.setOption(\'indentedSoftWrap\', false);\r\n        		session.setUseWrapMode(true);\r\n    			session.getUndoManager().markClean();\r\n        		\r\n		        question[0].session = session;\r\n		        let selectQuestion = function (event) {\r\n                    editor.setSession(question[0].session);\r\n		            questions.find(\'.selected\').removeClass(\'selected\');\r\n		            question.addClass(\'selected\');\r\n		            txType.val(question[0]._type);\r\n		            try {\r\n			            totalVersions.html(question[0].representations.length);\r\n		            } catch (e) {}\r\n                };\r\n                question.click(selectQuestion);\r\n                question.trigger(\'click\');\r\n		    \r\n    		    let type = \'\';\r\n    			let info = \'\';\r\n    			let representations;\r\n    			let context = 1;\r\n    			\r\n    			asker.see(\'read\', key).then(function (representations) {\r\n    				if (representations != null && representations.length > 0) {\r\n					    question[0].representations = representations;\r\n    				    let representation = representations[representations.length - context];\r\n    					type = representation.type;\r\n    					info = representation.info;\r\n    \r\n                        question[0]._type = type;\r\n    					txType.val(type);\r\n    					session.setValue(info, -1);\r\n    					session.getUndoManager().markClean();\r\n    					txType.trigger(\'change\');\r\n	                	resolve(false);\r\n    				}\r\n    				else {\r\n    					asker.see(\'read\', \'EmptyAction\').then(async function (representations) {\r\n    						if (representations != null && representations.length > 0) {\r\n    						    question[0].representations = representations;\r\n    						    let representation = representations[representations.length - 1];\r\n    							type = representation.type;\r\n    							info = representation.info;\r\n    							info = info.replace(new RegExp(\'agent\', \'g\'), await name);\r\n    							info = info.replace(new RegExp(\'EmptyAction\', \'g\'), key);\r\n                                question[0]._type = type;\r\n    							txType.val(type);\r\n    							session.setValue(info, -1);\r\n    							session.getUndoManager().markClean();\r\n    							txType.trigger(\'change\');\r\n    						}\r\n		                    resolve(false);\r\n    					});\r\n    				}\r\n    			});\r\n                resolve(false);\r\n		    });\r\n		});\r\n	};\r\n})();','2021-01-26 23:13:04'),(552,'js','new (function askFor () {\r\n	this.act = function (args, resolve, reject) {\r\n		let script = this.agent;\r\n		let asker;\r\n		let key;\r\n		if (typeof args == \'string\') {\r\n    		let list = args.split(\'.\');\r\n    		asker = $(\'.\' + list[0])[0].agent;\r\n    		key = list[1];\r\n		}\r\n		else {\r\n		    asker = args[0];\r\n		    key = args[1];\r\n		}\r\n	    script.see(\'getBody\').then(function (body) {\r\n	        script.see(\'get\', \'parent\').then(function (parent) {\r\n    		    parent.see(\'show\');\r\n    		});\r\n            body.show();\r\n		        \r\n    		script.see(\'get\', \'editor\').then(async function (editor) {\r\n    		    if (editor == null) {\r\n    		        console.warn(\'Editor missing!\');\r\n    				// await script.see(\'appendTo\', \'body\');\r\n    		        return false;\r\n    		    }\r\n    		    editor.removeAllListeners(\'change\');\r\n    		    \r\n		        let txType = body.find(\'input[name=type]\');\r\n    			let totalVersions = body.find(\'.versions > .total\');\r\n		        let questions = body.find(\'.questions\');\r\n		        let question = $(\'<label>\').prependTo(questions);\r\n		        let txName = $(\'<span>\').prependTo(question);\r\n		        question[0].agent = asker;\r\n		        question[0]._key = key;\r\n		        let name = asker.see(\'getNames\');\r\n		        name.then(function (names) {\r\n		            txName.html(names);\r\n		        });\r\n		        let keyInput = $(\'<input>\').appendTo(question);\r\n		        keyInput.val(key);\r\n		        \r\n                const session = ace.createEditSession(\'\', editor.getSession().getMode());\r\n                session.setOption(\'indentedSoftWrap\', false);\r\n        		session.setUseWrapMode(true);\r\n    			session.getUndoManager().markClean();\r\n        		\r\n		        question[0].session = session;\r\n		        let selectQuestion = function (event) {\r\n                    editor.setSession(question[0].session);\r\n		            questions.find(\'.selected\').removeClass(\'selected\');\r\n		            question.addClass(\'selected\');\r\n		            txType.val(question[0]._type);\r\n		            try {\r\n			            totalVersions.html(question[0].representations.length);\r\n		            } catch (e) {}\r\n                };\r\n                question.click(selectQuestion);\r\n                question.trigger(\'click\');\r\n		    \r\n    		    let type = \'\';\r\n    			let info = \'\';\r\n    			let representations;\r\n    			let context = 1;\r\n    			\r\n    			asker.see(\'read\', key).then(function (representations) {\r\n    				if (representations != null && representations.length > 0) {\r\n					    question[0].representations = representations;\r\n    				    let representation = representations[representations.length - context];\r\n    					type = representation.type;\r\n    					info = representation.info;\r\n    \r\n                        question[0]._type = type;\r\n    					txType.val(type);\r\n    					session.setValue(info, -1);\r\n    					session.getUndoManager().markClean();\r\n    					txType.trigger(\'change\');\r\n	                	resolve(false);\r\n    				}\r\n    				else {\r\n    					asker.see(\'read\', \'EmptyAction\').then(async function (representations) {\r\n    						if (representations != null && representations.length > 0) {\r\n    						    question[0].representations = representations;\r\n    						    let representation = representations[representations.length - 1];\r\n    							type = representation.type;\r\n    							info = representation.info;\r\n    							info = info.replace(new RegExp(\'agent\', \'g\'), await name);\r\n    							info = info.replace(new RegExp(\'EmptyAction\', \'g\'), key);\r\n                                question[0]._type = type;\r\n    							txType.val(type);\r\n    							session.setValue(info, -1);\r\n    							session.getUndoManager().markClean();\r\n    							txType.trigger(\'change\');\r\n    						}\r\n		                    resolve(false);\r\n    					});\r\n    				}\r\n    			});\r\n                resolve(question[0]);\r\n		    });\r\n		});\r\n	};\r\n})();','2021-01-26 23:22:49'),(553,'js','new (function askBind () {\n	this.act = function (args, resolve, reject) {\n	    let agent = this.agent;\n	    let target = args[2];\n	    agent.see(\'askFor\', args).then(function (question) {\n	        let session = question.session;\n            session.removeAllListeners(\'change\');\n            if (target.html() != \'\') {\n                session.setValue(target.html(), -1);\n                session.getUndoManager().markClean();\n            }\n            session.on(\'change\', function() {\n                target.html(session.getValue());\n            });\n		resolve();\n	    });\n	};\n})();','2021-01-26 23:25:19'),(554,'js','new (function askFor () {\r\n	this.act = function (args, resolve, reject) {\r\n		let script = this.agent;\r\n		let asker;\r\n		let key;\r\n		if (typeof args == \'string\') {\r\n    		let list = args.split(\'.\');\r\n    		asker = $(\'.\' + list[0])[0].agent;\r\n    		key = list[1];\r\n		}\r\n		else {\r\n		    asker = args[0];\r\n		    key = args[1];\r\n		}\r\n	    script.see(\'getBody\').then(function (body) {\r\n	        script.see(\'get\', \'parent\').then(function (parent) {\r\n    		    parent.see(\'show\');\r\n    		});\r\n            body.show();\r\n		        \r\n    		script.see(\'get\', \'editor\').then(async function (editor) {\r\n    		    if (editor == null) {\r\n    		        console.warn(\'Editor missing!\');\r\n    				// await script.see(\'appendTo\', \'body\');\r\n    		        return false;\r\n    		    }\r\n    		    editor.removeAllListeners(\'change\');\r\n    		    \r\n		        let txType = body.find(\'input[name=type]\');\r\n    			let totalVersions = body.find(\'.versions > .total\');\r\n		        let questions = body.find(\'.questions\');\r\n		        let question = $(\'<label>\').prependTo(questions);\r\n		        let txName = $(\'<span>\').prependTo(question);\r\n		        question[0].agent = asker;\r\n		        question[0]._key = key;\r\n		        let name = asker.see(\'getNames\');\r\n		        name.then(function (names) {\r\n		            txName.html(names);\r\n		        });\r\n		        let keyInput = $(\'<input>\').appendTo(question);\r\n		        keyInput.val(key);\r\n		        \r\n                const session = ace.createEditSession(\'\', editor.getSession().getMode());\r\n                session.setOption(\'indentedSoftWrap\', false);\r\n        		session.setUseWrapMode(true);\r\n    			session.getUndoManager().markClean();\r\n        		\r\n		        question[0].session = session;\r\n		        let selectQuestion = function (event) {\r\n                    editor.setSession(question[0].session);\r\n		            questions.find(\'.selected\').removeClass(\'selected\');\r\n		            question.addClass(\'selected\');\r\n		            txType.val(question[0]._type);\r\n		            try {\r\n			            totalVersions.html(question[0].representations.length);\r\n		            } catch (e) {}\r\n                };\r\n                question.click(selectQuestion);\r\n                question.trigger(\'click\');\r\n		    \r\n    		    let type = \'\';\r\n    			let info = \'\';\r\n    			let representations;\r\n    			let context = 1;\r\n    			\r\n    			asker.see(\'read\', key).then(function (representations) {\r\n    				if (representations != null && representations.length > 0) {\r\n					    question[0].representations = representations;\r\n    				    let representation = representations[representations.length - context];\r\n    					type = representation.type;\r\n    					info = representation.info;\r\n    \r\n                        question[0]._type = type;\r\n    					txType.val(type);\r\n    					session.setValue(info, -1);\r\n    					session.getUndoManager().markClean();\r\n    					\r\n                        let mode = type;\r\n                        if (mode == \'js\') {\r\n                            mode = \'javascript\';\r\n                        }\r\n                        session.setMode(\'ace/mode/\' + mode);\r\n	                	resolve(false);\r\n    				}\r\n    				else {\r\n    					asker.see(\'read\', \'EmptyAction\').then(async function (representations) {\r\n    						if (representations != null && representations.length > 0) {\r\n    						    question[0].representations = representations;\r\n    						    let representation = representations[representations.length - 1];\r\n    							type = representation.type;\r\n    							info = representation.info;\r\n    							info = info.replace(new RegExp(\'agent\', \'g\'), await name);\r\n    							info = info.replace(new RegExp(\'EmptyAction\', \'g\'), key);\r\n                                question[0]._type = type;\r\n    							txType.val(type);\r\n    							session.setValue(info, -1);\r\n    							session.getUndoManager().markClean();\r\n    							\r\n                                let mode = type;\r\n                                if (mode == \'js\') {\r\n                                    mode = \'javascript\';\r\n                                }\r\n                                session.setMode(\'ace/mode/\' + mode);\r\n    						}\r\n		                    resolve(false);\r\n    					});\r\n    				}\r\n    			});\r\n                resolve(question[0]);\r\n		    });\r\n		});\r\n	};\r\n})();','2021-01-26 23:30:05'),(555,'js','new (function newBody() {\n	this.act = function (args, resolve, reject) {\n		let agent = this.agent;\n		agent.see(\'Element.newBody\', args).then(body => {\n		    agent.see(\'getAgent\', \'Script\').then(a => {\n		        a.see(\'appendTo\', body);\n		        resolve(body);\n		    });\n		    agent.see(\'getAgent\', \'Tools\').then(a => {\n		        a.see(\'appendTo\', body);\n		    });\n		})\n	};\n})();','2021-01-28 15:55:47'),(556,'js','new (function getBody() {\n	this.act = async function (tag, resolve, reject) {\n	    let agent = this.agent;\n	    let body = await agent.see(\'get\', \'body\');\n	    if (!body) {\n	        body = await agent.see(\'newBody\', tag)\n	    }\n	    resolve(body);\n	};\n})();','2021-01-28 16:11:52'),(557,'js','new (function askFor () {\r\n	this.act = function (args, resolve, reject) {\r\n		let script = this.agent;\r\n		let asker;\r\n		let key;\r\n		if (typeof args == \'string\') {\r\n    		let list = args.split(\'.\');\r\n    		asker = $(\'.\' + list[0])[0].agent;\r\n    		key = list[1];\r\n		}\r\n		else {\r\n		    asker = args[0];\r\n		    key = args[1];\r\n		}\r\n	    script.see(\'getBody\').then(function (body) {\r\n	        script.see(\'get\', \'parent\').then(function (parent) {\r\n    		    parent.see(\'show\');\r\n    		});\r\n		        \r\n    		script.see(\'get\', \'editor\').then(async function (editor) {\r\n    		    if (editor == null) {\r\n    		        console.warn(\'Editor missing!\');\r\n    				// await script.see(\'appendTo\', \'body\');\r\n    		        return false;\r\n    		    }\r\n                body.show();\r\n    		    editor.removeAllListeners(\'change\');\r\n    		    \r\n		        let txType = body.find(\'input[name=type]\');\r\n    			let totalVersions = body.find(\'.versions > .total\');\r\n		        let questions = body.find(\'.questions\');\r\n		        let question = $(\'<label>\').prependTo(questions);\r\n		        let txName = $(\'<span>\').prependTo(question);\r\n		        question[0].agent = asker;\r\n		        question[0]._key = key;\r\n		        let name = asker.see(\'getNames\');\r\n		        name.then(function (names) {\r\n		            txName.html(names);\r\n		        });\r\n		        let keyInput = $(\'<input>\').appendTo(question);\r\n		        keyInput.val(key);\r\n		        \r\n                const session = ace.createEditSession(\'\', editor.getSession().getMode());\r\n                session.setOption(\'indentedSoftWrap\', false);\r\n        		session.setUseWrapMode(true);\r\n    			session.getUndoManager().markClean();\r\n        		\r\n		        question[0].session = session;\r\n		        let selectQuestion = function (event) {\r\n                    editor.setSession(question[0].session);\r\n		            questions.find(\'.selected\').removeClass(\'selected\');\r\n		            question.addClass(\'selected\');\r\n		            txType.val(question[0]._type);\r\n		            try {\r\n			            totalVersions.html(question[0].representations.length);\r\n		            } catch (e) {}\r\n                };\r\n                question.click(selectQuestion);\r\n                question.trigger(\'click\');\r\n		    \r\n    		    let type = \'\';\r\n    			let info = \'\';\r\n    			let representations;\r\n    			let context = 1;\r\n    			\r\n    			asker.see(\'read\', key).then(function (representations) {\r\n    				if (representations != null && representations.length > 0) {\r\n					    question[0].representations = representations;\r\n    				    let representation = representations[representations.length - context];\r\n    					type = representation.type;\r\n    					info = representation.info;\r\n    \r\n                        question[0]._type = type;\r\n    					txType.val(type);\r\n    					session.setValue(info, -1);\r\n    					session.getUndoManager().markClean();\r\n    					\r\n                        let mode = type;\r\n                        if (mode == \'js\') {\r\n                            mode = \'javascript\';\r\n                        }\r\n                        session.setMode(\'ace/mode/\' + mode);\r\n	                	resolve(false);\r\n    				}\r\n    				else {\r\n    					asker.see(\'read\', \'EmptyAction\').then(async function (representations) {\r\n    						if (representations != null && representations.length > 0) {\r\n    						    question[0].representations = representations;\r\n    						    let representation = representations[representations.length - 1];\r\n    							type = representation.type;\r\n    							info = representation.info;\r\n    							info = info.replace(new RegExp(\'agent\', \'g\'), await name);\r\n    							info = info.replace(new RegExp(\'EmptyAction\', \'g\'), key);\r\n                                question[0]._type = type;\r\n    							txType.val(type);\r\n    							session.setValue(info, -1);\r\n    							session.getUndoManager().markClean();\r\n    							\r\n                                let mode = type;\r\n                                if (mode == \'js\') {\r\n                                    mode = \'javascript\';\r\n                                }\r\n                                session.setMode(\'ace/mode/\' + mode);\r\n    						}\r\n		                    resolve(false);\r\n    					});\r\n    				}\r\n    			});\r\n                resolve(question[0]);\r\n		    });\r\n		});\r\n	};\r\n})();','2021-01-28 18:50:40'),(558,'js','new (function show() {\n	this.act = function (args, resolve, reject) {\n		var agent = this.agent;\n		agent.see(\'getBody\').then(function (body) {\n		    if (!body) {\n		        body.show();\n		    }\n		    resolve();\n		});\n	};\n})();','2021-01-28 18:57:12'),(559,'js','new (function askFor () {\r\n	this.act = function (args, resolve, reject) {\r\n		let script = this.agent;\r\n		let asker;\r\n		let key;\r\n		if (typeof args == \'string\') {\r\n    		let list = args.split(\'.\');\r\n    		asker = $(\'.\' + list[0])[0].agent;\r\n    		key = list[1];\r\n		}\r\n		else {\r\n		    asker = args[0];\r\n		    key = args[1];\r\n		}\r\n	    script.see(\'getBody\').then(function (body) {\r\n    		script.see(\'get\', \'editor\').then(async function (editor) {\r\n    		    if (editor == null) {\r\n    		        console.warn(\'Editor missing!\');\r\n    				// await script.see(\'appendTo\', \'body\');\r\n    		        return false;\r\n    		    }\r\n    		    \r\n    	        script.see(\'get\', \'parent\').then(function (parent) {\r\n        		    parent.see(\'show\');\r\n        		});\r\n                body.show();\r\n                \r\n    		    editor.removeAllListeners(\'change\');\r\n    		    \r\n		        let txType = body.find(\'input[name=type]\');\r\n    			let totalVersions = body.find(\'.versions > .total\');\r\n		        let questions = body.find(\'.questions\');\r\n		        let question = $(\'<label>\').prependTo(questions);\r\n		        let txName = $(\'<span>\').prependTo(question);\r\n		        question[0].agent = asker;\r\n		        question[0]._key = key;\r\n		        let name = asker.see(\'getNames\');\r\n		        name.then(function (names) {\r\n		            txName.html(names);\r\n		        });\r\n		        let keyInput = $(\'<input>\').appendTo(question);\r\n		        keyInput.val(key);\r\n		        \r\n                const session = ace.createEditSession(\'\', editor.getSession().getMode());\r\n                session.setOption(\'indentedSoftWrap\', false);\r\n        		session.setUseWrapMode(true);\r\n    			session.getUndoManager().markClean();\r\n        		\r\n		        question[0].session = session;\r\n		        let selectQuestion = function (event) {\r\n                    editor.setSession(question[0].session);\r\n		            questions.find(\'.selected\').removeClass(\'selected\');\r\n		            question.addClass(\'selected\');\r\n		            txType.val(question[0]._type);\r\n		            try {\r\n			            totalVersions.html(question[0].representations.length);\r\n		            } catch (e) {}\r\n                };\r\n                question.click(selectQuestion);\r\n                question.trigger(\'click\');\r\n		    \r\n    		    let type = \'\';\r\n    			let info = \'\';\r\n    			let representations;\r\n    			let context = 1;\r\n    			\r\n    			asker.see(\'read\', key).then(function (representations) {\r\n    				if (representations != null && representations.length > 0) {\r\n					    question[0].representations = representations;\r\n    				    let representation = representations[representations.length - context];\r\n    					type = representation.type;\r\n    					info = representation.info;\r\n    \r\n                        question[0]._type = type;\r\n    					txType.val(type);\r\n    					session.setValue(info, -1);\r\n    					session.getUndoManager().markClean();\r\n    					\r\n                        let mode = type;\r\n                        if (mode == \'js\') {\r\n                            mode = \'javascript\';\r\n                        }\r\n                        session.setMode(\'ace/mode/\' + mode);\r\n	                	resolve(false);\r\n    				}\r\n    				else {\r\n    					asker.see(\'read\', \'EmptyAction\').then(async function (representations) {\r\n    						if (representations != null && representations.length > 0) {\r\n    						    question[0].representations = representations;\r\n    						    let representation = representations[representations.length - 1];\r\n    							type = representation.type;\r\n    							info = representation.info;\r\n    							info = info.replace(new RegExp(\'agent\', \'g\'), await name);\r\n    							info = info.replace(new RegExp(\'EmptyAction\', \'g\'), key);\r\n                                question[0]._type = type;\r\n    							txType.val(type);\r\n    							session.setValue(info, -1);\r\n    							session.getUndoManager().markClean();\r\n    							\r\n                                let mode = type;\r\n                                if (mode == \'js\') {\r\n                                    mode = \'javascript\';\r\n                                }\r\n                                session.setMode(\'ace/mode/\' + mode);\r\n    						}\r\n		                    resolve(false);\r\n    					});\r\n    				}\r\n    			});\r\n                resolve(question[0]);\r\n		    });\r\n		});\r\n	};\r\n})();','2021-01-28 18:57:45'),(560,'string','Tools','2021-01-28 18:59:56'),(561,'html','<button onclick=\"getAgent(this).see(\'add\');\">+</button>','2021-01-28 18:59:56'),(562,'js','new (function live () {\r\n	this.act = async function (args, resolve, reject) {\r\n		let agent = this.agent;\r\n		await agent.see(\'addName\', \'Tools Element\');\r\n		let response = await agent.see(\'Element.live\', args);\r\n		await agent.see(\'study\', \'newButton\');\r\n    	let buttons = await agent.see(\'getButtons\');\r\n	    \r\n	    for (let text in JSON.parse(buttons)) {\r\n	        agent.see(\'newButton\', [text, buttons[text]]);\r\n	    }\r\n	    \r\n		resolve(response);\r\n	};\r\n})();','2021-01-28 19:06:19'),(563,'js','new (function live () {\r\n	this.act = async function (args, resolve, reject) {\r\n		let agent = this.agent;\r\n		await agent.see(\'addName\', \'Tools Element\');\r\n		let response = await agent.see(\'Element.live\', args);\r\n		await agent.see(\'study\', \'newButton\');\r\n    	let buttonsText = await agent.see(\'getButtons\');\r\n    	if (buttonsText) {\r\n    	    let buttons = JSON.parse(buttonsText);\r\n    	    for (let text in buttons) {\r\n    	        agent.see(\'newButton\', [text, buttons[text]]);\r\n    	    }\r\n    	}\r\n	    \r\n		resolve(response);\r\n	};\r\n})();','2021-01-28 19:17:25'),(564,'string','getButtons','2021-01-28 20:33:10'),(565,'js','{\"page\":\"addPage\",\"div\":\"addDiv\",\"form\":\"addForm\",\"input\":\"addInput\",\"submit\":\"addSubmit\",\"agent\":\"newAgentClick\",\"suggestions\":\"suggestionClick\"}','2021-01-28 20:33:10'),(566,'string','{\"page\":\"addPage\",\"div\":\"addDiv\",\"form\":\"addForm\",\"input\":\"addInput\",\"submit\":\"addSubmit\",\"agent\":\"newAgentClick\",\"suggestions\":\"suggestionClick\"}','2021-01-28 20:33:45'),(567,'string','newButton','2021-01-28 20:37:07'),(568,'js','new (function newButton () {\r\n	this.act = function (args, resolve, reject) {\r\n	    var text = args[0];\r\n	    var functionName = args[1];\r\n		var agent = this.agent;\r\n	    \r\n	    if (true == args[2]) {\r\n	        agent.see(\'getButtons\').then(function (buttons) {\r\n	            buttons = JSON.parse(buttons);\r\n	            buttons[text] = functionName;\r\n	            agent.see(\'write\', [\'getButtons\', JSON.stringify(buttons)]);\r\n	        });\r\n	    }\r\n	    \r\n		agent.see(\'getBody\').then(function (body) {\r\n		    agent.see(\'get\', \'parent\').then(function (parent) {\r\n    		    var bt = $(\'<button>\').appendTo(body);\r\n    		    bt.text(text);\r\n    		    bt.click(function (event) {\r\n    		        event.preventDefault();\r\n    		        if (!event.ctrlKey) {\r\n    		            parent.see(functionName);\r\n    		        }\r\n    		        else {\r\n    		            parent.see(\'ask\', functionName);\r\n    		        }\r\n    		    });\r\n		    });\r\n		});\r\n		\r\n		resolve(true);\r\n	};\r\n})();','2021-01-28 20:37:07'),(569,'string','add','2021-01-29 11:58:28'),(570,'js','new (function add () {\r\n	this.act = function (args, callback) {\r\n		var agent = this.agent;\r\n		agent.see(\'getBody\').then(function (body) {\r\n		    var form = $(\'<form>\').appendTo(body);\r\n		    var text = $(\'<input name=\"text\" placeholder=\"Button text\" />\').appendTo(form);\r\n		    var functionName = $(\'<input name=\"function\" placeholder=\"Function name\" />\').appendTo(form);\r\n		    var btOk = $(\'<input type=\"submit\" />\').appendTo(form);\r\n		    var btCancel = $(\'<input type=\"reset\" />\').appendTo(form);\r\n		    form.submit(function () {\r\n		        agent.see(\'newButton\', [text.val(), functionName.val(), true]);\r\n		        form.remove();\r\n		        return false;\r\n		    });\r\n		    btCancel.click(function () {\r\n		        form.remove();\r\n		    });\r\n		});\r\n		callback(true); // return statement\r\n	};\r\n})();','2021-01-29 11:58:28'),(571,'js','new (function newBody() {\n	this.act = function (args, resolve, reject) {\n		let agent = this.agent;\n		agent.see(\'Element.newBody\', args).then(body => {\n		    agent.see(\'getAgent\', \'Script\').then(a => {\n		        a.see(\'appendTo\', body);\n		        resolve(body);\n    		    agent.see(\'getAgent\', \'Tools\').then(a => {\n    		        a.see(\'appendTo\', body);\n    		    });\n		    });\n		});\n	};\n})();','2021-01-29 13:33:26'),(572,'js','new (function newBody() {\n	this.act = async function (args, resolve, reject) {\n		let agent = this.agent;\n		let body = await agent.see(\'Element.newBody\', args);\n		resolve(body);\n		    \n    	let buttonsText = await agent.see(\'getButtons\');\n    	if (buttonsText) {\n    	    let buttons = JSON.parse(buttonsText);\n    	    for (let text in buttons) {\n    	        agent.see(\'newButton\', [text, buttons[text]]);\n    	    }\n    	}\n	};\n})();','2021-01-29 13:37:32'),(573,'js','new (function live () {\r\n	this.act = async function (args, resolve, reject) {\r\n		let agent = this.agent;\r\n		await agent.see(\'addName\', \'Tools Element\');\r\n		let response = await agent.see(\'Element.live\', args);\r\n		await agent.see(\'study\', \'newButton\');\r\n	    \r\n		resolve(response);\r\n	};\r\n})();','2021-01-29 13:40:38'),(574,'js','new (function live () {\r\n	this.act = async function (args, resolve, reject) {\r\n		let agent = this.agent;\r\nconsole.log(\'Tools.live\', agent.toString());\r\n		await agent.see(\'addName\', \'Tools Element\');\r\n		let response = await agent.see(\'Element.live\', args);\r\n		await agent.see(\'study\', \'newButton\');\r\n	    \r\n		resolve(response);\r\n	};\r\n})();','2021-01-29 13:43:06'),(575,'string','NovoPage/CE','2021-01-29 13:48:59'),(576,'js','new (function newBody() {\n	this.act = function (args, resolve, reject) {\n		let agent = this.agent;\n		agent.see(\'Element.newBody\', args).then(body => {\n		    agent.see(\'getAgent\', \'Script\').then(a => {\n		        a.see(\'appendTo\', body);\n		        resolve(body);\n    		    agent.see(\'getAgent\', \'Tools\').then(a => {\n    		        a.see(\'appendTo\', body);\n    		    });\n    		    agent.see(\'getAgent\', \'A Element\').then(a => {\n    		        a.see(\'appendTo\', body);\n    		        a.see(\'editHtml\');\n    		    });\n		    });\n		});\n	};\n})();','2021-01-29 13:48:59'),(577,'js','new (function newBody() {\n	this.act = function (args, resolve, reject) {\n		let agent = this.agent;\n		agent.see(\'Element.newBody\', args).then(body => {\n		    agent.see(\'getAgent\', \'Script\').then(script => {\n		        script.see(\'appendTo\', body);\n		        resolve(body);\n    		    agent.see(\'getAgent\', \'Tools\').then(a => {\n    		        a.see(\'appendTo\', body);\n    		    });\n    		    agent.see(\'getAgent\', \'A Element\').then(async a => {\n    		        await a.see(\'appendTo\', body);\n    		        a.see(\'editHtml\');\n    		    });\n		    });\n		});\n	};\n})();','2021-01-29 13:51:00'),(578,'js','new (function onNewAgent() {\n	this.act = function (args, resolve, reject) {\n		var ce = this.agent;\n		ce.see(\'getBody\').then(async function (body) {\n			var select = body.find(\'select\');\n			select.empty();\n			var agents = (await Ceed()).agents;\n			var names = [];\n			\n			for (var i in agents) {\n			    try {\n    			    let agent = await agents[i][0];\n    			    await agent.see(\'getNames\').then(name => {\n    			        if (!names.includes(name)) {\n    			            names.push(name);\n            			    let option = $(\'<option>\');\n            				option[0].agent = agent;\n        					option.text(name);\n            				select.prepend(option);\n    			        }\n    				});\n			    } catch {}\n			}\n			\n		});\n		resolve();\n	};\n})();','2021-01-29 13:59:45'),(579,'js','new (function onNewAgent() {\n	this.act = function (args, resolve, reject) {\n		var ce = this.agent;\n		ce.see(\'getBody\').then(async function (body) {\n			var select = body.find(\'select\');\n			select.empty();\n			var agents = (await Ceed()).agents;\n			var names = [];\n			\n			for (var i in agents) {\n			    try {\n    			    let agent = await agents[i][0];\n    			    let name = await agent.see(\'getNames\');\n			        if (!names.includes(name)) {\n			            names.push(name);\n        			    let option = $(\'<option>\');\n        				option[0].agent = agent;\n    					option.text(name);\n        				select.prepend(option);\n			        }\n			    } catch {}\n			}\n			\n		});\n		resolve();\n	};\n})();','2021-01-29 14:01:22'),(580,'html','<!DOCTYPE html>\r\n<html>\r\n<head>\r\n	<title>LEA - Live Environment for Agents</title>\r\n	<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\" />\r\n	<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\r\n	<script src=\"/socket.io/socket.io.js\"></script>\r\n	<script type=\"module\">\r\n	import {Ceed, AskAgent} from  \'<%=baseUrl%>_js/ceed/ceed.js\';\r\n	import {SocketAgent} from  \'<%=baseUrl%>_js/agents/lea_client.js\';\r\n	import {SocketBrain} from  \'<%=baseUrl%>_js/ceed/socket_brain.js\';\r\n	window.Ceed = Ceed;\r\n	window.SocketAgent = SocketAgent;\r\n	window.AskAgent = AskAgent;\r\n	window.baseUrl = \'<%=baseUrl%>\';\r\n\r\n	var pathname = window.location.pathname.split(\'/\');\r\n	let paths = pathname.slice(1);\r\n    let controllerName = paths[0];\r\n    let agentName = paths.join(\'/\') + \'Page Page\';\r\n	$(function() {\r\n		Ceed().then(ceed => {\r\n		    let ask = new AskAgent(\'CE\');\r\n			ceed.see(\'set\', [\'ask\', ask]);\r\n			ceed.skills[\'ask\'] = ask;\r\n			ceed.see(\'setLibrary\', new SocketBrain(io());\r\n			\r\n			Ceed(agentName).then(async agent => {\r\n				window.agent = agent;\r\n				agent.see(\'appendTo\', \'body\');\r\n				\r\n				agent.see(\'getAgent\', \'CE\').then(async ce => {\r\n        		    await ce.see(\'appendTo\', \'body\');\r\n            		agent.see(\'edit\');\r\n            		\r\n        			ceed.see(\'connect\');\r\n        			ceed.see(\'getSocketAgent\', controllerName + \'Controller\');\r\n        		});\r\n			});\r\n			\r\n		});\r\n	});\r\n	</script>\r\n	<style>\r\n	#auth {\r\n        position: sticky;\r\n        top: 0;\r\n        text-align: right;\r\n    }\r\n    \r\n    #license {\r\n        position: fixed;\r\n        bottom: 8px;\r\n        right: 8px;\r\n        text-align: right;\r\n        width: 420px;\r\n    }\r\n    body {\r\n        padding-bottom: 75px;\r\n    }\r\n	</style>\r\n</head>\r\n<body>\r\n    <div id=\"auth\">\r\n    </div>\r\n    <div id=\"license\">\r\n        <b><a target=\"_blank\" href=\"https://tiia.com.br/\">LEA - Live Environment for Agents</a></b> by <a href=\"mailto: macaroots@gmail.com\">Renato Lenz Costalima</a><br />\r\n        This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0. If a copy of the MPL was not distributed with this file, You can obtain one at <a rel=\"license\" href=\"https://mozilla.org/MPL/2.0/\">https://mozilla.org/MPL/2.0/</a>.\r\n    </div>\r\n</body>\r\n</html>','2021-07-02 21:09:52'),(581,'html','<!DOCTYPE html>\r\n<html>\r\n<head>\r\n	<title>LEA - Live Environment for Agents</title>\r\n	<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\" />\r\n	<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\r\n	<script src=\"/socket.io/socket.io.js\"></script>\r\n	<script type=\"module\">\r\n	import {Ceed, AskAgent} from  \'<%=baseUrl%>_js/ceed/ceed.js\';\r\n	import {SocketAgent} from  \'<%=baseUrl%>_js/agents/lea_client.js\';\r\n	import {SocketBrain} from  \'<%=baseUrl%>_js/ceed/socket_brain.js\';\r\n	window.Ceed = Ceed;\r\n	window.SocketAgent = SocketAgent;\r\n	window.AskAgent = AskAgent;\r\n	window.baseUrl = \'<%=baseUrl%>\';\r\n\r\n	var pathname = window.location.pathname.split(\'/\');\r\n	let paths = pathname.slice(1);\r\n    let controllerName = paths[0];\r\n    let agentName = paths.join(\'/\') + \'Page Page\';\r\n	$(function() {\r\n		Ceed().then(ceed => {\r\n		    let ask = new AskAgent(\'CE\');\r\n			ceed.see(\'set\', [\'ask\', ask]);\r\n			ceed.skills[\'ask\'] = ask;\r\n			ceed.see(\'setLibrary\', new SocketBrain(io()));\r\n			\r\n			Ceed(agentName).then(async agent => {\r\n				window.agent = agent;\r\n				agent.see(\'appendTo\', \'body\');\r\n				\r\n				agent.see(\'getAgent\', \'CE\').then(async ce => {\r\n        		    await ce.see(\'appendTo\', \'body\');\r\n            		agent.see(\'edit\');\r\n            		\r\n        			ceed.see(\'connect\');\r\n        			ceed.see(\'getSocketAgent\', controllerName + \'Controller\');\r\n        		});\r\n			});\r\n			\r\n		});\r\n	});\r\n	</script>\r\n	<style>\r\n	#auth {\r\n        position: sticky;\r\n        top: 0;\r\n        text-align: right;\r\n    }\r\n    \r\n    #license {\r\n        position: fixed;\r\n        bottom: 8px;\r\n        right: 8px;\r\n        text-align: right;\r\n        width: 420px;\r\n    }\r\n    body {\r\n        padding-bottom: 75px;\r\n    }\r\n	</style>\r\n</head>\r\n<body>\r\n    <div id=\"auth\">\r\n    </div>\r\n    <div id=\"license\">\r\n        <b><a target=\"_blank\" href=\"https://tiia.com.br/\">LEA - Live Environment for Agents</a></b> by <a href=\"mailto: macaroots@gmail.com\">Renato Lenz Costalima</a><br />\r\n        This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0. If a copy of the MPL was not distributed with this file, You can obtain one at <a rel=\"license\" href=\"https://mozilla.org/MPL/2.0/\">https://mozilla.org/MPL/2.0/</a>.\r\n    </div>\r\n</body>\r\n</html>','2021-07-02 21:10:21'),(582,'html','<!DOCTYPE html>\r\n<html>\r\n<head>\r\n	<title>LEA - Live Environment for Agents</title>\r\n	<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\" />\r\n	<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\r\n	<script src=\"/socket.io/socket.io.js\"></script>\r\n	<script type=\"module\">\r\n	import {Ceed, AskAgent} from  \'<%=baseUrl%>_js/ceed/ceed.js\';\r\n	import {SocketAgent} from  \'<%=baseUrl%>_js/agents/agent.js\';\r\n	import {SocketBrain} from  \'<%=baseUrl%>_js/ceed/socket_brain.js\';\r\n	window.Ceed = Ceed;\r\n	window.SocketAgent = SocketAgent;\r\n	window.AskAgent = AskAgent;\r\n	window.baseUrl = \'<%=baseUrl%>\';\r\n\r\n	var pathname = window.location.pathname.split(\'/\');\r\n	let paths = pathname.slice(1);\r\n    let controllerName = paths[0];\r\n    let agentName = paths.join(\'/\') + \'Page Page\';\r\n	$(function() {\r\n		Ceed().then(ceed => {\r\n		    let ask = new AskAgent(\'CE\');\r\n			ceed.see(\'set\', [\'ask\', ask]);\r\n			ceed.skills[\'ask\'] = ask;\r\n			ceed.see(\'setLibrary\', new SocketBrain(io()));\r\n			\r\n			Ceed(agentName).then(async agent => {\r\n				window.agent = agent;\r\n				agent.see(\'appendTo\', \'body\');\r\n				\r\n				agent.see(\'getAgent\', \'CE\').then(async ce => {\r\n        		    await ce.see(\'appendTo\', \'body\');\r\n            		agent.see(\'edit\');\r\n            		\r\n        			ceed.see(\'connect\');\r\n        			ceed.see(\'getSocketAgent\', controllerName + \'Controller\');\r\n        		});\r\n			});\r\n			\r\n		});\r\n	});\r\n	</script>\r\n	<style>\r\n	#auth {\r\n        position: sticky;\r\n        top: 0;\r\n        text-align: right;\r\n    }\r\n    \r\n    #license {\r\n        position: fixed;\r\n        bottom: 8px;\r\n        right: 8px;\r\n        text-align: right;\r\n        width: 420px;\r\n    }\r\n    body {\r\n        padding-bottom: 75px;\r\n    }\r\n	</style>\r\n</head>\r\n<body>\r\n    <div id=\"auth\">\r\n    </div>\r\n    <div id=\"license\">\r\n        <b><a target=\"_blank\" href=\"https://tiia.com.br/\">LEA - Live Environment for Agents</a></b> by <a href=\"mailto: macaroots@gmail.com\">Renato Lenz Costalima</a><br />\r\n        This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0. If a copy of the MPL was not distributed with this file, You can obtain one at <a rel=\"license\" href=\"https://mozilla.org/MPL/2.0/\">https://mozilla.org/MPL/2.0/</a>.\r\n    </div>\r\n</body>\r\n</html>','2021-07-02 21:34:10'),(583,'html','<!DOCTYPE html>\r\n<html>\r\n<head>\r\n	<title>LEA - Live Environment for Agents</title>\r\n	<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\" />\r\n	<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\r\n	<script src=\"/socket.io/socket.io.js\"></script>\r\n	<script type=\"module\">\r\n	import {Ceed, AskAgent} from  \'<%=baseUrl%>_js/ceed/ceed.js\';\r\n	import {SocketAgent} from  \'<%=baseUrl%>_js/ceed/agent.js\';\r\n	import {SocketBrain} from  \'<%=baseUrl%>_js/ceed/socket_brain.js\';\r\n	window.Ceed = Ceed;\r\n	window.SocketAgent = SocketAgent;\r\n	window.AskAgent = AskAgent;\r\n	window.baseUrl = \'<%=baseUrl%>\';\r\n\r\n	var pathname = window.location.pathname.split(\'/\');\r\n	let paths = pathname.slice(1);\r\n    let controllerName = paths[0];\r\n    let agentName = paths.join(\'/\') + \'Page Page\';\r\n	$(function() {\r\n		Ceed().then(ceed => {\r\n		    let ask = new AskAgent(\'CE\');\r\n			ceed.see(\'set\', [\'ask\', ask]);\r\n			ceed.skills[\'ask\'] = ask;\r\n			ceed.see(\'setLibrary\', new SocketBrain(io()));\r\n			\r\n			Ceed(agentName).then(async agent => {\r\n				window.agent = agent;\r\n				agent.see(\'appendTo\', \'body\');\r\n				\r\n				agent.see(\'getAgent\', \'CE\').then(async ce => {\r\n        		    await ce.see(\'appendTo\', \'body\');\r\n            		agent.see(\'edit\');\r\n            		\r\n        			ceed.see(\'connect\');\r\n        			ceed.see(\'getSocketAgent\', controllerName + \'Controller\');\r\n        		});\r\n			});\r\n			\r\n		});\r\n	});\r\n	</script>\r\n	<style>\r\n	#auth {\r\n        position: sticky;\r\n        top: 0;\r\n        text-align: right;\r\n    }\r\n    \r\n    #license {\r\n        position: fixed;\r\n        bottom: 8px;\r\n        right: 8px;\r\n        text-align: right;\r\n        width: 420px;\r\n    }\r\n    body {\r\n        padding-bottom: 75px;\r\n    }\r\n	</style>\r\n</head>\r\n<body>\r\n    <div id=\"auth\">\r\n    </div>\r\n    <div id=\"license\">\r\n        <b><a target=\"_blank\" href=\"https://tiia.com.br/\">LEA - Live Environment for Agents</a></b> by <a href=\"mailto: macaroots@gmail.com\">Renato Lenz Costalima</a><br />\r\n        This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0. If a copy of the MPL was not distributed with this file, You can obtain one at <a rel=\"license\" href=\"https://mozilla.org/MPL/2.0/\">https://mozilla.org/MPL/2.0/</a>.\r\n    </div>\r\n</body>\r\n</html>','2021-07-02 21:44:32'),(584,'html','<!-- LEA - Live Environment for Agents\n   - by Renato Lenz Costalima\n   - This Source Code Form is subject to the terms of the Mozilla Public\n   - License, v. 2.0. If a copy of the MPL was not distributed with this\n   - file, You can obtain one at https://mozilla.org/MPL/2.0/. -->\n<header>\n    <img src=\"/favicon.ico\" />\n    <h1>Título da página</h1>\n    <nav>\n        <ul>\n            <li>\n                <a href=\"#\">Início</a>\n                <ul>\n                    <li><a href=\"#secao1\">Edição ao vivo</a></li>\n                    <li><a href=\"#secao2\">Edição assistida por agentes</a></li>\n                    <li><a href=\"#secaoForm\">Formulário</a></li>\n                </ul>\n            </li>\n            <li><a href=\"#\">Sobre</a></li>\n            <li><a href=\"#\">Contato</a></li>\n        </ul>\n    </nav>\n</header>\n<main>\n    <section id=\"secao1\">\n        <h1>Título da seção</h1>\n        \n        <p>Primeiro parágrafo começa aqui.</p>\n        \n        <p>Usa o <b>editor ao lado</b> para editar HTML (\"getHtml\" - estrutura e conteúdo), Javascript (\"onLoad\" - interação com usuário) e CSS (\"getCss\" - visual).</p>\n        \n        <p>Desculpa, isto é um protótipo. Se as letras não estiverem aparecendo, alterna entre as <input value=\"caixas de texto\" size=\"10\"> do editor.</p>\n        \n    </section>\n    <section id=\"secao2\">\n        <h1>Edição ao vivo/assistida por agentes</h1>\n        <p>Experimenta também a <b>edição assistida por agentes</b>, direcionando eventos do DOM para um agente, por exemplo:</p>\n        <pre>&lt;button onclick=\"getAgent(this).see(\'novaAcao\', \'args\');\"&gt;Clique para definir uma ação&lt;/button&gt;</pre>\n        <button onclick=\"getAgent(this).see(\'novaAcao\', \'args\');\">Clique para definir uma ação</button>\n    </section>\n    <section id=\"secaoForm\">\n        <h1>Exemplo de formulário</h1>\n        <form id=\"formExemplo\" onsubmit=\"getAgent(this).see(\'onSubmit\', this); return false;\">\n            <p>Formulários permitem receber do usuário vários tipos de dados.</p>\n            <label>\n                <span>\n                   Texto\n                </span>\n                <input name=\"texto\" type=\"text\">\n            </label>\n            <label>\n                <span>\n                   Número\n                </span>\n                <input name=\"numero\" type=\"number\">\n            </label>\n            <label>\n                <span>\n                   Data\n                </span>\n                <input name=\"data\" type=\"date\">\n            </label>\n            <label>\n                <span>\n                   Parágrafo\n                </span>\n                <textarea name=\"paragrafo\"></textarea>\n            </label>\n            <input type=\"submit\">\n        </form>\n    </section>\n</main>\n<aside>\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean ut arcu dolor.\n</aside>\n<footer>\n    Rodapé da página\n</footer>','2021-07-02 22:34:05'),(585,'html','<!DOCTYPE html>\r\n<html>\r\n<head>\r\n	<title>LEA - Live Environment for Agents</title>\r\n	<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\" />\r\n	<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\r\n	<script src=\"/socket.io/socket.io.js\"></script>\r\n	\r\n	<meta name=\"google-signin-client_id\" content=\"1058560848585-k19ome8pfq3ddmr8mut359257em0vg52.apps.googleusercontent.com\">\r\n	<script src=\"https://apis.google.com/js/platform.js\" async defer></script>\r\n	\r\n	<script type=\"module\">\r\n	import {Ceed, AskAgent} from  \'<%=baseUrl%>_js/ceed/ceed.js\';\r\n	import {SocketAgent} from  \'<%=baseUrl%>_js/ceed/agent.js\';\r\n	import {SocketBrain} from  \'<%=baseUrl%>_js/ceed/socket_brain.js\';\r\n	window.Ceed = Ceed;\r\n	window.SocketAgent = SocketAgent;\r\n	window.AskAgent = AskAgent;\r\n	window.baseUrl = \'<%=baseUrl%>\';\r\n\r\n	var pathname = window.location.pathname.split(\'/\');\r\n	let paths = pathname.slice(1);\r\n    let controllerName = paths[0];\r\n    let agentName = paths.join(\'/\') + \'Page Page\';\r\n	$(function() {\r\n		Ceed().then(ceed => {\r\n		    let ask = new AskAgent(\'CE\');\r\n			ceed.see(\'set\', [\'ask\', ask]);\r\n			ceed.skills[\'ask\'] = ask;\r\n			ceed.see(\'setLibrary\', new SocketBrain(io()));\r\n			\r\n			Ceed(agentName).then(async agent => {\r\n				window.agent = agent;\r\n				agent.see(\'appendTo\', \'body\');\r\n				\r\n				agent.see(\'getAgent\', \'CE\').then(async ce => {\r\n        		    await ce.see(\'appendTo\', \'body\');\r\n            		agent.see(\'edit\');\r\n            		\r\n        			ceed.see(\'connect\');\r\n        			ceed.see(\'getSocketAgent\', controllerName + \'Controller\');\r\n        		});\r\n			});\r\n			\r\n		});\r\n	});\r\n	</script>\r\n    <script>\r\n	window.clicked = false;\r\n	function onSignIn(googleUser) {\r\n        window.agent.then(a => a.see(\'signIn\', googleUser));\r\n    }\r\n    window.onclick = function () {\r\n        window.clicked = true;\r\n    };\r\n    \r\n    function signOut() {\r\n        window.agent.then(a => a.see(\'signOut\'));\r\n    }\r\n	</script>\r\n	<style>\r\n	#auth {\r\n        position: sticky;\r\n        top: 0;\r\n        text-align: right;\r\n    }\r\n    \r\n    #license {\r\n        position: fixed;\r\n        bottom: 8px;\r\n        right: 8px;\r\n        text-align: right;\r\n        width: 420px;\r\n    }\r\n    body {\r\n        padding-bottom: 75px;\r\n    }\r\n	</style>\r\n</head>\r\n<body>\r\n    <form id=\"google\" action=\"//tiia.com.br/LEA/ce/auth/googleLogin\" method=\"post\">\r\n        <input name=\"id\" id=\"id\" type=\"hidden\" />\r\n    </form>\r\n    <p class=\"license\">\r\n        <h1>LEA - Live Environment for Agents</h1>\r\n        by <a href=\"mailto: macaroots@gmail.com\">Renato Lenz Costalima</a><br>\r\n        This Source Code Form is <a rel=\"license\" href=\"https://github.com/macaroots/LEAjs.git\">available</a> subject to the terms of the <a rel=\"license\" href=\"https://github.com/macaroots/LEAjs/blob/main/LICENSE\">GNU Affero General Public License v3.0</a>.\r\n    </p>\r\n    \r\n    <p>By logging in, you agree with the <a href=\"/LEA/ce/termos\" target=\"_blank\">Terms & Conditions</a>.</p>\r\n       \r\n    <div>\r\n        <div class=\"g-signin2\" data-onsuccess=\"onSignIn\"></div>\r\n        \r\n        <a class=\"g-signout2\" href=\"#\" onclick=\"signOut();\">Sign out</a>\r\n    </div>\r\n    \r\n    <div id=\"license\">\r\n        <b><a target=\"_blank\" href=\"https://tiia.com.br/\">LEA - Live Environment for Agents</a></b> by <a href=\"mailto: macaroots@gmail.com\">Renato Lenz Costalima</a><br />\r\n        This Source Code Form is <a rel=\"license\" href=\"https://github.com/macaroots/LEAjs.git\">available</a> subject to the terms of the <a rel=\"license\" href=\"https://github.com/macaroots/LEAjs/blob/main/LICENSE\">GNU Affero General Public License v3.0</a>.\r\n    </div>\r\n</body>\r\n</html>','2021-07-02 23:00:10'),(586,'html','<!DOCTYPE html>\r\n<html>\r\n<head>\r\n	<title>LEA - Live Environment for Agents</title>\r\n	<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\" />\r\n	<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\r\n	<script src=\"/socket.io/socket.io.js\"></script>\r\n	\r\n	<meta name=\"google-signin-client_id\" content=\"1058560848585-k19ome8pfq3ddmr8mut359257em0vg52.apps.googleusercontent.com\">\r\n	<script src=\"https://apis.google.com/js/platform.js\" async defer></script>\r\n	\r\n	<script type=\"module\">\r\n	import {Ceed, AskAgent} from  \'<%=baseUrl%>_js/ceed/ceed.js\';\r\n	import {SocketAgent} from  \'<%=baseUrl%>_js/ceed/agent.js\';\r\n	import {SocketBrain} from  \'<%=baseUrl%>_js/ceed/socket_brain.js\';\r\n	window.Ceed = Ceed;\r\n	window.SocketAgent = SocketAgent;\r\n	window.AskAgent = AskAgent;\r\n	window.baseUrl = \'<%=baseUrl%>\';\r\n\r\n	var pathname = window.location.pathname.split(\'/\');\r\n	let paths = pathname.slice(1);\r\n    let controllerName = paths[0];\r\n    let agentName = paths.join(\'/\') + \'Page Page\';\r\n	$(function() {\r\n		Ceed().then(ceed => {\r\n		    let ask = new AskAgent(\'CE\');\r\n			ceed.see(\'set\', [\'ask\', ask]);\r\n			ceed.skills[\'ask\'] = ask;\r\n			ceed.see(\'setLibrary\', new SocketBrain(io()));\r\n			\r\n			Ceed(agentName).then(async agent => {\r\n				window.agent = agent;\r\n				agent.see(\'appendTo\', \'body\');\r\n				\r\n				agent.see(\'getAgent\', \'CE\').then(async ce => {\r\n        		    await ce.see(\'appendTo\', \'body\');\r\n            		agent.see(\'edit\');\r\n            		\r\n        			ceed.see(\'connect\');\r\n        			ceed.see(\'getSocketAgent\', controllerName + \'Controller\');\r\n        		});\r\n			});\r\n			\r\n		});\r\n	});\r\n	</script>\r\n    <script>\r\n	window.clicked = false;\r\n	function onSignIn(googleUser) {\r\n        window.agent.then(a => a.see(\'signIn\', googleUser));\r\n    }\r\n    window.onclick = function () {\r\n        window.clicked = true;\r\n    };\r\n    \r\n    function signOut() {\r\n        window.agent.then(a => a.see(\'signOut\'));\r\n    }\r\n	</script>\r\n	<style>\r\n	#auth {\r\n        position: sticky;\r\n        top: 0;\r\n        text-align: right;\r\n    }\r\n    \r\n    #license {\r\n        position: fixed;\r\n        bottom: 8px;\r\n        right: 8px;\r\n        text-align: right;\r\n        width: 420px;\r\n    }\r\n    body {\r\n        padding-bottom: 75px;\r\n    }\r\n	</style>\r\n</head>\r\n<body>\r\n    <form id=\"google\" action=\"//tiia.com.br/LEA/ce/auth/googleLogin\" method=\"post\">\r\n        <input name=\"id\" id=\"id\" type=\"hidden\" />\r\n    </form>\r\n    <header>\r\n        <img src=\"/favicon.ico\" />\r\n        <h1>LEA - Live Environment for Agents</h1>\r\n        by <a href=\"mailto: macaroots@gmail.com\">Renato Lenz Costalima</a>\r\n    </header>\r\n    <p class=\"license\">\r\n        This Source Code Form is <a rel=\"license\" href=\"https://github.com/macaroots/LEAjs.git\">available</a> subject to the terms of the <a rel=\"license\" href=\"https://github.com/macaroots/LEAjs/blob/main/LICENSE\">GNU Affero General Public License v3.0</a>.\r\n    </p>\r\n    \r\n    <p>By logging in, you agree with the <a href=\"/LEA/ce/termos\" target=\"_blank\">Terms & Conditions</a>.</p>\r\n       \r\n    <div>\r\n        <div class=\"g-signin2\" data-onsuccess=\"onSignIn\"></div>\r\n        \r\n        <a class=\"g-signout2\" href=\"#\" onclick=\"signOut();\">Sign out</a>\r\n    </div>\r\n    \r\n    <div id=\"license\">\r\n        <b><a target=\"_blank\" href=\"https://tiia.com.br/\">LEA - Live Environment for Agents</a></b> by <a href=\"mailto: macaroots@gmail.com\">Renato Lenz Costalima</a><br />\r\n        This Source Code Form is <a rel=\"license\" href=\"https://github.com/macaroots/LEAjs.git\">available</a> subject to the terms of the <a rel=\"license\" href=\"https://github.com/macaroots/LEAjs/blob/main/LICENSE\">GNU Affero General Public License v3.0</a>.\r\n    </div>\r\n</body>\r\n</html>','2021-07-02 23:02:01'),(587,'html','<!DOCTYPE html>\r\n<html>\r\n<head>\r\n	<title>LEA - Live Environment for Agents</title>\r\n	<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\" />\r\n	<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\r\n	<script src=\"/socket.io/socket.io.js\"></script>\r\n	\r\n	<meta name=\"google-signin-client_id\" content=\"1058560848585-k19ome8pfq3ddmr8mut359257em0vg52.apps.googleusercontent.com\">\r\n	<script src=\"https://apis.google.com/js/platform.js\" async defer></script>\r\n	\r\n	<script type=\"module\">\r\n	import {Ceed, AskAgent} from  \'<%=baseUrl%>_js/ceed/ceed.js\';\r\n	import {SocketAgent} from  \'<%=baseUrl%>_js/ceed/agent.js\';\r\n	import {SocketBrain} from  \'<%=baseUrl%>_js/ceed/socket_brain.js\';\r\n	window.Ceed = Ceed;\r\n	window.SocketAgent = SocketAgent;\r\n	window.AskAgent = AskAgent;\r\n	window.baseUrl = \'<%=baseUrl%>\';\r\n\r\n	var pathname = window.location.pathname.split(\'/\');\r\n	let paths = pathname.slice(1);\r\n    let controllerName = paths[0];\r\n    let agentName = paths.join(\'/\') + \'Page Page\';\r\n	$(function() {\r\n		Ceed().then(ceed => {\r\n		    let ask = new AskAgent(\'CE\');\r\n			ceed.see(\'set\', [\'ask\', ask]);\r\n			ceed.skills[\'ask\'] = ask;\r\n			ceed.see(\'setLibrary\', new SocketBrain(io()));\r\n			\r\n			Ceed(agentName).then(async agent => {\r\n				window.agent = agent;\r\n				agent.see(\'appendTo\', \'body\');\r\n				\r\n				agent.see(\'getAgent\', \'CE\').then(async ce => {\r\n        		    await ce.see(\'appendTo\', \'body\');\r\n            		agent.see(\'edit\');\r\n            		\r\n        			ceed.see(\'connect\');\r\n        			ceed.see(\'getSocketAgent\', controllerName + \'Controller\');\r\n        		});\r\n			});\r\n			\r\n		});\r\n	});\r\n	</script>\r\n    <script>\r\n	window.clicked = false;\r\n	function onSignIn(googleUser) {\r\n        window.agent.see(\'signIn\', googleUser);\r\n    }\r\n    window.onclick = function () {\r\n        window.clicked = true;\r\n    };\r\n    \r\n    function signOut() {\r\n        window.agent.see(\'signOut\');\r\n    }\r\n	</script>\r\n	<style>\r\n	#auth {\r\n        position: sticky;\r\n        top: 0;\r\n        text-align: right;\r\n    }\r\n    \r\n    #license {\r\n        position: fixed;\r\n        bottom: 8px;\r\n        right: 8px;\r\n        text-align: right;\r\n        width: 420px;\r\n    }\r\n    body {\r\n        padding-bottom: 75px;\r\n    }\r\n	</style>\r\n</head>\r\n<body>\r\n    <form id=\"google\" action=\"//tiia.com.br/LEA/ce/auth/googleLogin\" method=\"post\">\r\n        <input name=\"id\" id=\"id\" type=\"hidden\" />\r\n    </form>\r\n    <header>\r\n        <img src=\"/favicon.ico\" />\r\n        <h1>LEA - Live Environment for Agents</h1>\r\n        by <a href=\"mailto: macaroots@gmail.com\">Renato Lenz Costalima</a>\r\n    </header>\r\n    <p class=\"license\">\r\n        This Source Code Form is <a rel=\"license\" href=\"https://github.com/macaroots/LEAjs.git\">available</a> subject to the terms of the <a rel=\"license\" href=\"https://github.com/macaroots/LEAjs/blob/main/LICENSE\">GNU Affero General Public License v3.0</a>.\r\n    </p>\r\n    \r\n    <p>By logging in, you agree with the <a href=\"/LEA/ce/termos\" target=\"_blank\">Terms & Conditions</a>.</p>\r\n       \r\n    <div>\r\n        <div class=\"g-signin2\" data-onsuccess=\"onSignIn\"></div>\r\n        \r\n        <a class=\"g-signout2\" href=\"#\" onclick=\"signOut();\">Sign out</a>\r\n    </div>\r\n    \r\n    <div id=\"license\">\r\n        <b><a target=\"_blank\" href=\"https://tiia.com.br/\">LEA - Live Environment for Agents</a></b> by <a href=\"mailto: macaroots@gmail.com\">Renato Lenz Costalima</a><br />\r\n        This Source Code Form is <a rel=\"license\" href=\"https://github.com/macaroots/LEAjs.git\">available</a> subject to the terms of the <a rel=\"license\" href=\"https://github.com/macaroots/LEAjs/blob/main/LICENSE\">GNU Affero General Public License v3.0</a>.\r\n    </div>\r\n</body>\r\n</html>','2021-07-02 23:09:19'),(588,'string','AuthPage','2021-07-02 23:09:50'),(589,'string','signOut','2021-07-02 23:09:50'),(590,'js','new (function signOut() {\n	this.act = function (args, resolve, reject) {\n		var auth2 = gapi.auth2.getAuthInstance();\n        auth2.signOut().then(function () {\n            console.log(\'User signed out.\');\n        });\n		resolve();\n	};\n})();','2021-07-02 23:09:50'),(591,'string','signIn','2021-07-02 23:10:21'),(592,'js','new (function signIn() {\n	this.act = function (args, resolve, reject) {\n	    var id_token = googleUser.getAuthResponse().id_token;\n	    document.getElementById(\'id\').value = id_token;\n	    if (window.clicked) {\n            document.getElementById(\'google\').submit();\n        }\n		resolve();\n	};\n})();','2021-07-02 23:10:21'),(593,'js','new (function signIn() {\n	this.act = function (googleUser, resolve, reject) {\n	    var id_token = googleUser.getAuthResponse().id_token;\n	    document.getElementById(\'id\').value = id_token;\n	    if (window.clicked) {\n            document.getElementById(\'google\').submit();\n        }\n		resolve();\n	};\n})();','2021-07-02 23:11:10'),(594,'html','<!DOCTYPE html>\r\n<html>\r\n<head>\r\n	<title>LEA - Live Environment for Agents</title>\r\n	<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\" />\r\n	<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\r\n	<script src=\"/socket.io/socket.io.js\"></script>\r\n	\r\n	<meta name=\"google-signin-client_id\" content=\"1058560848585-4876ls7hgmcbs5vt2tfd7d8jknr6mcr2.apps.googleusercontent.com\">\r\n	<script src=\"https://apis.google.com/js/platform.js\" async defer></script>\r\n	\r\n	<script type=\"module\">\r\n	import {Ceed, AskAgent} from  \'<%=baseUrl%>_js/ceed/ceed.js\';\r\n	import {SocketAgent} from  \'<%=baseUrl%>_js/ceed/agent.js\';\r\n	import {SocketBrain} from  \'<%=baseUrl%>_js/ceed/socket_brain.js\';\r\n	window.Ceed = Ceed;\r\n	window.SocketAgent = SocketAgent;\r\n	window.AskAgent = AskAgent;\r\n	window.baseUrl = \'<%=baseUrl%>\';\r\n\r\n	var pathname = window.location.pathname.split(\'/\');\r\n	let paths = pathname.slice(1);\r\n    let controllerName = paths[0];\r\n    let agentName = paths.join(\'/\') + \'Page Page\';\r\n	$(function() {\r\n		Ceed().then(ceed => {\r\n		    let ask = new AskAgent(\'CE\');\r\n			ceed.see(\'set\', [\'ask\', ask]);\r\n			ceed.skills[\'ask\'] = ask;\r\n			ceed.see(\'setLibrary\', new SocketBrain(io()));\r\n			\r\n			Ceed(agentName).then(async agent => {\r\n				window.agent = agent;\r\n				agent.see(\'appendTo\', \'body\');\r\n				\r\n				agent.see(\'getAgent\', \'CE\').then(async ce => {\r\n        		    await ce.see(\'appendTo\', \'body\');\r\n            		agent.see(\'edit\');\r\n            		\r\n        			ceed.see(\'connect\');\r\n        			ceed.see(\'getSocketAgent\', controllerName + \'Controller\');\r\n        		});\r\n			});\r\n			\r\n		});\r\n	});\r\n	</script>\r\n    <script>\r\n	window.clicked = false;\r\n	function onSignIn(googleUser) {\r\n        window.agent.see(\'signIn\', googleUser);\r\n    }\r\n    window.onclick = function () {\r\n        window.clicked = true;\r\n    };\r\n    \r\n    function signOut() {\r\n        window.agent.see(\'signOut\');\r\n    }\r\n	</script>\r\n	<style>\r\n	#auth {\r\n        position: sticky;\r\n        top: 0;\r\n        text-align: right;\r\n    }\r\n    \r\n    #license {\r\n        position: fixed;\r\n        bottom: 8px;\r\n        right: 8px;\r\n        text-align: right;\r\n        width: 420px;\r\n    }\r\n    body {\r\n        padding-bottom: 75px;\r\n    }\r\n	</style>\r\n</head>\r\n<body>\r\n    <form id=\"google\" action=\"//tiia.com.br/LEA/ce/auth/googleLogin\" method=\"post\">\r\n        <input name=\"id\" id=\"id\" type=\"hidden\" />\r\n    </form>\r\n    <header>\r\n        <img src=\"/favicon.ico\" />\r\n        <h1>LEA - Live Environment for Agents</h1>\r\n        by <a href=\"mailto: macaroots@gmail.com\">Renato Lenz Costalima</a>\r\n    </header>\r\n    <p class=\"license\">\r\n        This Source Code Form is <a rel=\"license\" href=\"https://github.com/macaroots/LEAjs.git\">available</a> subject to the terms of the <a rel=\"license\" href=\"https://github.com/macaroots/LEAjs/blob/main/LICENSE\">GNU Affero General Public License v3.0</a>.\r\n    </p>\r\n    \r\n    <p>By logging in, you agree with the <a href=\"/LEA/ce/termos\" target=\"_blank\">Terms & Conditions</a>.</p>\r\n       \r\n    <div>\r\n        <div class=\"g-signin2\" data-onsuccess=\"onSignIn\"></div>\r\n        \r\n        <a class=\"g-signout2\" href=\"#\" onclick=\"signOut();\">Sign out</a>\r\n    </div>\r\n    \r\n    <div id=\"license\">\r\n        <b><a target=\"_blank\" href=\"https://tiia.com.br/\">LEA - Live Environment for Agents</a></b> by <a href=\"mailto: macaroots@gmail.com\">Renato Lenz Costalima</a><br />\r\n        This Source Code Form is <a rel=\"license\" href=\"https://github.com/macaroots/LEAjs.git\">available</a> subject to the terms of the <a rel=\"license\" href=\"https://github.com/macaroots/LEAjs/blob/main/LICENSE\">GNU Affero General Public License v3.0</a>.\r\n    </div>\r\n</body>\r\n</html>','2021-07-02 23:18:54'),(595,'html','<!DOCTYPE html>\r\n<html>\r\n<head>\r\n	<title>LEA - Live Environment for Agents</title>\r\n	<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\" />\r\n	<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\r\n	<script src=\"/socket.io/socket.io.js\"></script>\r\n	\r\n	<meta name=\"google-signin-client_id\" content=\"1058560848585-4876ls7hgmcbs5vt2tfd7d8jknr6mcr2.apps.googleusercontent.com\">\r\n	<script src=\"https://apis.google.com/js/platform.js\" async defer></script>\r\n	\r\n	<script type=\"module\">\r\n	import {Ceed, AskAgent} from  \'<%=baseUrl%>_js/ceed/ceed.js\';\r\n	import {SocketAgent} from  \'<%=baseUrl%>_js/ceed/agent.js\';\r\n	import {SocketBrain} from  \'<%=baseUrl%>_js/ceed/socket_brain.js\';\r\n	window.Ceed = Ceed;\r\n	window.SocketAgent = SocketAgent;\r\n	window.AskAgent = AskAgent;\r\n	window.baseUrl = \'<%=baseUrl%>\';\r\n\r\n	var pathname = window.location.pathname.split(\'/\');\r\n	let paths = pathname.slice(1);\r\n    let controllerName = paths[0];\r\n    let agentName = paths.join(\'/\') + \'Page Page\';\r\n	$(function() {\r\n		Ceed().then(ceed => {\r\n		    let ask = new AskAgent(\'CE\');\r\n			ceed.see(\'set\', [\'ask\', ask]);\r\n			ceed.skills[\'ask\'] = ask;\r\n			ceed.see(\'setLibrary\', new SocketBrain(io()));\r\n			\r\n			Ceed(agentName).then(async agent => {\r\n				window.agent = agent;\r\n				agent.see(\'appendTo\', \'body\');\r\n				\r\n				agent.see(\'getAgent\', \'CE\').then(async ce => {\r\n        		    await ce.see(\'appendTo\', \'body\');\r\n            		agent.see(\'edit\');\r\n            		\r\n        			ceed.see(\'connect\');\r\n        			ceed.see(\'getSocketAgent\', controllerName + \'Controller\');\r\n        		});\r\n			});\r\n			\r\n		});\r\n	});\r\n	</script>\r\n    <script>\r\n	window.clicked = false;\r\n	function onSignIn(googleUser) {\r\n        window.agent.see(\'signIn\', googleUser);\r\n    }\r\n    window.onclick = function () {\r\n        window.clicked = true;\r\n    };\r\n    \r\n    function signOut() {\r\n        window.agent.see(\'signOut\');\r\n    }\r\n	</script>\r\n	<style>\r\n	#auth {\r\n        position: sticky;\r\n        top: 0;\r\n        text-align: right;\r\n    }\r\n    \r\n    #license {\r\n        position: fixed;\r\n        bottom: 8px;\r\n        right: 8px;\r\n        text-align: right;\r\n        width: 420px;\r\n    }\r\n    body {\r\n        padding-bottom: 75px;\r\n    }\r\n	</style>\r\n</head>\r\n<body>\r\n    <form id=\"google\" action=\"//auth/googleLogin\" method=\"post\">\r\n        <input name=\"id\" id=\"id\" type=\"hidden\" />\r\n    </form>\r\n    <header>\r\n        <img src=\"/favicon.ico\" />\r\n        <h1>LEA - Live Environment for Agents</h1>\r\n        by <a href=\"mailto: macaroots@gmail.com\">Renato Lenz Costalima</a>\r\n    </header>\r\n    <p class=\"license\">\r\n        This Source Code Form is <a rel=\"license\" href=\"https://github.com/macaroots/LEAjs.git\">available</a> subject to the terms of the <a rel=\"license\" href=\"https://github.com/macaroots/LEAjs/blob/main/LICENSE\">GNU Affero General Public License v3.0</a>.\r\n    </p>\r\n    \r\n    <p>By logging in, you agree with the <a href=\"/LEA/ce/termos\" target=\"_blank\">Terms & Conditions</a>.</p>\r\n       \r\n    <div>\r\n        <div class=\"g-signin2\" data-onsuccess=\"onSignIn\"></div>\r\n        \r\n        <a class=\"g-signout2\" href=\"#\" onclick=\"signOut();\">Sign out</a>\r\n    </div>\r\n    \r\n    <div id=\"license\">\r\n        <b><a target=\"_blank\" href=\"https://tiia.com.br/\">LEA - Live Environment for Agents</a></b> by <a href=\"mailto: macaroots@gmail.com\">Renato Lenz Costalima</a><br />\r\n        This Source Code Form is <a rel=\"license\" href=\"https://github.com/macaroots/LEAjs.git\">available</a> subject to the terms of the <a rel=\"license\" href=\"https://github.com/macaroots/LEAjs/blob/main/LICENSE\">GNU Affero General Public License v3.0</a>.\r\n    </div>\r\n</body>\r\n</html>','2021-07-02 23:21:29'),(596,'html','<!DOCTYPE html>\r\n<html>\r\n<head>\r\n	<title>LEA - Live Environment for Agents</title>\r\n	<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\" />\r\n	<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\r\n	<script src=\"/socket.io/socket.io.js\"></script>\r\n	\r\n	<meta name=\"google-signin-client_id\" content=\"1058560848585-4876ls7hgmcbs5vt2tfd7d8jknr6mcr2.apps.googleusercontent.com\">\r\n	<script src=\"https://apis.google.com/js/platform.js\" async defer></script>\r\n	\r\n	<script type=\"module\">\r\n	import {Ceed, AskAgent} from  \'<%=baseUrl%>_js/ceed/ceed.js\';\r\n	import {SocketAgent} from  \'<%=baseUrl%>_js/ceed/agent.js\';\r\n	import {SocketBrain} from  \'<%=baseUrl%>_js/ceed/socket_brain.js\';\r\n	window.Ceed = Ceed;\r\n	window.SocketAgent = SocketAgent;\r\n	window.AskAgent = AskAgent;\r\n	window.baseUrl = \'<%=baseUrl%>\';\r\n\r\n	var pathname = window.location.pathname.split(\'/\');\r\n	let paths = pathname.slice(1);\r\n    let controllerName = paths[0];\r\n    let agentName = paths.join(\'/\') + \'Page Page\';\r\n	$(function() {\r\n		Ceed().then(ceed => {\r\n		    let ask = new AskAgent(\'CE\');\r\n			ceed.see(\'set\', [\'ask\', ask]);\r\n			ceed.skills[\'ask\'] = ask;\r\n			ceed.see(\'setLibrary\', new SocketBrain(io()));\r\n			\r\n			Ceed(agentName).then(async agent => {\r\n				window.agent = agent;\r\n				agent.see(\'appendTo\', \'body\');\r\n				\r\n				agent.see(\'getAgent\', \'CE\').then(async ce => {\r\n        		    await ce.see(\'appendTo\', \'body\');\r\n            		agent.see(\'edit\');\r\n            		\r\n        			ceed.see(\'connect\');\r\n        			ceed.see(\'getSocketAgent\', controllerName + \'Controller\');\r\n        		});\r\n			});\r\n			\r\n		});\r\n	});\r\n	</script>\r\n    <script>\r\n	window.clicked = false;\r\n	function onSignIn(googleUser) {\r\n        window.agent.see(\'signIn\', googleUser);\r\n    }\r\n    window.onclick = function () {\r\n        window.clicked = true;\r\n    };\r\n    \r\n    function signOut() {\r\n        window.agent.see(\'signOut\');\r\n    }\r\n	</script>\r\n	<style>\r\n	#auth {\r\n        position: sticky;\r\n        top: 0;\r\n        text-align: right;\r\n    }\r\n    \r\n    #license {\r\n        position: fixed;\r\n        bottom: 8px;\r\n        right: 8px;\r\n        text-align: right;\r\n        width: 420px;\r\n    }\r\n    body {\r\n        padding-bottom: 75px;\r\n    }\r\n	</style>\r\n</head>\r\n<body>\r\n    <form id=\"google\" action=\"/auth/googleLogin\" method=\"post\">\r\n        <input name=\"id\" id=\"id\" type=\"hidden\" />\r\n    </form>\r\n    <header>\r\n        <img src=\"/favicon.ico\" />\r\n        <h1>LEA - Live Environment for Agents</h1>\r\n        by <a href=\"mailto: macaroots@gmail.com\">Renato Lenz Costalima</a>\r\n    </header>\r\n    <p class=\"license\">\r\n        This Source Code Form is <a rel=\"license\" href=\"https://github.com/macaroots/LEAjs.git\">available</a> subject to the terms of the <a rel=\"license\" href=\"https://github.com/macaroots/LEAjs/blob/main/LICENSE\">GNU Affero General Public License v3.0</a>.\r\n    </p>\r\n    \r\n    <p>By logging in, you agree with the <a href=\"/LEA/ce/termos\" target=\"_blank\">Terms & Conditions</a>.</p>\r\n       \r\n    <div>\r\n        <div class=\"g-signin2\" data-onsuccess=\"onSignIn\"></div>\r\n        \r\n        <a class=\"g-signout2\" href=\"#\" onclick=\"signOut();\">Sign out</a>\r\n    </div>\r\n    \r\n    <div id=\"license\">\r\n        <b><a target=\"_blank\" href=\"https://tiia.com.br/\">LEA - Live Environment for Agents</a></b> by <a href=\"mailto: macaroots@gmail.com\">Renato Lenz Costalima</a><br />\r\n        This Source Code Form is <a rel=\"license\" href=\"https://github.com/macaroots/LEAjs.git\">available</a> subject to the terms of the <a rel=\"license\" href=\"https://github.com/macaroots/LEAjs/blob/main/LICENSE\">GNU Affero General Public License v3.0</a>.\r\n    </div>\r\n</body>\r\n</html>','2021-07-02 23:22:23'),(597,'js','new (function index() {\n	this.act = async function (args, resolve, reject) {\n		let req = args[0];\n		let res = args[1];\n		\n		let ejs = (await import(\'ejs\')).default;\n		\n		let agent = this.agent;\n		\n		let url = \'//\' + req.headers.host + \'/\';\n		\n		const CLIENT_ID = await agent.see(\'CLIENT_ID\');\n		\n		res.send(ejs.render(await agent.see(\'indexView\'), {agent: agent, baseUrl: url, CLIENT_ID: CLIENT_ID}));\n		resolve();\n	};\n})();','2021-07-02 23:49:33'),(598,'html','<!DOCTYPE html>\r\n<html>\r\n<head>\r\n	<title>LEA - Live Environment for Agents</title>\r\n	<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\" />\r\n	<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\r\n	<script src=\"/socket.io/socket.io.js\"></script>\r\n	\r\n	<meta name=\"google-signin-client_id\" content=\"<%=CLIENT_ID%>\">\r\n	<script src=\"https://apis.google.com/js/platform.js\" async defer></script>\r\n	\r\n	<script type=\"module\">\r\n	import {Ceed, AskAgent} from  \'<%=baseUrl%>_js/ceed/ceed.js\';\r\n	import {SocketAgent} from  \'<%=baseUrl%>_js/ceed/agent.js\';\r\n	import {SocketBrain} from  \'<%=baseUrl%>_js/ceed/socket_brain.js\';\r\n	window.Ceed = Ceed;\r\n	window.SocketAgent = SocketAgent;\r\n	window.AskAgent = AskAgent;\r\n	window.baseUrl = \'<%=baseUrl%>\';\r\n\r\n	var pathname = window.location.pathname.split(\'/\');\r\n	let paths = pathname.slice(1);\r\n    let controllerName = paths[0];\r\n    let agentName = paths.join(\'/\') + \'Page Page\';\r\n	$(function() {\r\n		Ceed().then(ceed => {\r\n		    let ask = new AskAgent(\'CE\');\r\n			ceed.see(\'set\', [\'ask\', ask]);\r\n			ceed.skills[\'ask\'] = ask;\r\n			ceed.see(\'setLibrary\', new SocketBrain(io()));\r\n			\r\n			Ceed(agentName).then(async agent => {\r\n				window.agent = agent;\r\n				agent.see(\'appendTo\', \'body\');\r\n				\r\n				agent.see(\'getAgent\', \'CE\').then(async ce => {\r\n        		    await ce.see(\'appendTo\', \'body\');\r\n            		agent.see(\'edit\');\r\n            		\r\n        			ceed.see(\'connect\');\r\n        			ceed.see(\'getSocketAgent\', controllerName + \'Controller\');\r\n        		});\r\n			});\r\n			\r\n		});\r\n	});\r\n	</script>\r\n    <script>\r\n	window.clicked = false;\r\n	function onSignIn(googleUser) {\r\n        window.agent.see(\'signIn\', googleUser);\r\n    }\r\n    window.onclick = function () {\r\n        window.clicked = true;\r\n    };\r\n    \r\n    function signOut() {\r\n        window.agent.see(\'signOut\');\r\n    }\r\n	</script>\r\n	<style>\r\n	#auth {\r\n        position: sticky;\r\n        top: 0;\r\n        text-align: right;\r\n    }\r\n    \r\n    #license {\r\n        position: fixed;\r\n        bottom: 8px;\r\n        right: 8px;\r\n        text-align: right;\r\n        width: 420px;\r\n    }\r\n    body {\r\n        padding-bottom: 75px;\r\n    }\r\n	</style>\r\n</head>\r\n<body>\r\n    <form id=\"google\" action=\"/auth/googleLogin\" method=\"post\">\r\n        <input name=\"id\" id=\"id\" type=\"hidden\" />\r\n    </form>\r\n    <header>\r\n        <img src=\"/favicon.ico\" />\r\n        <h1>LEA - Live Environment for Agents</h1>\r\n        by <a href=\"mailto: macaroots@gmail.com\">Renato Lenz Costalima</a>\r\n    </header>\r\n    <p class=\"license\">\r\n        This Source Code Form is <a rel=\"license\" href=\"https://github.com/macaroots/LEAjs.git\">available</a> subject to the terms of the <a rel=\"license\" href=\"https://github.com/macaroots/LEAjs/blob/main/LICENSE\">GNU Affero General Public License v3.0</a>.\r\n    </p>\r\n    \r\n    <p>By logging in, you agree with the <a href=\"/LEA/ce/termos\" target=\"_blank\">Terms & Conditions</a>.</p>\r\n       \r\n    <div>\r\n        <div class=\"g-signin2\" data-onsuccess=\"onSignIn\"></div>\r\n        \r\n        <a class=\"g-signout2\" href=\"#\" onclick=\"signOut();\">Sign out</a>\r\n    </div>\r\n    \r\n    <div id=\"license\">\r\n        <b><a target=\"_blank\" href=\"https://tiia.com.br/\">LEA - Live Environment for Agents</a></b> by <a href=\"mailto: macaroots@gmail.com\">Renato Lenz Costalima</a><br />\r\n        This Source Code Form is <a rel=\"license\" href=\"https://github.com/macaroots/LEAjs.git\">available</a> subject to the terms of the <a rel=\"license\" href=\"https://github.com/macaroots/LEAjs/blob/main/LICENSE\">GNU Affero General Public License v3.0</a>.\r\n    </div>\r\n</body>\r\n</html>','2021-07-02 23:49:35'),(599,'string','googleLogin','2021-07-02 23:49:37'),(600,'js','new (function googleLogin() {\n	this.act = async function (args, resolve, reject) {\n		let req = args[0];\n		let res = args[1];\n		const token = req.body.id;\nconsole.log(\'TOKEN\', token);\n		\n		const CLIENT_ID = await agent.see(\'CLIENT_ID\');\n		\n		const {OAuth2Client} = require(\'google-auth-library\');\n        const client = new OAuth2Client(CLIENT_ID);\n        async function verify() {\n            const ticket = await client.verifyIdToken({\n              idToken: token,\n              audience: CLIENT_ID,  // Specify the CLIENT_ID of the app that accesses the backend\n              // Or, if multiple clients access the backend:\n              //[CLIENT_ID_1, CLIENT_ID_2, CLIENT_ID_3]\n            });\n            const payload = ticket.getPayload();\n            const userid = payload[\'sub\'];\n          \nconsole.log(\'USER\', userid);\n		    res.json({ok: true});\n        }\n        verify().catch(e => {\n            res.json({ok: false, error: \'Invalid ID token.\', e: e});\n        });\n		\n		resolve();\n	};\n})();','2021-07-02 23:49:37'),(601,'string','CLIENT_ID','2021-07-02 23:50:56'),(602,'string','1058560848585-4876ls7hgmcbs5vt2tfd7d8jknr6mcr2.apps.googleusercontent.com','2021-07-02 23:50:56'),(603,'js','new (function googleLogin() {\n	this.act = async function (args, resolve, reject) {\n		let req = args[0];\n		let res = args[1];\n		let agent = this.agent;\n		const token = req.body.id;\nconsole.log(\'TOKEN\', token);\n		\n		const CLIENT_ID = await agent.see(\'CLIENT_ID\');\n		\n		const {OAuth2Client} = require(\'google-auth-library\');\n        const client = new OAuth2Client(CLIENT_ID);\n        async function verify() {\n            const ticket = await client.verifyIdToken({\n              idToken: token,\n              audience: CLIENT_ID,  // Specify the CLIENT_ID of the app that accesses the backend\n              // Or, if multiple clients access the backend:\n              //[CLIENT_ID_1, CLIENT_ID_2, CLIENT_ID_3]\n            });\n            const payload = ticket.getPayload();\n            const userid = payload[\'sub\'];\n          \nconsole.log(\'USER\', userid);\n		    res.json({ok: true});\n        }\n        verify().catch(e => {\n            res.json({ok: false, error: \'Invalid ID token.\', e: e});\n        });\n		\n		resolve();\n	};\n})();','2021-07-02 23:52:42'),(604,'js','new (function googleLogin() {\n	this.act = async function (args, resolve, reject) {\n		let req = args[0];\n		let res = args[1];\n		let agent = this.agent;\n		const token = req.body.id;\nconsole.log(\'TOKEN\', token);\n		\n		const CLIENT_ID = await agent.see(\'CLIENT_ID\');\n		\n		const {OAuth2Client} = (await import(\'google-auth-library\')).default;\n        const client = new OAuth2Client(CLIENT_ID);\n        async function verify() {\n            const ticket = await client.verifyIdToken({\n              idToken: token,\n              audience: CLIENT_ID,  // Specify the CLIENT_ID of the app that accesses the backend\n              // Or, if multiple clients access the backend:\n              //[CLIENT_ID_1, CLIENT_ID_2, CLIENT_ID_3]\n            });\n            const payload = ticket.getPayload();\n            const userid = payload[\'sub\'];\n          \nconsole.log(\'USER\', userid);\n		    res.json({ok: true});\n        }\n        verify().catch(e => {\n            res.json({ok: false, error: \'Invalid ID token.\', e: e});\n        });\n		\n		resolve();\n	};\n})();','2021-07-02 23:57:56'),(605,'js','new (function googleLogin() {\n	this.act = async function (args, resolve, reject) {\n		let req = args[0];\n		let res = args[1];\n		let agent = this.agent;\n		const token = req.body.id;\nconsole.log(\'TOKEN\', token);\n		\n		const CLIENT_ID = await agent.see(\'CLIENT_ID\');\n		\n		const {OAuth2Client} = (await import(\'google-auth-library\')).default;\n        const client = new OAuth2Client(CLIENT_ID);\n        async function verify() {\n            const ticket = await client.verifyIdToken({\n              idToken: token,\n              audience: CLIENT_ID,  // Specify the CLIENT_ID of the app that accesses the backend\n              // Or, if multiple clients access the backend:\n              //[CLIENT_ID_1, CLIENT_ID_2, CLIENT_ID_3]\n            });\n            const payload = ticket.getPayload();\n            const user = payload[\'email\'].split(\'@\')[0];\n          \nconsole.log(\'USER\', user);\n		    res.json({ok: true});\n        }\n        verify().catch(e => {\n            res.json({ok: false, error: \'Invalid ID token.\', e: e});\n        });\n		\n		resolve();\n	};\n})();','2021-07-03 00:05:57'),(606,'js','new (function CLIENT_ID() {\n	this.act = function (args, resolve, reject) {\n		let req = args[0];\n		let res = args[1];\n		\n		resolve(process.env.CLIENT_ID);\n	};\n})();','2021-07-03 03:40:43'),(607,'js','new (function CLIENT_ID() {\n	this.act = function (args, resolve, reject) {\n		let req = args[0];\n		let res = args[1];\n		\n		resolve(process.env.CLIENT_ID);\n	};\n})();','2021-07-03 03:41:15'),(608,'js','new (function CLIENT_ID() {\n	this.act = function (args, resolve, reject) {\n		resolve(process.env.CLIENT_ID);\n	};\n})();','2021-07-03 03:52:07'),(609,'string','help','2021-07-03 15:04:13'),(610,'js','new (function help() {\n	this.act = async function (args, resolve, reject) {\n		const agent = this.agent;\n		const agents = {};\n		{\n    		const brain = agent.mind.getBrain();\n    		const links = brain.reason();\n    		\n    		for (let link of links) {\n    		    let actions = agents[link.a.info];\n    		    if (!actions) {\n    		        actions = [];\n    		        agents[link.a.info] = actions;\n    		    }\n    		    if (!actions.includes(link.r.info)) {\n    		        actions.push(link.r.info);\n    		    }\n    		    \n    		}\n		}\n		\n		const brains = await agent.see(\'getLibraries\');\n		for (let brain of brains) {\n    		const links = brain.reason();\n    		\n    		for (let link of links) {\n    		    let actions = agents[link.a.info];\n    		    if (!actions) {\n    		        actions = [];\n    		        agents[link.a.info] = actions;\n    		    }\n    		    if (!actions.includes(link.r.info)) {\n    		        actions.push(link.r.info);\n    		    }\n    		    \n    		}\n		}\n		\n		console.log(\'help\', agents);\n		resolve(agents);\n	};\n})();','2021-07-03 15:04:13'),(611,'js','new (function help() {\n	this.act = async function (args, resolve, reject) {\n		const agent = this.agent;\n		const agents = {\n		    \'known\': {},\n		    \'learnable\': {}\n		};\n		{\n    		const brain = agent.mind.getBrain();\n    		const links = brain.reason();\n  		\n    		for (let i in links) {\n    		    let link = links[i];\n    		    let actions = agents[\'known\'][link.a.info];\n    		    if (!actions) {\n    		        actions = [];\n    		        agents[\'known\'][link.a.info] = actions;\n    		    }\n    		    if (!actions.includes(link.r.info)) {\n    		        actions.push(link.r.info);\n    		    }\n    		    \n    		}\n		}\n		\n		const brains = await agent.see(\'getLibraries\');\n		for (let brain of brains) {\n    		const links = brain.reason();\n    		\n    		for (let i in links) {\n    		    let link = links[i];\n    		    let actions = agents[\'learnable\'][link.a.info];\n    		    if (!actions) {\n    		        actions = [];\n    		        agents[\'learnable\'][link.a.info] = actions;\n    		    }\n    		    if (!actions.includes(link.r.info)) {\n    		        actions.push(link.r.info);\n    		    }\n    		    \n    		}\n		}\n		\n		console.log(\'help\', agents);\n		resolve(agents);\n	};\n})();','2021-07-04 03:49:33'),(612,'js','new (function reason() {\n	this.act = function (args, resolve, reject) {\n		let agent = this.agent;\n		agent.see(\'getLibrary\').then(brain => {\n		    brain.reason(args).then(resolve);\n		});\n	};\n})();','2021-07-08 18:03:15'),(613,'js','new (function tie() {\n	this.act = function (args, resolve, reject) {\n		let agent = this.agent;\n		agent.see(\'getLibrary\').then(brain => {\n		    brain.tie(args).then(resolve);\n		});\n	};\n})();','2021-07-08 18:11:40'),(614,'js','new (function getSymbolFromRequest() {\n	this.act = async function (args, resolve, reject) {\n		let [req, res] = args;\n		\n		this.agent.see(req.method + \'_getSymbolFromRequest\', args).then(resolve).catch(reject);\n	};\n})();\n','2021-07-08 18:15:17'),(615,'js','new (function reason() {\n	this.act = async function (args, resolve, reject) {\n		let [req, res] = args;\n		let agent = this.agent;\n		let search = await agent.see(\'getLinkFromRequest\', args);\n// console.log(\'REASON\', link);\n		let library = await agent.see(\'getLibrary\');\n	    let links = await library.reason(search);\n	    res.json(links);\n	};\n})();\n','2021-07-08 18:16:18'),(616,'js','\nnew (function brainGet() {\n	this.act = function (args, resolve, reject) {\n		let agent = this.agent;\n		agent.see(\'getLibrary\').then(brain => {\n		    brain.get(args).then(resolve).catch(reject);\n		});\n	};\n})();','2021-07-08 18:18:04'),(617,'js','new (function brainSet() {\n	this.act = function (args, resolve, reject) {\n		let agent = this.agent;\n		agent.see(\'getLibrary\').then(brain => {\n		    brain.set(args).then(resolve).catch(reject);\n		});\n	};\n})();','2021-07-08 18:18:35'),(618,'js','new (function tie() {\n	this.act = async function (args, resolve, reject) {\n		let [ req, res ] = args;\n		let agent = this.agent;\n		let link = await agent.see(\'getLinkFromRequest\', args);\nconsole.log(agent + \' - TIE\', link);\n		let library = await agent.see(\'getLibrary\');\n	    let l = await library.tie(link);\n	    res.json(l);\n		resolve();\n	    \n	};\n})();','2021-07-08 18:23:27'),(619,'html','<!DOCTYPE html>\r\n<html>\r\n<head>\r\n	<title>LEA - Live Environment for Agents</title>\r\n	<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\" />\r\n	<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\r\n	<script src=\"/socket.io/socket.io.js\"></script>\r\n	<script type=\"module\">\r\n	import {Ceed, AskAgent} from  \'<%=baseUrl%>_js/ceed/ceed.js\';\r\n	import {SocketAgent} from  \'<%=baseUrl%>_js/ceed/agent.js\';\r\n	import {SocketBrain} from  \'<%=baseUrl%>_js/ceed/socket_brain.js\';\r\n	window.Ceed = Ceed;\r\n	window.SocketAgent = SocketAgent;\r\n	window.AskAgent = AskAgent;\r\n	window.baseUrl = \'<%=baseUrl%>\';\r\n\r\n	var pathname = window.location.pathname.split(\'/\');\r\n	let paths = pathname.slice(1);\r\n    let controllerName = paths[0];\r\n    let agentName = paths.join(\'/\') + \'Page Page\';\r\n	$(function() {\r\n		Ceed().then(async ceed => {\r\n		    let ask = new AskAgent(\'CE\');\r\n			ceed.skills[\'ask\'] = ask;\r\n			await ceed.see(\'setLibrary\', new SocketBrain(io()));\r\n			await ceed.see(\'set\', [\'ask\', ask]);\r\n			\r\n			let agent = await Ceed(agentName);\r\n			window.agent = agent;\r\n			agent.see(\'appendTo\', \'body\');\r\n			\r\n			let ce = await agent.see(\'getAgent\', \'CE\');\r\n			window.ce = ce;\r\n			await ce.see(\'study\', \'appendTo\');\r\n			await ce.see(\'appendTo\', \'body\');\r\n    		agent.see(\'edit\');\r\n    		\r\n			ceed.see(\'connect\');\r\n			ceed.see(\'getSocketAgent\', controllerName + \'Controller\');\r\n		});\r\n	});\r\n	</script>\r\n	<style>\r\n	#auth {\r\n        position: sticky;\r\n        top: 0;\r\n        text-align: right;\r\n    }\r\n    \r\n    #license {\r\n        position: fixed;\r\n        bottom: 8px;\r\n        right: 8px;\r\n        text-align: right;\r\n        width: 420px;\r\n    }\r\n    body {\r\n        padding-bottom: 75px;\r\n    }\r\n	</style>\r\n</head>\r\n<body>\r\n    <div id=\"auth\">\r\n    </div>\r\n    <div id=\"license\">\r\n        <b><a target=\"_blank\" href=\"https://tiia.com.br/\">LEA - Live Environment for Agents</a></b> by <a href=\"mailto: macaroots@gmail.com\">Renato Lenz Costalima</a><br />\r\n        This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0. If a copy of the MPL was not distributed with this file, You can obtain one at <a rel=\"license\" href=\"https://mozilla.org/MPL/2.0/\">https://mozilla.org/MPL/2.0/</a>.\r\n    </div>\r\n</body>\r\n</html>','2021-07-08 18:24:20'),(620,'js','new (function dontKnow() {\r\n	this.act = function(perception, resolve, reject) {\r\n		let concept = perception.type;\r\n		let agent = this.agent;\r\n		let mind = this.mind;\r\n		let learned = false;\r\n		let fullname = mind.getFullName();\r\n\r\n		console.log(fullname + \' - Don\\\'t know \"\' + concept + \'\"! Searching\');\r\n		mind.set(\'unkowns\', concept);\r\n\r\n		agent.see(\'study\', concept).then(function (learned) {\r\n			console.log(fullname + \' - Studied \"\' + concept + \'\": \' + learned);\r\n			if (!learned) {\r\n				perception.type = \'index\';\r\n			    agent.see(\'ask\', concept);\r\n			}\r\n			mind.see(perception).then(resolve).catch(reject);\r\n		});\r\n	};\r\n})();','2021-07-08 18:26:22'),(621,'string','Teste2Controller','2021-07-08 18:35:20'),(622,'string','novo','2021-07-08 18:35:20'),(623,'js','new (function novo() {\n	this.act = function (args, resolve, reject) {\n		let req = args[0];\n		let res = args[1];\n		res.send(\'novo teste2\');\n		resolve();\n	};\n})();','2021-07-08 18:41:28'),(624,'js','new (function live() {\n	this.act = function (args, callback) {\n		console.log(agent + \'- Naive.live\');\n		callback(this.agent);\n	}\n})();','2021-07-08 18:45:22'),(625,'js','new (function live() {\n	this.act = async function (args, resolve, reject) {\n		let agent = this.agent;\n		console.log(agent + \'- Controller.live\');\n		await agent.see(\'study\', \'dontKnow\');\n		resolve(true);\n	};\n})();','2021-07-08 18:45:43'),(626,'js','new (function live() {\n	this.act = async function (args, resolve, reject) {\n	    /*let MySQLBrain = (await import(\'./mysql_brain.js\')).MySQLBrain;\n	    let options = Object.assign({\n			database: \'xanadu\'\n		}, args);\n		agent.library = new MySQLBrain(options);*/\n		let agent = this.agent;\n		console.log(agent + \'- BrainController.live\');\n		agent.library = (await agent.see(\'getLibraries\'))[0];\n		await Promise.all([\n    		agent.see(\'study\', \'preDispatch\'),\n    		agent.see(\'study\', \'reason\'),\n    		agent.see(\'study\', \'tie\'),\n    		agent.see(\'study\', \'gets\'),\n    		agent.see(\'study\', \'getLinkFromRequest\'),\n    		agent.see(\'study\', \'getSymbolFromRequest\'),\n    		agent.see(\'study\', \'GET_getSymbolFromRequest\'),\n    		agent.see(\'study\', \'POST_getSymbolFromRequest\')\n    	]);\n		resolve(true);\n	};\n})();','2021-07-08 18:46:03'),(627,'js','new (function dontKnow() {\r\n	this.act = function(perception, resolve, reject) {\r\n		let concept = perception.type;\r\n		let agent = this.agent;\r\n		let mind = this.mind;\r\n		let learned = false;\r\n		let fullname = mind.toString();\r\n\r\n		console.log(fullname + \' - Don\\\'t know \"\' + concept + \'\"! Searching\');\r\n		mind.set(\'unkowns\', concept);\r\n\r\n		agent.see(\'study\', concept).then(function (learned) {\r\n			console.log(fullname + \' - Studied \"\' + concept + \'\": \' + learned);\r\n			if (!learned) {\r\n				perception.type = \'index\';\r\n			    agent.see(\'ask\', concept);\r\n			}\r\n			mind.see(perception).then(resolve).catch(reject);\r\n		});\r\n	};\r\n})();','2021-07-08 18:51:22'),(628,'string','dump','2021-07-08 18:53:25'),(629,'js','new (function dump () {\n    function download(filename, text) {\n        var element = document.createElement(\'a\');\n        element.setAttribute(\'href\', \'data:text/plain;charset=utf-8,\' + encodeURIComponent(text));\n        element.setAttribute(\'download\', filename);\n        \n        element.style.display = \'none\';\n        document.body.appendChild(element);\n        \n        element.click();\n        \n        document.body.removeChild(element);\n    }\n	this.act = async function (agentName, callback) {\n	    let HTTPAgent = (await import(\'./agent.js\')).HTTPAgent;\n	    let presenter = this.agent;\n		var controller = new HTTPAgent(\'brain\');\n    	controller.see(\'reason\', {\'a[info]\': agentName}, (links) => {\n    	    presenter.see(\'renderDump\', links, (text) => {\n    	        download(agentName + \'.js\', text);\n    	        //console.log(text);\n    	    });\n    	});\n		callback(true); // return statement\n	};\n})();','2021-07-08 18:53:25'),(630,'string','renderDump','2021-07-08 18:53:49'),(631,'js','new (function renderDump () {\n	this.act = function (links, callback) {\n	    var agents = {};\n    	var symbols = {};\n		for (let link of links) {\n            symbols[link.a.id] = link.a;\n            symbols[link.r.id] = link.r;\n            symbols[link.b.id] = link.b;\n	        if (!(link.a.id in agents)) {\n	            agents[link.a.id] = {};\n	        }\n	        /**/\n	        // somente o último\n	        agents[link.a.id][link.r.id] = [link.b.id];\n	        /*/\n	        // todo o histórico\n	        var methods = agents[link.a.id];\n	        if (!(link.r.id in methods)) {\n	            methods[link.r.id] = [];\n	        }\n	        methods[link.r.id].push(link.b.id);\n	        /**/\n		}\n		\n		var text = \'\';\n		for (let [agent, methods] of Object.entries(agents)) {\n		    var name = symbols[agent].info;\n		    text += `Ceed().then(async agent => {\\n`;\n		    text += `\\tawait Promise.all([\\n`;\n		    for (let [method, values] of Object.entries(methods)) {\n    		    for (let value of values) {\n    		        let answer = symbols[value];\n        		    text += `\\t\\tagent.see(\'write\', [\'${name}.${symbols[method].info}\', new Symbol(0, \'${answer.type}\', \\`${answer.info}\\`)]),\\n`;\n    		    }\n		    }\n		    text += `\\t]);\\n`;\n		    text += `});`;\n		}\n		callback(text); // return statement\n	};\n})();','2021-07-08 18:53:49'),(632,'js','new (function gets() {\n	this.act = async function (args, resolve, reject) {\n		let [req, res] = args;\n		let agent = this.agent;\n		let search = await agent.see(\'getLinkFromRequest\', args);\n		let library = await agent.see(\'getLibrary\');\n	    let symbols = await library.get(search);\n	    \n	    res.json(symbols);\n	};\n})();','2021-07-08 22:09:08'),(633,'js','new (function gets() {\n	this.act = async function (args, resolve, reject) {\n		let [req, res] = args;\n		let agent = this.agent;\n		let search = await agent.see(\'getSymbolFromRequest\', args);\n		let library = await agent.see(\'getLibrary\');\n	    let symbols = await library.get(search);\n	    \n	    res.json(symbols);\n	};\n})();','2021-07-08 22:10:49'),(634,'js','new (function live() {\n	this.act = function (args, callback) {\n		console.log(this.agent + \'- Naive.live\');\n		callback(this.agent);\n	}\n})();','2021-07-08 22:22:31'),(635,'string','Socket','2021-07-08 22:29:24'),(636,'string','wsListen','2021-07-08 22:29:24'),(637,'js','new (function wsListen() {\n	this.act = async function (args, resolve, reject) {\n		let port = parseInt(args);\n		\n		const ws = new (await import(\'ws\'));\n        const wss = new ws.Server({noServer: true});\n        \n        const clients = new Set();\n        \n        http.createServer((req, res) => {\n          // here we only handle websocket connections\n          // in real project we\'d have some other code here to handle non-websocket requests\n          wss.handleUpgrade(req, req.socket, Buffer.alloc(0), onSocketConnect);\n        });\n        \n        function onSocketConnect(ws) {\n          clients.add(ws);\n        \n          ws.on(\'message\', function(message) {\n            message = message.slice(0, 50); // max message length will be 50\n        \n            for(let client of clients) {\n              client.send(message);\n            }\n          });\n        \n          ws.on(\'close\', function() {\n            clients.delete(ws);\n          });\n        }\n		\n		resolve();\n	};\n})();','2021-07-08 22:29:24'),(638,'js','new (function wsListen() {\n	this.act = async function (args, resolve, reject) {\n		let port = parseInt(args);\n		\n		const ws = new (await import(\'ws\')).default;\n        const wss = new ws.Server({noServer: true});\n        \n        const clients = new Set();\n        \n        http.createServer((req, res) => {\n          // here we only handle websocket connections\n          // in real project we\'d have some other code here to handle non-websocket requests\n          wss.handleUpgrade(req, req.socket, Buffer.alloc(0), onSocketConnect);\n        });\n        \n        function onSocketConnect(ws) {\n          clients.add(ws);\n        \n          ws.on(\'message\', function(message) {\n            message = message.slice(0, 50); // max message length will be 50\n        \n            for(let client of clients) {\n              client.send(message);\n            }\n          });\n        \n          ws.on(\'close\', function() {\n            clients.delete(ws);\n          });\n        }\n		\n		resolve();\n	};\n})();','2021-07-08 22:30:35'),(639,'js','new (function wsListen() {\n	this.act = async function (args, resolve, reject) {\n		let port = parseInt(args);\n		const WebSocket = (await import(\'ws\'));\n\n        const wss = new WebSocket.Server({ port: port });\n        \n        wss.on(\'connection\', function connection(ws) {\n          ws.on(\'message\', function incoming(message) {\n            console.log(\'received: %s\', message);\n          });\n        \n          ws.send(\'something\');\n        });\n		\n		resolve();\n	};\n})();','2021-07-08 22:32:49'),(640,'js','new (function wsListen() {\n	this.act = async function (args, resolve, reject) {\n		let port = parseInt(args);\n		const WebSocket = (await import(\'ws\')).default;\n\n        const wss = new WebSocket.Server({ port: port });\n        \n        wss.on(\'connection\', function connection(ws) {\n          ws.on(\'message\', function incoming(message) {\n            console.log(\'received: %s\', message);\n          });\n        \n          ws.send(\'something\');\n        });\n		\n		resolve();\n	};\n})();','2021-07-08 22:32:58'),(641,'js','new (function wsListen() {\n	this.act = async function (args, resolve, reject) {\n		let port = parseInt(args);\n		const WebSocket = (await import(\'ws\')).default;\n\n        const wss = new WebSocket.Server({\n            port: port,\n            noServer: true\n            \n        });\n        \n        wss.on(\'connection\', function connection(ws) {\n          ws.on(\'message\', function incoming(message) {\n            console.log(\'received: %s\', message);\n          });\n        \n          ws.send(\'something\');\n        });\n		\n		resolve();\n	};\n})();','2021-07-08 22:34:54'),(642,'js','new (function wsListen() {\n	this.act = async function (args, resolve, reject) {\n		let port = parseInt(args);\n		const WebSocket = (await import(\'ws\')).default;\n\n        const wss = new WebSocket.Server({\n            port: port,\n            noServer: true\n            \n        });\n        \n        wss.on(\'connection\', function connection(ws) {\n          ws.on(\'message\', function incoming(message) {\n            console.log(\'received: %s\', message);\n            ws.send(\'echo \' + message);\n          });\n        \n          ws.send(\'something\');\n        });\n		\n		resolve();\n	};\n})();','2021-07-08 22:39:06'),(643,'js','new (function wsListen() {\n	this.act = async function (args, resolve, reject) {\n		let port = parseInt(args);\n		const WebSocket = (await import(\'ws\')).default;\n\n        const wss = new WebSocket.Server({\n            port: port,\n            noServer: true\n            \n        });\n        \n        wss.on(\'connection\', function connection(ws) {\n          ws.on(\'message\', function incoming(message) {\n            console.log(\'received: %s\', message);\n            console.log(\'received: %s\', message.a);\n            ws.send(\'echo \' + message);\n          });\n        \n          ws.send(\'something\');\n        });\n		\n		resolve();\n	};\n})();','2021-07-08 22:42:38'),(644,'js','new (function wsListen() {\n	this.act = async function (args, resolve, reject) {\n		let port = parseInt(args);\n		const WebSocket = (await import(\'ws\')).default;\n\n        const wss = new WebSocket.Server({\n            port: port,\n            noServer: true\n            \n        });\n        \n        const agent = this.agent;\n        wss.on(\'connection\', function connection(ws) {\n          agent.see(\'connection\', message);\n        });\n		\n		resolve();\n	};\n})();','2021-07-08 22:44:40'),(645,'js','new (function wsListen() {\n	this.act = async function (args, resolve, reject) {\n		let port = parseInt(args);\n		const WebSocket = (await import(\'ws\')).default;\n\n        const wss = new WebSocket.Server({\n            port: port,\n            noServer: true\n            \n        });\n        \n        const agent = this.agent;\n        wss.on(\'connection\', function connection(ws) {\n          agent.see(\'connection\', ws);\n        });\n		\n		resolve();\n	};\n})();','2021-07-08 22:45:19'),(646,'string','connection','2021-07-08 22:47:43'),(647,'js','new (function connection() {\n	this.act = function (ws, resolve, reject) {\n		console.log(\'Connected: \' + ws);\n		\n        ws.on(\'message\', function incoming(message) {\n            console.log(\'received: %s\', message);\n            console.log(\'received: %s\', message.a);\n            ws.send(\'echo \' + message);\n        });\n        \n        ws.send(\'connected\');\n		resolve();\n	};\n})();','2021-07-08 22:47:43'),(648,'js','new (function dontKnow() {\r\n	this.act = function(perception, resolve, reject) {\r\n		let concept = perception.type;\r\n		let agent = this.agent;\r\n		let mind = this.mind;\r\n		let learned = false;\r\n		let fullname = mind.toString();\r\n\r\n		console.log(fullname + \' - Don\\\'t know \"\' + concept + \'\"! Searching\');\r\n		mind.set(\'unkowns\', concept);\r\n\r\n		agent.see(\'study\', concept).then(function (learned) {\r\n			if (!learned) {\r\n				perception.type = \'index\';\r\n			    agent.see(\'ask\', concept);\r\n			}\r\n			mind.see(perception).then(resolve).catch(reject);\r\n		});\r\n	};\r\n})();','2021-07-09 01:37:51'),(649,'js','new (function live() {\n	this.act = async function (args, resolve, reject) {\n		let agent = this.agent;\n		console.log(agent + \' - Controller.live\');\n		await agent.see(\'study\', \'dontKnow\');\n		resolve(true);\n	};\n})();','2021-07-09 01:38:11'),(650,'string','ejs','2021-07-09 02:28:58'),(651,'js','new (function ejs() {\n	this.act = async function (code, resolve, reject) {\n		const ejs = (await import(\'ejs\')).default;\n		const action = new (function () {\n        	this.act = function (data, innerResolve) {\n        		innerResolve(ejs.render(code, data));\n        	};\n        })();\n        resolve(action);\n	};\n})();','2021-07-09 02:28:58'),(652,'string','TesteController','2021-07-09 02:47:12'),(653,'js','new (function index() {\n	this.act = async function (args, resolve, reject) {\n		let [req, res] = args;\n		\n		\n		let agent = this.agent;\n		\n		let url = \'//\' + req.headers.host + \'/\';\n		\n		let data = {agent: agent, baseUrl: url};\n		let response = await agent.see(\'layout\', {\n		    ...data,\n		    main: await agent.see(\'main\', data)\n		});\n		res.send(response);\n		resolve();\n	};\n})();','2021-07-09 02:47:12'),(654,'string','layout','2021-07-09 02:47:22'),(655,'ejs','<!doctype HTML>\n<html>\n<head>\n    <title>LEA</title>\n</head>\n<body>\n    <main><%-main%></main>\n</body>\n</html>','2021-07-09 02:47:22'),(656,'string','main','2021-07-09 02:47:25'),(657,'ejs','<h1><%=agent%></h1>','2021-07-09 02:47:25'),(658,'js','new (function wsListen() {\n	this.act = async function (args, resolve, reject) {\n		let port = parseInt(args);\n        const agent = this.agent;\n\n		const WebSocket = (await import(\'ws\')).default;\n        const wss = new WebSocket.Server({\n            port: port,\n            noServer: true\n            \n        });\n        console.log(agent + \' - Listening to port \' + port, wss);\n        \n        wss.on(\'connection\', function connection(ws) {\n          agent.see(\'connection\', ws);\n        });\n		\n		resolve();\n	};\n})();','2021-07-09 21:20:36'),(659,'string','LEA','2021-07-10 04:15:58'),(660,'string','onSocketConnection','2021-07-10 04:15:58'),(661,'js','new (function OnSocketConnection() {\n	this.act = function(socket, callback) {\n	    let session = socket.request.session;\n		console.log(\'handshake #\', session);\n		console.log(\'connected #\' + socket.id);\n		let lea = this.agent;\n		\n		socket.on(\'see\', (agent, action, args, callback) => {\n			lea.see(\'onSocketSee\', [agent, action, args]).then(callback);\n		});\n		\n		//socket.join(\'/lea\')\n		let questions = this.agent.questions;\n		for (let agent in questions) {\n			for (let i in questions[agent]) {\n				let key = questions[agent][i];\n				socket.emit(\'question\', [agent, key]);\n			}\n			\n		}\n		\n		callback(true);\n	};\n})();','2021-07-10 04:15:58'),(662,'js','new (function OnSocketConnection() {\n	this.act = function(socket, callback) {\n	    let session = socket.request.session;\n		console.log(\'handshake #\', session);\n		console.log(\'user #\', session.user);\n		console.log(\'connected #\' + socket.id);\n		let lea = this.agent;\n		\n		socket.on(\'see\', (agent, action, args, callback) => {\n			lea.see(\'onSocketSee\', [agent, action, args]).then(callback);\n		});\n		\n		//socket.join(\'/lea\')\n		let questions = this.agent.questions;\n		for (let agent in questions) {\n			for (let i in questions[agent]) {\n				let key = questions[agent][i];\n				socket.emit(\'question\', [agent, key]);\n			}\n			\n		}\n		\n		callback(true);\n	};\n})();','2021-07-10 04:30:39'),(663,'js','new (function EmptyAction() {\n	this.act = function (args, resolve, reject) {\n		let [req, res] = args;\n		// your code here\n		resolve();\n	};\n})();','2021-07-13 14:08:22'),(664,'string','logout','2021-07-13 14:20:53'),(665,'js','new (function logout() {\n	this.act = function (args, resolve, reject) {\n		let [req, res] = args;\n		req.session.destroy();\n		res.send({ok: true, msg: \'Logged out\'});\n		resolve();\n	};\n})();','2021-07-13 14:20:53'),(666,'js','new (function googleLogin() {\n	this.act = async function (args, resolve, reject) {\n		let req = args[0];\n		let res = args[1];\n		let agent = this.agent;\n		const token = req.body.id;\nconsole.log(\'TOKEN\', token);\n		\n		const CLIENT_ID = await agent.see(\'CLIENT_ID\');\n		\n		const {OAuth2Client} = (await import(\'google-auth-library\')).default;\n        const client = new OAuth2Client(CLIENT_ID);\n        async function verify() {\n            const ticket = await client.verifyIdToken({\n              idToken: token,\n              audience: CLIENT_ID,  // Specify the CLIENT_ID of the app that accesses the backend\n              // Or, if multiple clients access the backend:\n              //[CLIENT_ID_1, CLIENT_ID_2, CLIENT_ID_3]\n            });\n            const payload = ticket.getPayload();\n            const user = payload[\'email\'].split(\'@\')[0];\n          \nconsole.log(\'GOOGLE_LOGIN\', user);\n		    req.session.user = user;\n		    res.json({ok: true});\n        }\n        verify().catch(e => {\n		    req.session.destroy();\n            res.json({ok: false, error: \'Invalid ID token.\', e: e});\n        });\n		\n		resolve();\n	};\n})();','2021-07-13 14:22:29'),(667,'string','checkPermission','2021-07-15 23:06:22'),(668,'js','new (function checkPermission() {\n	this.act = function (args, resolve, reject) {\n	    let [agentName, action, target, socket] = args;\n		let prohibited = [\'hearAnswer\', \'write\'];\n		let allow = false;\n		\n		if (!prohibited.includes(action)) {\n		    allow = true;\n		}\n		else {\n		    if (socket.request.session.user) {\n		        allow = true;\n		    }\n		}\n		resolve(allow);\n	};\n})();','2021-07-15 23:06:22'),(669,'string','onSocketSee','2021-07-15 23:07:12'),(670,'js','new (function OnSocketSee() {\n	this.act = async function(args, callback) {\n		let lea = this.agent;\n		\n		if (await lea.see(\'checkPermission\', args)) {\n		    let [agentName, action, target] = args;\n		    let agent = await Ceed(agentName);\n		//console.log(\'socketSee\', agentName, action, target);\n    		agent.see(action, target).then(callback).catch(e => {\n                console.log(\'ERRO SOCKET\', e);\n            });\n		}\n		else {\n            console.log(\'Socket action not allowed!\');\n		}\n	}\n})();','2021-07-15 23:07:12'),(671,'js','new (function OnSocketConnection() {\n	this.act = function(socket, callback) {\n	    let session = socket.request.session;\n		console.log(\'handshake #\', session);\n		console.log(\'user #\', session.user);\n		console.log(\'connected #\' + socket.id);\n		let lea = this.agent;\n		\n		socket.on(\'see\', (agent, action, args, callback) => {\n			lea.see(\'onSocketSee\', [agent, action, args, socket]).then(callback);\n		});\n		\n		//socket.join(\'/lea\')\n		let questions = this.agent.questions;\n		for (let agent in questions) {\n			for (let i in questions[agent]) {\n				let key = questions[agent][i];\n				socket.emit(\'question\', [agent, key]);\n			}\n			\n		}\n		\n		callback(true);\n	};\n})();','2021-07-16 00:14:52'),(672,'js','new (function checkPermission() {\n	this.act = function (args, resolve, reject) {\n	    let [agentName, action, target, socket] = args;\n		let prohibited = [\'hearAnswer\', \'write\', \'tie\'];\n		let allow = false;\n		\n		if (!prohibited.includes(action)) {\n		    allow = true;\n		}\n		else {\n		    if (socket.request.session.user) {\n		        allow = true;\n		    }\n		}\n		resolve(allow);\n	};\n})();','2021-07-16 00:25:39'),(673,'string','user','2021-07-16 00:26:33'),(674,'js','new (function user() {\n	this.act = function (args, resolve, reject) {\n		let [req, res] = args;\n		res.send({user: req.session.user});\n		resolve();\n	};\n})();','2021-07-16 00:26:33'),(675,'html','<!DOCTYPE html>\r\n<html>\r\n<head>\r\n	<title>LEA - Live Environment for Agents</title>\r\n	<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\" />\r\n	<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\r\n	<script src=\"/socket.io/socket.io.js\"></script>\r\n	\r\n	<meta name=\"google-signin-client_id\" content=\"<%=CLIENT_ID%>\">\r\n	<script src=\"https://apis.google.com/js/platform.js\" async defer></script>\r\n	\r\n	<script type=\"module\">\r\n	import {Ceed, AskAgent} from  \'<%=baseUrl%>_js/ceed/ceed.js\';\r\n	import {SocketAgent} from  \'<%=baseUrl%>_js/ceed/agent.js\';\r\n	import {SocketBrain} from  \'<%=baseUrl%>_js/ceed/socket_brain.js\';\r\n	window.Ceed = Ceed;\r\n	window.SocketAgent = SocketAgent;\r\n	window.AskAgent = AskAgent;\r\n	window.baseUrl = \'<%=baseUrl%>\';\r\n\r\n	var pathname = window.location.pathname.split(\'/\');\r\n	let paths = pathname.slice(1);\r\n    let controllerName = paths[0];\r\n    let agentName = paths.join(\'/\') + \'Page Page\';\r\n	$(function() {\r\n		Ceed().then(ceed => {\r\n		    let ask = new AskAgent(\'CE\');\r\n			ceed.see(\'set\', [\'ask\', ask]);\r\n			ceed.skills[\'ask\'] = ask;\r\n			ceed.see(\'setLibrary\', new SocketBrain(io()));\r\n			\r\n			Ceed(agentName).then(async agent => {\r\n				window.agent = agent;\r\n				agent.see(\'appendTo\', \'body\');\r\n				\r\n				agent.see(\'getAgent\', \'CE\').then(async ce => {\r\n        		    await ce.see(\'appendTo\', \'body\');\r\n            		agent.see(\'edit\');\r\n            		\r\n        			ceed.see(\'connect\');\r\n        			ceed.see(\'getSocketAgent\', controllerName + \'Controller\');\r\n        		});\r\n			});\r\n			\r\n		});\r\n	});\r\n	</script>\r\n    <script>\r\n	window.clicked = false;\r\n	function onSignIn(googleUser) {\r\n        window.agent.see(\'signIn\', googleUser);\r\n    }\r\n    window.onclick = function () {\r\n        window.clicked = true;\r\n    };\r\n    \r\n    function signOut() {\r\n        window.agent.see(\'signOut\');\r\n    }\r\n	</script>\r\n	<style>\r\n	#auth {\r\n        position: sticky;\r\n        top: 0;\r\n        text-align: right;\r\n    }\r\n    \r\n    #license {\r\n        position: fixed;\r\n        bottom: 8px;\r\n        right: 8px;\r\n        text-align: right;\r\n        width: 420px;\r\n    }\r\n    body {\r\n        padding-bottom: 75px;\r\n    }\r\n	</style>\r\n</head>\r\n<body>\r\n    <form id=\"google\" action=\"/auth/googleLogin\" method=\"post\">\r\n        <input name=\"id\" id=\"id\" type=\"hidden\" />\r\n    </form>\r\n    <header>\r\n        <img src=\"/favicon.ico\" />\r\n        <h1>LEA - Live Environment for Agents</h1>\r\n        by <a href=\"mailto: macaroots@gmail.com\">Renato Lenz Costalima</a>\r\n    </header>\r\n    <p class=\"license\">\r\n        This <a rel=\"license\" href=\"https://github.com/macaroots/LEAjs.git\">Source Code Form</a> is subject to the terms of the <a rel=\"license\" href=\"https://github.com/macaroots/LEAjs/blob/main/LICENSE\">GNU Affero General Public License v3.0</a>.\r\n    </p>\r\n    <p>By logging in, you agree with the <a href=\"/LEA/ce/termos\" target=\"_blank\">Terms & Conditions</a>.</p>\r\n\r\n    \r\n    <form action=\"/auth/login\" method=\"post\">\r\n        Who are you?<br/>\r\n        <input name=\"username\" />\r\n        <input name=\"password\" type=\"password\" />\r\n        \r\n        <input value=\"Submit\" type=\"submit\" /><br/><br/>or\r\n    </form>       \r\n    <div>\r\n        <div class=\"g-signin2\" data-onsuccess=\"onSignIn\"></div>\r\n        \r\n        <a class=\"g-signout2\" href=\"#\" onclick=\"signOut();\">Sign out</a>\r\n    </div>\r\n    \r\n    <div id=\"license\">\r\n        <b><a target=\"_blank\" href=\"https://tiia.com.br/\">LEA - Live Environment for Agents</a></b> by <a href=\"mailto: macaroots@gmail.com\">Renato Lenz Costalima</a><br />\r\n        This Source Code Form is <a rel=\"license\" href=\"https://github.com/macaroots/LEAjs.git\">available</a> subject to the terms of the <a rel=\"license\" href=\"https://github.com/macaroots/LEAjs/blob/main/LICENSE\">GNU Affero General Public License v3.0</a>.\r\n    </div>\r\n</body>\r\n</html>','2021-07-16 00:36:25'),(676,'string','login','2021-07-16 00:39:45'),(677,'js','new (function login() {\n	this.act = function (args, resolve, reject) {\n		let [req, res] = args;\n		let username = req.body.username;\n		let password = req.body.password;\n		\n		if (password == username + \'123\') {\n		    req.session.user = username;\n		    res.send({ok: true});\n		}\n		else {\n		    req.session.destroy();\n		    res.send({ok: false});\n		}\n		\n		resolve();\n	};\n})();','2021-07-16 00:39:45'),(678,'js','new (function login() {\n	this.act = function (args, resolve, reject) {\n		let [req, res] = args;\n		let username = req.body.username;\n		let password = req.body.password;\n		\n		if (password == username + \'!@#\') {\n		    req.session.user = username;\n		    res.send({ok: true});\n		}\n		else {\n		    req.session.destroy();\n		    res.send({ok: false});\n		}\n		\n		resolve();\n	};\n})();','2021-07-16 00:45:41');
/*!40000 ALTER TABLE `symbols` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2021-07-16 18:37:20
